/**
 * ------------------------ Auto-generated Code ------------------------ 
 *           This code was generated by the Insieme Compiler 
 * --------------------------------------------------------------------- 
 */
#include <algorithm>
#include <alloca.h>
#include <allscale/api/core/data.h>
#include <allscale/api/core/io.h>
#include <allscale/api/user/data/adaptive_grid.h>
#include <allscale/runtime.hpp>
#include <allscale/utils/serializer.h>
#include <allscale/utils/serializer/strings.h>
#include <allscale/utils/serializer/pairs.h>
#include <allscale/utils/serializer/maps.h>
#include <allscale/utils/vector.h>
#include <assert.h>
#include <chrono>
#include <fstream>
#include <iostream>
#include <map>
#include <memory>
#include <sstream>
#include <stdbool.h>
#include <stdint.h>
#include <string>
#include <utility>
#include <vector>

#ifdef __cplusplus
#define INS_INIT(...) __VA_ARGS__
#else
#define INS_INIT(...) (__VA_ARGS__)
#endif
#ifdef __cplusplus
#include <new>
#define INS_INPLACE_INIT(Loc,Type) new(Loc) Type
#else
#define INS_INPLACE_INIT(Loc,Type) *(Loc) = (Type)
#endif
#ifdef __cplusplus
				/** Workaround for libstdc++/libc bug.
				 *  There's an inconsistency between libstdc++ and libc regarding whether
				 *  ::gets is declared or not, which is only evident when using certain
				 *  compilers and language settings
				 *  (tested positively with clang 3.9 --std=c++14 and libc 2.17).
				 */
				#include <initializer_list>  // force libstdc++ to include its config
				#undef _GLIBCXX_HAVE_GETS    // correct broken config
#endif

#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wunused-parameter"


/* ------- Program Code --------- */

struct __wi_main_variant_0;
typedef struct __wi_main_variant_0 __wi_main_variant_0;

struct __wi_main_name {
    static const char* name() { return "__wi_main"; }
};

struct __wi_main_variant_1;
typedef struct __wi_main_variant_1 __wi_main_variant_1;

struct __wi_main_can_split;
typedef struct __wi_main_can_split __wi_main_can_split;

using __wi_main_work = allscale::work_item_description<int32_t, __wi_main_name, allscale::no_serialization, __wi_main_variant_0, __wi_main_variant_1, __wi_main_can_split >;

/* ------- Function Definitions --------- */
int32_t main(int32_t var_0, char** var_1) {
    return allscale::runtime::main_wrapper<__wi_main_work >(var_0, var_1);
}

struct allscale_type_8;
typedef struct allscale_type_8 allscale_type_8;

template<typename T>
struct is_allscale_fixed_sized_array : public std::false_type {};

template<typename T>
struct to_std_array_type;

namespace allscale {
    namespace utils {
        template<typename T>
        struct serializer<T,typename std::enable_if<is_allscale_fixed_sized_array<T>::value,void>::type> {
            using array_t = typename to_std_array_type<T>::type;
            static T load(ArchiveReader& a) {
                return *reinterpret_cast<T*>(&serializer<array_t>::load(a)[0]);
            }
            static void store(ArchiveWriter& a, const T& value) {
                serializer<array_t>::store(a,reinterpret_cast<const array_t&>(value));
            }
        };
    }
}

struct allscale_type_8 {
    char data[13];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_8> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_8> { using type = std::array<char,13u>; };

struct IMP_amdados_colon__colon_Configuration;
typedef struct IMP_amdados_colon__colon_Configuration IMP_amdados_colon__colon_Configuration;

struct IMP_amdados_colon__colon_Configuration_colon__colon_Parameter;
typedef struct IMP_amdados_colon__colon_Configuration_colon__colon_Parameter IMP_amdados_colon__colon_Configuration_colon__colon_Parameter;

typedef enum amdadosConfigurationParamType { amdadosConfigurationParamTypeUNKNOWN_T=0, amdadosConfigurationParamTypeNUMERIC_T=1, amdadosConfigurationParamTypeSTRING_T=2 } amdadosConfigurationParamType;
struct DummyCtorParamType;
typedef struct DummyCtorParamType DummyCtorParamType;

struct IMP_amdados_colon__colon_Configuration_colon__colon_Parameter {
    std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > name;
    std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > svalue;
    double dvalue;
    amdadosConfigurationParamType type;;
    IMP_amdados_colon__colon_Configuration_colon__colon_Parameter();
    IMP_amdados_colon__colon_Configuration_colon__colon_Parameter(IMP_amdados_colon__colon_Configuration_colon__colon_Parameter const& p2) = default;
    IMP_amdados_colon__colon_Configuration_colon__colon_Parameter(IMP_amdados_colon__colon_Configuration_colon__colon_Parameter&& p2) = default;
    IMP_amdados_colon__colon_Configuration_colon__colon_Parameter(std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >&& p2, std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >&& p3, double&& p4, amdadosConfigurationParamType&& p5, DummyCtorParamType p6);
    ~IMP_amdados_colon__colon_Configuration_colon__colon_Parameter() = default;
    IMP_amdados_colon__colon_Configuration_colon__colon_Parameter& operator=(IMP_amdados_colon__colon_Configuration_colon__colon_Parameter const& p2) = default;
    IMP_amdados_colon__colon_Configuration_colon__colon_Parameter& operator=(IMP_amdados_colon__colon_Configuration_colon__colon_Parameter&& p2) = default;
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP_amdados_colon__colon_Configuration_colon__colon_Parameter load(allscale::utils::ArchiveReader& var_0);
};

struct IMP_amdados_colon__colon_Configuration {
    std::map<std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >, IMP_amdados_colon__colon_Configuration_colon__colon_Parameter, std::less<std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > >, std::allocator<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >, IMP_amdados_colon__colon_Configuration_colon__colon_Parameter > > > m_params;;
    IMP_amdados_colon__colon_Configuration();
    IMP_amdados_colon__colon_Configuration(IMP_amdados_colon__colon_Configuration const& p2) = default;
    IMP_amdados_colon__colon_Configuration(IMP_amdados_colon__colon_Configuration&& p2) = default;
    IMP_amdados_colon__colon_Configuration(std::map<std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >, IMP_amdados_colon__colon_Configuration_colon__colon_Parameter, std::less<std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > >, std::allocator<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >, IMP_amdados_colon__colon_Configuration_colon__colon_Parameter > > >&& p2, DummyCtorParamType p3);
    ~IMP_amdados_colon__colon_Configuration() = default;
    void CheckExist(bool p2, const char* p3) const;
    void CheckIntRange(double p2) const;
    void CheckType(IMP_amdados_colon__colon_Configuration_colon__colon_Parameter const& p2, amdadosConfigurationParamType p3) const;
    bool IsInteger(const char* p2) const;
    int32_t IMP_asInt(const char* p2) const;
    double IMP_asDouble(const char* p2) const;
    void PrintParameters() const;
    void ReadConfigFile(std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > const& p2);
    void IMP_SetDouble(const char* p2, double p3);
    void IMP_SetString(const char* p2, const char* p3);
    void SetInt(const char* p2, int32_t p3);
    IMP_amdados_colon__colon_Configuration& operator=(IMP_amdados_colon__colon_Configuration const& p2) = default;
    IMP_amdados_colon__colon_Configuration& operator=(IMP_amdados_colon__colon_Configuration&& p2) = default;
    const char* asCString(const char* p2) const;
    std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > const& asString(const char* p2) const;
    uint64_t asUInt(const char* p2) const;
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP_amdados_colon__colon_Configuration load(allscale::utils::ArchiveReader& var_0);
};

struct allscale_type_122;
typedef struct allscale_type_122 allscale_type_122;

struct allscale_type_122 {
    char data[2];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_122> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_122> { using type = std::array<char,2u>; };

struct allscale_type_168;
typedef struct allscale_type_168 allscale_type_168;

struct allscale_type_168 {
    char data[17];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_168> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_168> { using type = std::array<char,17u>; };

/* ------- Function Definitions --------- */
allscale::utils::Vector<long, 2 > IMP_amdados_colon__colon_GetGridSize(IMP_amdados_colon__colon_Configuration const& var_0) {
    return (allscale::utils::Vector<long, 2 >&&)allscale::utils::Vector<long, 2 >{(int64_t)var_0.IMP_asInt("num_subdomains_x"), (int64_t)var_0.IMP_asInt("num_subdomains_y")};
}
struct allscale_type_125;
typedef struct allscale_type_125 allscale_type_125;

struct allscale_type_125 {
    char data[31];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_125> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_125> { using type = std::array<char,31u>; };

struct allscale_type_72;
typedef struct allscale_type_72 allscale_type_72;

struct allscale_type_72 {
    char data[1];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_72> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_72> { using type = std::array<char,1u>; };

struct allscale_type_74;
typedef struct allscale_type_74 allscale_type_74;

struct allscale_type_74 {
    char data[15];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_74> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_74> { using type = std::array<char,15u>; };

struct allscale_type_87;
typedef struct allscale_type_87 allscale_type_87;

struct allscale_type_87 {
    char data[21];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_87> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_87> { using type = std::array<char,21u>; };

typedef enum __anon_tagtype_homeherbertcodingcallscale_amdadoscodeappincludeamdadosappgeometryh_29_1_IMLOC_homeherbertcodingcallscale_amdadoscodeappincludeamdadosappgeometryh_29_1 { amdadosLayerFine=0, amdadosLayerLow=1 } __anon_tagtype_homeherbertcodingcallscale_amdadoscodeappincludeamdadosappgeometryh_29_1_IMLOC_homeherbertcodingcallscale_amdadoscodeappincludeamdadosappgeometryh_29_1;
struct allscale_type_187;
typedef struct allscale_type_187 allscale_type_187;

struct allscale_type_187 {
    char data[14];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_187> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_187> { using type = std::array<char,14u>; };

struct allscale_type_186;
typedef struct allscale_type_186 allscale_type_186;

struct allscale_type_186 {
    char data[20];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_186> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_186> { using type = std::array<char,20u>; };

struct allscale_type_188;
typedef struct allscale_type_188 allscale_type_188;

struct allscale_type_188 {
    char data[3];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_188> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_188> { using type = std::array<char,3u>; };

struct allscale_type_189;
typedef struct allscale_type_189 allscale_type_189;

struct allscale_type_189 {
    char data[19];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_189> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_189> { using type = std::array<char,19u>; };

struct allscale_type_190;
typedef struct allscale_type_190 allscale_type_190;

struct allscale_type_190 {
    char data[18];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_190> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_190> { using type = std::array<char,18u>; };

/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_InitDependentParams(IMP_amdados_colon__colon_Configuration& var_0) {
    allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > > var_1;
    var_1.setActiveLayer((uint32_t)amdadosLayerFine);
    const allscale::utils::Vector<long, 2 > var_2 = (allscale::utils::Vector<long, 2 >&&)allscale::utils::Vector<long, 2 >{var_1.getActiveLayerSize()};
    const int64_t var_3 = var_2.x;
    const int64_t var_4 = var_2.y;
    var_1.setActiveLayer((uint32_t)amdadosLayerLow);
    const allscale::utils::Vector<long, 2 > var_5 = (allscale::utils::Vector<long, 2 >&&)allscale::utils::Vector<long, 2 >{var_1.getActiveLayerSize()};
    if ((bool)false) {
        std::cerr << "";
    };
    var_0.IMP_SetDouble("resolution_ratio", (double)var_2.x / (double)var_5.x);
    if ((bool)false) {
        std::cerr << "" << "subdomain must be at least 3x3";
    };
    if ((bool)false) {
        std::cerr << "";
    };
    if ((bool)false) {
        std::cerr << "";
    };
    if ((bool)false) {
        std::cerr << "";
    };
    if ((bool)false) {
        std::cerr << "";
    };
    if ((bool)false) {
        std::cerr << "";
    };
    if ((bool)false) {
        std::cerr << "" << "subdomain_x mismatch" << &std::endl;
    };
    if ((bool)false) {
        std::cerr << "" << "subdomain_y mismatch" << &std::endl;
    };
    const allscale::utils::Vector<long, 2 > var_6 = (allscale::utils::Vector<long, 2 >&&)IMP_amdados_colon__colon_GetGridSize(var_0);
    const int64_t var_7 = var_6.x * var_3;
    const int64_t var_8 = var_6.y * var_4;
    const double var_9 = var_0.IMP_asDouble("diffusion_coef");
    if ((bool)false) {
        std::cerr << "";
    };
    var_0.SetInt("global_problem_size", (int32_t)(var_7 * var_8));
    const double var_10 = var_0.IMP_asDouble("domain_size_x") / (double)(var_7 - (int64_t)1);
    const double var_11 = var_0.IMP_asDouble("domain_size_y") / (double)(var_8 - (int64_t)1);
    if ((bool)false) {
        std::cerr << "";
    };
    var_0.IMP_SetDouble("dx", var_10);
    var_0.IMP_SetDouble("dy", var_11);
    const double var_12 = var_0.IMP_asDouble("integration_period") / var_0.IMP_asDouble("integration_nsteps");
    const double var_13 = var_0.IMP_asDouble("flow_model_max_vx");
    const double var_14 = var_0.IMP_asDouble("flow_model_max_vy");
    const double var_15 = std::min(var_12, std::min(std::min(var_10 * var_10, var_11 * var_11) / (2.0E+0 * var_9 + std::numeric_limits<double>::min() / std::pow(std::numeric_limits<double>::epsilon(), 3)), 1.0E+0 / (fabs(var_13) / var_10 + fabs(var_14) / var_11 + std::numeric_limits<double>::min() / std::pow(std::numeric_limits<double>::epsilon(), 3))));
    if ((bool)false) {
        std::cerr << "";
    };
    var_0.IMP_SetDouble("dt", var_15);
    var_0.SetInt("Nt", (int32_t)ceil(var_0.IMP_asDouble("integration_period") / var_15));
}
struct allscale_type_195;
typedef struct allscale_type_195 allscale_type_195;

struct allscale_type_195 {
    char data[48];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_195> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_195> { using type = std::array<char,48u>; };

struct allscale_type_196;
typedef struct allscale_type_196 allscale_type_196;

struct allscale_type_196 {
    char data[6];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_196> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_196> { using type = std::array<char,6u>; };

struct allscale_type_197;
typedef struct allscale_type_197 allscale_type_197;

struct allscale_type_197 {
    char data[46];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_197> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_197> { using type = std::array<char,46u>; };

using data_item_type_1 = allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u >;
REGISTER_DATAITEMSERVER_DECLARATION(data_item_type_1)
REGISTER_DATAITEMSERVER(data_item_type_1)
struct IMP_amdados_colon__colon_Matrix;
typedef struct IMP_amdados_colon__colon_Matrix IMP_amdados_colon__colon_Matrix;

struct IMP_amdados_colon__colon_VectorView;
typedef struct IMP_amdados_colon__colon_VectorView IMP_amdados_colon__colon_VectorView;

struct IMP_amdados_colon__colon_VectorView {
    std::vector<double, std::allocator<double > > data;;
    IMP_amdados_colon__colon_VectorView();
    IMP_amdados_colon__colon_VectorView(int64_t p2);
    IMP_amdados_colon__colon_VectorView(IMP_amdados_colon__colon_VectorView const& p2) = default;
    IMP_amdados_colon__colon_VectorView(IMP_amdados_colon__colon_VectorView&& p2);
    IMP_amdados_colon__colon_VectorView(std::vector<double, std::allocator<double > >&& p2, DummyCtorParamType p3);
    ~IMP_amdados_colon__colon_VectorView() = default;
    void Clear();
    bool Empty() const;
    void Resize(int64_t p2, bool p3);
    bool SameSize(IMP_amdados_colon__colon_VectorView const& p2) const;
    int64_t Size() const;
    IMP_amdados_colon__colon_VectorView& operator=(IMP_amdados_colon__colon_VectorView const& p2);
    double& operator()(int64_t p2);
    double const& operator()(int64_t p2) const;
    double* begin();
    const double* begin() const;
    double* end();
    const double* end() const;
    void store(allscale::utils::ArchiveWriter& p2) const;
    IMP_amdados_colon__colon_VectorView& operator=(IMP_amdados_colon__colon_VectorView&& p2) = default;
    static IMP_amdados_colon__colon_VectorView load(allscale::utils::ArchiveReader& var_0);
};

struct IMP_amdados_colon__colon_Matrix : public IMP_amdados_colon__colon_VectorView {
    int64_t nrows;
    int64_t ncols;;
    IMP_amdados_colon__colon_Matrix();
    IMP_amdados_colon__colon_Matrix(IMP_amdados_colon__colon_Matrix const& p2);
    IMP_amdados_colon__colon_Matrix(IMP_amdados_colon__colon_Matrix&& p2);
    IMP_amdados_colon__colon_Matrix(int64_t p2, int64_t p3);
    ~IMP_amdados_colon__colon_Matrix() = default;
    void Clear();
    bool IsSquare() const;
    int64_t NCols() const;
    int64_t NRows() const;
    void Resize(int64_t p2, int64_t p3, bool p4);
    bool SameSize(IMP_amdados_colon__colon_Matrix const& p2) const;
    bool SameSizeTr(IMP_amdados_colon__colon_Matrix const& p2) const;
    int64_t Size() const;
    IMP_amdados_colon__colon_Matrix& operator=(IMP_amdados_colon__colon_Matrix const& p2);
    double& operator()(int64_t p2, int64_t p3);
    double const& operator()(int64_t p2, int64_t p3) const;
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP_amdados_colon__colon_Matrix load(allscale::utils::ArchiveReader& var_0);
};

using data_item_type_2 = allscale::api::user::data::Grid<IMP_amdados_colon__colon_Matrix, 2u >;
REGISTER_DATAITEMSERVER_DECLARATION(data_item_type_2)
REGISTER_DATAITEMSERVER(data_item_type_2)
struct allscale_type_80;
typedef struct allscale_type_80 allscale_type_80;

struct allscale_type_80 {
    char data[12];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_80> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_80> { using type = std::array<char,12u>; };

/* ------- Function Definitions --------- */
double IMP_amdados_colon__colon_Bound_double_returns_double(double const& var_0, double const& var_1, double const& var_2) {
    (void)0;
    return std::min(std::max(var_0, var_1), var_2);
}
struct allscale_type_321;
typedef struct allscale_type_321 allscale_type_321;

struct allscale_type_321 {
    char data[16];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_321> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_321> { using type = std::array<char,16u>; };

struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_60_27_long_double_long_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_60_27;
typedef struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_60_27_long_double_long_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_60_27 IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_60_27_long_double_long_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_60_27;

typedef int64_t allscale_type_332(double,int64_t);

typedef allscale_type_332* allscale_type_333;

struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_60_27_long_double_long_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_60_27 {
    operator allscale_type_333() const;
    ;
    ;
    int64_t operator()(double p2, int64_t p3) const;
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_60_27_long_double_long_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_60_27 load(allscale::utils::ArchiveReader& var_0);
};

/* ------- Function Definitions --------- */
int32_t IMP_amdados_colon__colon_Round(double var_0) {
    if ((bool)false) {
        std::cerr << "";
    };
    return (int32_t)floor(var_0 + 5.0E-1);
}
struct allscale_type_356;
typedef struct allscale_type_356 allscale_type_356;

struct allscale_type_356 {
    char data[30];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_356> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_356> { using type = std::array<char,30u>; };

/* ------- Function Definitions --------- */
uint64_t IMP_amdados_colon__colon_RandomSeed() {
    return (uint64_t)2063;
}
struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_106_39_std_colon__colon_uniform_real_distribution_lt_double_gt__space__ampersand__std_colon__colon_mersenne_twister_engine_lt_unsigned_space_long_comma__space_32_comma__space_624_comma__space_397_comma__space_31_comma__space_2567483615_comma__space_11_comma__space_4294967295_comma__space_7_comma__space_2636928640_comma__space_15_comma__space_4022730752_comma__space_18_comma__space_1812433253_gt__space__ampersand__double_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_106_39;
typedef struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_106_39_std_colon__colon_uniform_real_distribution_lt_double_gt__space__ampersand__std_colon__colon_mersenne_twister_engine_lt_unsigned_space_long_comma__space_32_comma__space_624_comma__space_397_comma__space_31_comma__space_2567483615_comma__space_11_comma__space_4294967295_comma__space_7_comma__space_2636928640_comma__space_15_comma__space_4022730752_comma__space_18_comma__space_1812433253_gt__space__ampersand__double_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_106_39 IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_106_39_std_colon__colon_uniform_real_distribution_lt_double_gt__space__ampersand__std_colon__colon_mersenne_twister_engine_lt_unsigned_space_long_comma__space_32_comma__space_624_comma__space_397_comma__space_31_comma__space_2567483615_comma__space_11_comma__space_4294967295_comma__space_7_comma__space_2636928640_comma__space_15_comma__space_4022730752_comma__space_18_comma__space_1812433253_gt__space__ampersand__double_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_106_39;

struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_106_39_std_colon__colon_uniform_real_distribution_lt_double_gt__space__ampersand__std_colon__colon_mersenne_twister_engine_lt_unsigned_space_long_comma__space_32_comma__space_624_comma__space_397_comma__space_31_comma__space_2567483615_comma__space_11_comma__space_4294967295_comma__space_7_comma__space_2636928640_comma__space_15_comma__space_4022730752_comma__space_18_comma__space_1812433253_gt__space__ampersand__double_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_106_39 {
    std::uniform_real_distribution<double >& capture_distrib;
    std::mersenne_twister_engine<uint64_t, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u >& capture_gen;;
    double operator()() const;
};

struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_107_39_std_colon__colon_uniform_real_distribution_lt_double_gt__space__ampersand__std_colon__colon_mersenne_twister_engine_lt_unsigned_space_long_comma__space_32_comma__space_624_comma__space_397_comma__space_31_comma__space_2567483615_comma__space_11_comma__space_4294967295_comma__space_7_comma__space_2636928640_comma__space_15_comma__space_4022730752_comma__space_18_comma__space_1812433253_gt__space__ampersand__double_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_107_39;
typedef struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_107_39_std_colon__colon_uniform_real_distribution_lt_double_gt__space__ampersand__std_colon__colon_mersenne_twister_engine_lt_unsigned_space_long_comma__space_32_comma__space_624_comma__space_397_comma__space_31_comma__space_2567483615_comma__space_11_comma__space_4294967295_comma__space_7_comma__space_2636928640_comma__space_15_comma__space_4022730752_comma__space_18_comma__space_1812433253_gt__space__ampersand__double_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_107_39 IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_107_39_std_colon__colon_uniform_real_distribution_lt_double_gt__space__ampersand__std_colon__colon_mersenne_twister_engine_lt_unsigned_space_long_comma__space_32_comma__space_624_comma__space_397_comma__space_31_comma__space_2567483615_comma__space_11_comma__space_4294967295_comma__space_7_comma__space_2636928640_comma__space_15_comma__space_4022730752_comma__space_18_comma__space_1812433253_gt__space__ampersand__double_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_107_39;

struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_107_39_std_colon__colon_uniform_real_distribution_lt_double_gt__space__ampersand__std_colon__colon_mersenne_twister_engine_lt_unsigned_space_long_comma__space_32_comma__space_624_comma__space_397_comma__space_31_comma__space_2567483615_comma__space_11_comma__space_4294967295_comma__space_7_comma__space_2636928640_comma__space_15_comma__space_4022730752_comma__space_18_comma__space_1812433253_gt__space__ampersand__double_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_107_39 {
    std::uniform_real_distribution<double >& capture_distrib;
    std::mersenne_twister_engine<uint64_t, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u >& capture_gen;;
    double operator()() const;
};

/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_InitialGuess(IMP_amdados_colon__colon_Configuration const& var_0, std::vector<double, std::allocator<double > >& var_1, std::vector<double, std::allocator<double > >& var_2, allscale::utils::Vector<long, 2 > const& var_3) {
    std::mersenne_twister_engine<uint64_t, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u > var_4{((uint64_t)((uint32_t)(IMP_amdados_colon__colon_RandomSeed() + (uint64_t)(var_3.x * (int64_t)var_0.IMP_asInt("num_subdomains_y")) + (uint64_t)var_3.y)))};
    std::uniform_real_distribution<double > var_5{(0.0E+0), (1.0E+0)};
    std::generate((__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double > > >&&)var_1.begin(), (__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double > > >&&)var_1.end(), (IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_106_39_std_colon__colon_uniform_real_distribution_lt_double_gt__space__ampersand__std_colon__colon_mersenne_twister_engine_lt_unsigned_space_long_comma__space_32_comma__space_624_comma__space_397_comma__space_31_comma__space_2567483615_comma__space_11_comma__space_4294967295_comma__space_7_comma__space_2636928640_comma__space_15_comma__space_4022730752_comma__space_18_comma__space_1812433253_gt__space__ampersand__double_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_106_39&&)INS_INIT(IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_106_39_std_colon__colon_uniform_real_distribution_lt_double_gt__space__ampersand__std_colon__colon_mersenne_twister_engine_lt_unsigned_space_long_comma__space_32_comma__space_624_comma__space_397_comma__space_31_comma__space_2567483615_comma__space_11_comma__space_4294967295_comma__space_7_comma__space_2636928640_comma__space_15_comma__space_4022730752_comma__space_18_comma__space_1812433253_gt__space__ampersand__double_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_106_39){var_5, var_4});
    std::generate((__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double > > >&&)var_2.begin(), (__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double > > >&&)var_2.end(), (IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_107_39_std_colon__colon_uniform_real_distribution_lt_double_gt__space__ampersand__std_colon__colon_mersenne_twister_engine_lt_unsigned_space_long_comma__space_32_comma__space_624_comma__space_397_comma__space_31_comma__space_2567483615_comma__space_11_comma__space_4294967295_comma__space_7_comma__space_2636928640_comma__space_15_comma__space_4022730752_comma__space_18_comma__space_1812433253_gt__space__ampersand__double_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_107_39&&)INS_INIT(IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_107_39_std_colon__colon_uniform_real_distribution_lt_double_gt__space__ampersand__std_colon__colon_mersenne_twister_engine_lt_unsigned_space_long_comma__space_32_comma__space_624_comma__space_397_comma__space_31_comma__space_2567483615_comma__space_11_comma__space_4294967295_comma__space_7_comma__space_2636928640_comma__space_15_comma__space_4022730752_comma__space_18_comma__space_1812433253_gt__space__ampersand__double_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_107_39){var_5, var_4});
}
struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_90_37_const_space_int_double_double_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_90_37;
typedef struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_90_37_const_space_int_double_double_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_90_37 IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_90_37_const_space_int_double_double_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_90_37;

struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_90_37_const_space_int_double_double_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_90_37 {
    int32_t capture_NN;;
    ;
    ;
    double operator()(double p2) const;
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_90_37_const_space_int_double_double_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_90_37 load(allscale::utils::ArchiveReader& var_0);
};

/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_EvaluateObjective_slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_49_1(double& var_0, std::vector<double, std::allocator<double > >& var_1, std::vector<double, std::allocator<double > > const& var_2, std::vector<double, std::allocator<double > > const& var_3) {
    const int32_t var_4 = (int32_t)var_2.size();
    const int32_t var_5 = var_4 * var_4;
    if ((bool)false) {
        std::cerr << "";
    };
    const double var_6 = sqrt(std::numeric_limits<double>::epsilon());
    var_0 = 0.0E+0;
    var_1.resize((uint64_t)(2 * var_4));
    std::fill((__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double > > >&&)var_1.begin(), (__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double > > >&&)var_1.end(), 0.0E+0);
    {
        for (int32_t var_7 = 0; var_7 < var_4; ++var_7) {
            {
                const double var_8 = 1.0E+0 / (std::pow(var_2.operator[]((uint64_t)var_7), 2) + var_6);
                const double var_9 = 1.0E+0 / (std::pow(1.0E+0 - var_2.operator[]((uint64_t)var_7), 2) + var_6);
                const double var_10 = 1.0E+0 / (std::pow(var_3.operator[]((uint64_t)var_7), 2) + var_6);
                const double var_11 = 1.0E+0 / (std::pow(1.0E+0 - var_3.operator[]((uint64_t)var_7), 2) + var_6);
                var_0 += var_8 + var_9 + var_10 + var_11;
                double var_12 = 0.0E+0;
                double var_13 = 0.0E+0;
                {
                    for (int32_t var_14 = 0; var_14 < var_4; ++var_14) {
                        {
                            double var_15 = var_2.operator[]((uint64_t)var_7) - var_2.operator[]((uint64_t)var_14);
                            double var_16 = var_3.operator[]((uint64_t)var_7) - var_3.operator[]((uint64_t)var_14);
                            double var_17 = var_15 * var_15 + var_16 * var_16 + var_6;
                            var_0 += 1.0E+0 / var_17;
                            var_12 -= var_15 / std::pow(var_17, 2);
                            var_13 -= var_16 / std::pow(var_17, 2);
                        };
                    };
                };
                var_1.operator[]((uint64_t)var_7) = 2.0E+0 * (var_12 - var_2.operator[]((uint64_t)var_7) * std::pow(var_8, 2) + (1.0E+0 - var_2.operator[]((uint64_t)var_7)) * std::pow(var_9, 2));
                var_1.operator[]((uint64_t)(var_7 + var_4)) = 2.0E+0 * (var_13 - var_3.operator[]((uint64_t)var_7) * std::pow(var_10, 2) + (1.0E+0 - var_3.operator[]((uint64_t)var_7)) * std::pow(var_11, 2));
            };
        };
    };
    var_0 /= (double)var_5;
    std::transform((__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double > > >&&)var_1.begin(), (__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double > > >&&)var_1.end(), (__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double > > >&&)var_1.begin(), (IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_90_37_const_space_int_double_double_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_90_37&&)INS_INIT(IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_90_37_const_space_int_double_double_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_90_37){var_5});
}
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_OptimizePointLocations(std::vector<double, std::allocator<double > >& var_0, std::vector<double, std::allocator<double > >& var_1) {
    const int32_t var_2 = (int32_t)var_0.size();
    if ((bool)false) {
        std::cerr << "";
    };
    const double var_3 = 1.0000000000000001E-1;
    const double var_4 = 1.0000000000000001E-1;
    const double var_5 = std::numeric_limits<double>::epsilon() * std::log(var_2);
    double var_6 = 0.0E+0;
    double var_7 = 0.0E+0;
    double var_8 = var_4;
    std::vector<double, std::allocator<double > > var_9{((uint64_t)var_2), (std::allocator<double >{})};
    std::vector<double, std::allocator<double > > var_10{((uint64_t)var_2), (std::allocator<double >{})};
    std::vector<double, std::allocator<double > > var_11{((uint64_t)(2 * var_2)), (std::allocator<double >{})};
    std::vector<double, std::allocator<double > > var_12{((uint64_t)(2 * var_2)), (std::allocator<double >{})};
    IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_EvaluateObjective_slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_49_1(var_6, var_11, var_0, var_1);
    {
        bool var_13 = (bool)true;
        while (var_13 && var_8 > std::numeric_limits<double>::min() / std::pow(std::numeric_limits<double>::epsilon(), 3)) {
            bool var_14 = (bool)true;
            {
                int32_t var_15 = 0;
                while (var_15 < var_2 && var_14) {
                    {
                        var_9.operator[]((uint64_t)var_15) = var_0.operator[]((uint64_t)var_15) - var_8 * var_11.operator[]((uint64_t)var_15);
                        var_10.operator[]((uint64_t)var_15) = var_1.operator[]((uint64_t)var_15) - var_8 * var_11.operator[]((uint64_t)(var_15 + var_2));
                        var_14 = 0.0E+0 <= var_9.operator[]((uint64_t)var_15) && var_9.operator[]((uint64_t)var_15) <= 1.0E+0 && 0.0E+0 <= var_10.operator[]((uint64_t)var_15) && var_10.operator[]((uint64_t)var_15) <= 1.0E+0;
                    };
                    ++var_15;
                };
            };
            if (!var_14) {
                var_8 *= var_3;
                continue;
            };
            IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_EvaluateObjective_slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_49_1(var_7, var_12, var_9, var_10);
            if (var_6 < var_7) {
                var_8 *= var_3;
                continue;
            };
            var_13 = var_6 - var_7 > var_6 * var_5;
            var_0 = var_9;
            var_1 = var_10;
            var_6 = var_7;
            var_11 = var_12;
            var_8 *= 2.0E+0;
        };
    };
}
struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_utils_slash_include_slash_allscale_slash_utils_slash_vector_dot_h_249_26_long_const_space_long_space__ampersand__const_space_long_space__ampersand_;
typedef struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_utils_slash_include_slash_allscale_slash_utils_slash_vector_dot_h_249_26_long_const_space_long_space__ampersand__const_space_long_space__ampersand_ IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_utils_slash_include_slash_allscale_slash_utils_slash_vector_dot_h_249_26_long_const_space_long_space__ampersand__const_space_long_space__ampersand_;

typedef int64_t allscale_type_442(int64_t const&,int64_t const&);

typedef allscale_type_442* allscale_type_443;

struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_utils_slash_include_slash_allscale_slash_utils_slash_vector_dot_h_249_26_long_const_space_long_space__ampersand__const_space_long_space__ampersand_ {
    operator allscale_type_443() const;
    ;
    ;
    int64_t operator()(int64_t const& p2, int64_t const& p3) const;
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_utils_slash_include_slash_allscale_slash_utils_slash_vector_dot_h_249_26_long_const_space_long_space__ampersand__const_space_long_space__ampersand_ load(allscale::utils::ArchiveReader& var_0);
};

/* ------- Function Definitions --------- */
allscale::utils::Vector<long, 2 > IMP_allscale_colon__colon_utils_colon__colon_elementwise_2__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_utils_slash_include_slash_allscale_slash_utils_slash_vector_dot_h_249_26_long_long_long_returns_Vector_lt_long_comma__space_2UL_gt_(allscale::utils::Vector<long, 2 > const& var_0, allscale::utils::Vector<long, 2 > const& index, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_utils_slash_include_slash_allscale_slash_utils_slash_vector_dot_h_249_26_long_const_space_long_space__ampersand__const_space_long_space__ampersand_ const& var_2) {
    allscale::utils::Vector<long, 2 > var_3;
    {
        for (uint32_t var_4 = (uint32_t)0; var_4 < (uint32_t)2ul; ++var_4) {
            var_3.operator[]((uint64_t)var_4) = var_2.operator()(var_0.operator[]((uint64_t)var_4), index.operator[]((uint64_t)var_4));
        };
    };
    return (allscale::utils::Vector<long, 2 >&&)var_3;
}
/* ------- Function Definitions --------- */
allscale::utils::Vector<long, 2 > IMP_allscale_colon__colon_utils_colon__colon_elementwiseDivision_2_long_long_long_returns_Vector_lt_long_comma__space_2UL_gt_(allscale::utils::Vector<long, 2 > const& var_0, allscale::utils::Vector<long, 2 > const& index) {
    return (allscale::utils::Vector<long, 2 >&&)IMP_allscale_colon__colon_utils_colon__colon_elementwise_2__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_utils_slash_include_slash_allscale_slash_utils_slash_vector_dot_h_249_26_long_long_long_returns_Vector_lt_long_comma__space_2UL_gt_(var_0, index, INS_INIT(IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_utils_slash_include_slash_allscale_slash_utils_slash_vector_dot_h_249_26_long_const_space_long_space__ampersand__const_space_long_space__ampersand_){});
}
/* ------- Function Definitions --------- */
allscale::utils::Vector<long, 2 >& IMP_allscale_colon__colon_utils_colon__colon__operator_mod_assign_(allscale::utils::Vector<long, 2 >& var_0, allscale::utils::Vector<long, 2 > const& index) {
    {
        for (uint64_t var_2 = (uint64_t)0; var_2 < 2ul; ++var_2) {
            var_0.operator[](var_2) %= index.operator[](var_2);
        };
    };
    return var_0;
}
/* ------- Function Definitions --------- */
allscale::utils::Vector<long, 2 > IMP_allscale_colon__colon_utils_colon__colon__operator_mod_(allscale::utils::Vector<long, 2 > const& var_0, allscale::utils::Vector<long, 2 > const& index) {
    allscale::utils::Vector<long, 2 > var_2 = var_0;
    return (allscale::utils::Vector<long, 2 > const&)IMP_allscale_colon__colon_utils_colon__colon__operator_mod_assign_(var_2, index);
}
struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61;
typedef struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61 IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61;

struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61 {
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > > capture_sensors;
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<IMP_amdados_colon__colon_Matrix, 2u > > capture_observations;
    std::map<allscale::utils::Vector<long, 2 >, std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, std::less<allscale::utils::Vector<long, 2 > >, std::allocator<std::pair<const allscale::utils::Vector<long, 2 >, std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > > > > > capture_locations;
    int64_t capture_Nt;;
    void operator()(allscale::utils::Vector<long, 2 > const& p2) const;
    void store(allscale::utils::ArchiveWriter& p2) const;
    ;
    ;
    static IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61 load(allscale::utils::ArchiveReader& var_0);
};

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_;
typedef struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_;

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_;
typedef struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_;

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_;
typedef struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_;

struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36_const_space_amdados_colon__colon_Configuration_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36;
typedef struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36_const_space_amdados_colon__colon_Configuration_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36 IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36_const_space_amdados_colon__colon_Configuration_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36;

struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8;
typedef struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8;

struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10;
typedef struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10;

struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7;
typedef struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7;

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ {
    allscale::utils::Vector<long, 2 > _begin;
    allscale::utils::Vector<long, 2 > _end;;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_();
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const& p2) = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_&& p2) = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_(allscale::utils::Vector<long, 2 > const& p2, allscale::utils::Vector<long, 2 > const& p3);
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_(allscale::utils::Vector<long, 2 >&& p2, allscale::utils::Vector<long, 2 >&& p3, DummyCtorParamType p4);
    ~IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_() = default;
    bool IMP_empty_returns_bool() const;
    uint64_t IMP_size_returns_size_t() const;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_& operator=(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const& p2) = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_& operator=(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_&& p2) = default;
    allscale::utils::Vector<long, 2 > const& begin_returns_constallscaleutilsVectorlong2() const;
    bool covers_returns_bool(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const& p2) const;
    allscale::utils::Vector<long, 2 > const& end_returns_constallscaleutilsVectorlong2() const;
    void forEach__Insieme__lambda_homeherbertcodingcallscale_amdadoscodeappsrcscenario_benchmarkcpp_100_61_returns_void(IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61 const& p2) const;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ grow_returns_allscaleapiuseralgorithmdetailrangeallscaleutilsVectorlong2(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const& p2, int32_t p3) const;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ shrink_returns_allscaleapiuseralgorithmdetailrangeallscaleutilsVectorlong2(int32_t p2) const;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ split_returns_fragmentsallscaleutilsVectorlong2(uint64_t p2) const;
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ load(allscale::utils::ArchiveReader& var_0);
    void IMP_forEach__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36_returns_void(IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36_const_space_amdados_colon__colon_Configuration_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36 const& p2) const;
    void IMP_forEach__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_returns_void(IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 const& p2) const;
    void IMP_forEach__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_returns_void(IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 const& p2) const;
    void IMP_forEach__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_returns_void(IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 const& p2) const;
};

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_;
typedef struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_;

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ _range;
    allscale::treeture<void > handle;
    uint64_t depth;;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_();
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const& p2);
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const& p2) = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_&& p2) = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const& p2, allscale::treeture<void > const& p3, uint64_t p4);
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_&& p2, allscale::treeture<void >&& p3, uint64_t&& p4, DummyCtorParamType p5);
    ~IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_() = default;
    operator allscale::treeture<void >() const;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_& operator=(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const& p2) = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_& operator=(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_&& p2) = default;
    uint64_t getDepth_returns_stdsize_t() const;
    allscale::treeture<void > const& getHandle_returns_constcoretask_reference() const;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ getLeft_returns_iteration_referenceallscaleutilsVectorlong2() const;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const& getRange_returns_constrangeallscaleutilsVectorlong2() const;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ getRight_returns_iteration_referenceallscaleutilsVectorlong2() const;
    void wait_returns_void() const;
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ load(allscale::utils::ArchiveReader& var_0);
};

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ : public IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_();
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_&& p2) = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const& p2, allscale::treeture<void >&& p3);
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_&& p2, DummyCtorParamType p3);
    ~IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_();
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_& operator=(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_&& p2) = default;
    void store(allscale::utils::ArchiveWriter& p2) const;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_& operator=(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const& p2) = default;
    static IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ load(allscale::utils::ArchiveReader& var_0);
};

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_SubDependencies_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies;
typedef struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_SubDependencies_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_SubDependencies_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies;

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies;
typedef struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies;

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_dependency;
typedef struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_dependency IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_dependency;

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_dependency {
    ;
    ;
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_dependency load(allscale::utils::ArchiveReader& var_0);
};

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies : public IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_dependency {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies() = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies const& p2) = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies&& p2) = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_dependency&& p2, DummyCtorParamType p3);
    ~IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies() = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies& operator=(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies const& p2) = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies& operator=(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies&& p2) = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_SubDependencies_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies split() const;
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies load(allscale::utils::ArchiveReader& var_0);
};

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_;
typedef struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_;

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ {
    uint64_t depth;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ range;;
    ;
    ;
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ load(allscale::utils::ArchiveReader& var_0);
};

struct __wi_allscale_wi_1_name {
    static const char* name() { return "__wi_allscale_wi_1"; }
};

struct __wi_allscale_wi_1_variant_0;
typedef struct __wi_allscale_wi_1_variant_0 __wi_allscale_wi_1_variant_0;

struct __wi_allscale_wi_1_variant_1;
typedef struct __wi_allscale_wi_1_variant_1 __wi_allscale_wi_1_variant_1;

struct __wi_allscale_wi_1_can_split;
typedef struct __wi_allscale_wi_1_can_split __wi_allscale_wi_1_can_split;

using __wi_allscale_wi_1_work = allscale::work_item_description<void, __wi_allscale_wi_1_name, allscale::do_serialization, __wi_allscale_wi_1_variant_0, __wi_allscale_wi_1_variant_1, __wi_allscale_wi_1_can_split >;

/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_909(allscale::runtime::dependencies const& var_0, hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61 > const& var_1) {
    return allscale::spawn_first_with_dependencies<__wi_allscale_wi_1_work >(var_0, hpx::util::get<0 >(var_1), hpx::util::get<1 >(var_1));
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_pfor_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt___Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61_returns_detail_colon__colon_loop_reference_lt_Vector_lt_long_comma__space_2_gt__space__gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const& var_0, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61 const& var_1, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies const& var_2) {
    return {var_0, allscale::runtime::make_prec_operation<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, void >((hpx::util::tuple<IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61 > const&)INS_INIT(hpx::util::tuple<IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61 >){var_1}, &allscale_fun_909)((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)INS_INIT(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_){(uint64_t)0, var_0})};
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_pfor_long_2__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61_returns_detail_colon__colon_loop_reference_lt_utils_colon__colon_Vector_lt_long_comma__space_2UL_gt__space__gt_(allscale::utils::Vector<long, 2 > const& var_0, allscale::utils::Vector<long, 2 > const& index, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61 const& var_2) {
    return (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_&&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_pfor_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt___Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61_returns_detail_colon__colon_loop_reference_lt_Vector_lt_long_comma__space_2_gt__space__gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{var_0, index}, var_2, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies{});
}
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_GenerateSensorData_slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_47_5(IMP_amdados_colon__colon_Configuration const& var_0, allscale::runtime::DataItemReference<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > >& var_1, allscale::runtime::DataItemReference<allscale::api::user::data::Grid<IMP_amdados_colon__colon_Matrix, 2u > >& var_2) {
    const allscale::utils::Vector<long, 2 > var_3 = (allscale::utils::Vector<long, 2 >&&)IMP_amdados_colon__colon_GetGridSize(var_0);
    const double var_4 = IMP_amdados_colon__colon_Bound_double_returns_double(var_0.IMP_asDouble("sensor_fraction"), 1.0E-3, 7.5E-1);
    const allscale::utils::Vector<long, 2 > var_5{((int64_t)var_0.asUInt("subdomain_x")), ((int64_t)var_0.asUInt("subdomain_y"))};
    IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_60_27_long_double_long_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_60_27 var_6 = (IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_60_27_long_double_long_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_60_27&&)INS_INIT(IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_60_27_long_double_long_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_60_27){};
    const int64_t var_7 = (int64_t)var_0.IMP_asInt("subdomain_x") * var_3.x;
    const int64_t var_8 = (int64_t)var_0.IMP_asInt("subdomain_y") * var_3.y;
    const int64_t var_9 = var_7 * var_8;
    const int32_t var_10 = std::max(IMP_amdados_colon__colon_Round(var_4 * (double)var_9), 1);
    std::cout << "\tfraction of sensor points = " << var_4;
    std::cout << ", #observations = " << var_10 << &std::endl;
    std::vector<double, std::allocator<double > > var_11{((uint64_t)var_10), (std::allocator<double >{})};
    std::vector<double, std::allocator<double > > var_12{((uint64_t)var_10), (std::allocator<double >{})};
    IMP_amdados_colon__colon_InitialGuess(var_0, var_11, var_12, allscale::utils::Vector<long, 2 >{(int64_t)0, (int64_t)0});
    IMP_amdados_colon__colon_OptimizePointLocations(var_11, var_12);
    std::map<allscale::utils::Vector<long, 2 >, std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, std::less<allscale::utils::Vector<long, 2 > >, std::allocator<std::pair<const allscale::utils::Vector<long, 2 >, std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > > > > > var_13;
    {
        for (int32_t var_14 = 0; var_14 < var_10; ++var_14) {
            {
                int64_t var_15 = var_6.operator()(var_11.operator[]((uint64_t)var_14), var_7);
                int64_t var_16 = var_6.operator()(var_12.operator[]((uint64_t)var_14), var_8);
                allscale::utils::Vector<long, 2 > var_17{(var_15), (var_16)};
                allscale::utils::Vector<long, 2 > var_18 = (allscale::utils::Vector<long, 2 >&&)IMP_allscale_colon__colon_utils_colon__colon_elementwiseDivision_2_long_long_long_returns_Vector_lt_long_comma__space_2UL_gt_(var_17, var_5);
                if ((bool)false) {
                    std::cerr << "";
                };
                if ((bool)false) {
                    std::cerr << "";
                };
                var_13.operator[](var_18).push_back(IMP_allscale_colon__colon_utils_colon__colon__operator_mod_(var_17, var_5));
            };
        };
    };
    int64_t var_19 = (int64_t)var_0.asUInt("Nt");
    if ((bool)false) {
        std::cerr << "";
    };
    if ((bool)false) {
        std::cerr << "";
    };
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_pfor_long_2__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61_returns_detail_colon__colon_loop_reference_lt_utils_colon__colon_Vector_lt_long_comma__space_2UL_gt__space__gt_(allscale::utils::Vector<long, 2 >{(int64_t)0, (int64_t)0}, var_3, INS_INIT(IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61){(allscale::runtime::DataItemReference<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > > const&)var_1, (allscale::runtime::DataItemReference<allscale::api::user::data::Grid<IMP_amdados_colon__colon_Matrix, 2u > > const&)var_2, (std::map<allscale::utils::Vector<long, 2 >, std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, std::less<allscale::utils::Vector<long, 2 > >, std::allocator<std::pair<const allscale::utils::Vector<long, 2 >, std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > > > > > const&)var_13, var_19});
}
struct allscale_type_88;
typedef struct allscale_type_88 allscale_type_88;

struct allscale_type_88 {
    char data[22];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_88> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_88> { using type = std::array<char,22u>; };

struct IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_Boundary_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_55_1;
typedef struct IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_Boundary_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_55_1 IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_Boundary_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_55_1;

struct allscale_type_937;
typedef struct allscale_type_937 allscale_type_937;

struct allscale_type_937 {
    bool data[4];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_937> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_937> { using type = std::array<bool,4u>; };

struct IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_Boundary_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_55_1 {
    std::vector<double, std::allocator<double > > myself;
    std::vector<double, std::allocator<double > > remote;
    double rel_diff;
    allscale_type_937 inflow;
    allscale_type_937 outer;;
    ;
    ;
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_Boundary_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_55_1 load(allscale::utils::ArchiveReader& var_0);
};

struct IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1;
typedef struct IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1 IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1;

struct IMP_amdados_colon__colon_KalmanFilter;
typedef struct IMP_amdados_colon__colon_KalmanFilter IMP_amdados_colon__colon_KalmanFilter;

struct IMP_amdados_colon__colon_Cholesky;
typedef struct IMP_amdados_colon__colon_Cholesky IMP_amdados_colon__colon_Cholesky;

struct IMP_amdados_colon__colon_Cholesky {
    IMP_amdados_colon__colon_Matrix m_L;;
    IMP_amdados_colon__colon_Cholesky();
    IMP_amdados_colon__colon_Cholesky(IMP_amdados_colon__colon_Cholesky const& p2) = default;
    IMP_amdados_colon__colon_Cholesky(IMP_amdados_colon__colon_Cholesky&& p2) = default;
    IMP_amdados_colon__colon_Cholesky(IMP_amdados_colon__colon_Matrix&& p2, DummyCtorParamType p3);
    ~IMP_amdados_colon__colon_Cholesky() = default;
    void BatchSolve(IMP_amdados_colon__colon_Matrix& p2, IMP_amdados_colon__colon_Matrix const& p3) const;
    void BatchSolveTr(IMP_amdados_colon__colon_Matrix& p2, IMP_amdados_colon__colon_Matrix const& p3) const;
    void Init(IMP_amdados_colon__colon_Matrix const& p2);
    void Solve(IMP_amdados_colon__colon_VectorView& p2, IMP_amdados_colon__colon_VectorView const& p3) const;
    IMP_amdados_colon__colon_Cholesky& operator=(IMP_amdados_colon__colon_Cholesky const& p2) = default;
    IMP_amdados_colon__colon_Cholesky& operator=(IMP_amdados_colon__colon_Cholesky&& p2) = default;
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP_amdados_colon__colon_Cholesky load(allscale::utils::ArchiveReader& var_0);
};

struct IMP_amdados_colon__colon_LUdecomposition;
typedef struct IMP_amdados_colon__colon_LUdecomposition IMP_amdados_colon__colon_LUdecomposition;

struct IMP_amdados_colon__colon_LUdecomposition {
    IMP_amdados_colon__colon_Matrix m_LU;
    std::vector<int64_t, std::allocator<int64_t > > m_Perm;;
    IMP_amdados_colon__colon_LUdecomposition();
    IMP_amdados_colon__colon_LUdecomposition(IMP_amdados_colon__colon_LUdecomposition const& p2) = default;
    IMP_amdados_colon__colon_LUdecomposition(IMP_amdados_colon__colon_LUdecomposition&& p2) = default;
    IMP_amdados_colon__colon_LUdecomposition(IMP_amdados_colon__colon_Matrix&& p2, std::vector<int64_t, std::allocator<int64_t > >&& p3, DummyCtorParamType p4);
    ~IMP_amdados_colon__colon_LUdecomposition() = default;
    void BatchSolve(IMP_amdados_colon__colon_Matrix& p2, IMP_amdados_colon__colon_Matrix const& p3) const;
    void BatchSolveTr(IMP_amdados_colon__colon_Matrix& p2, IMP_amdados_colon__colon_Matrix const& p3) const;
    void Init(IMP_amdados_colon__colon_Matrix const& p2);
    void Solve(IMP_amdados_colon__colon_VectorView& p2, IMP_amdados_colon__colon_VectorView const& p3) const;
    IMP_amdados_colon__colon_LUdecomposition& operator=(IMP_amdados_colon__colon_LUdecomposition const& p2) = default;
    IMP_amdados_colon__colon_LUdecomposition& operator=(IMP_amdados_colon__colon_LUdecomposition&& p2) = default;
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP_amdados_colon__colon_LUdecomposition load(allscale::utils::ArchiveReader& var_0);
};

struct IMP_amdados_colon__colon_KalmanFilter {
    IMP_amdados_colon__colon_Cholesky m_chol;
    IMP_amdados_colon__colon_LUdecomposition m_lu;
    IMP_amdados_colon__colon_VectorView m_x_tmp;
    IMP_amdados_colon__colon_VectorView m_y;
    IMP_amdados_colon__colon_VectorView m_invSy;
    IMP_amdados_colon__colon_Matrix m_S;
    IMP_amdados_colon__colon_Matrix m_P_tmp;
    IMP_amdados_colon__colon_Matrix m_PHt;
    IMP_amdados_colon__colon_Matrix m_HP;
    IMP_amdados_colon__colon_Matrix m_invSHP;;
    IMP_amdados_colon__colon_KalmanFilter();
    IMP_amdados_colon__colon_KalmanFilter(IMP_amdados_colon__colon_KalmanFilter const& p2) = default;
    IMP_amdados_colon__colon_KalmanFilter(IMP_amdados_colon__colon_KalmanFilter&& p2) = default;
    IMP_amdados_colon__colon_KalmanFilter(IMP_amdados_colon__colon_Cholesky&& p2, IMP_amdados_colon__colon_LUdecomposition&& p3, IMP_amdados_colon__colon_VectorView&& p4, IMP_amdados_colon__colon_VectorView&& p5, IMP_amdados_colon__colon_VectorView&& p6, IMP_amdados_colon__colon_Matrix&& p7, IMP_amdados_colon__colon_Matrix&& p8, IMP_amdados_colon__colon_Matrix&& p9, IMP_amdados_colon__colon_Matrix&& p10, IMP_amdados_colon__colon_Matrix&& p11, DummyCtorParamType p12);
    ~IMP_amdados_colon__colon_KalmanFilter() = default;
    void PropagateStateInverse(IMP_amdados_colon__colon_VectorView& p2, IMP_amdados_colon__colon_Matrix& p3, IMP_amdados_colon__colon_Matrix const& p4, IMP_amdados_colon__colon_Matrix const& p5);
    void SolveFilter(IMP_amdados_colon__colon_VectorView& p2, IMP_amdados_colon__colon_Matrix& p3, IMP_amdados_colon__colon_Matrix const& p4, IMP_amdados_colon__colon_Matrix const& p5, IMP_amdados_colon__colon_VectorView const& p6);
    IMP_amdados_colon__colon_KalmanFilter& operator=(IMP_amdados_colon__colon_KalmanFilter const& p2) = default;
    IMP_amdados_colon__colon_KalmanFilter& operator=(IMP_amdados_colon__colon_KalmanFilter&& p2) = default;
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP_amdados_colon__colon_KalmanFilter load(allscale::utils::ArchiveReader& var_0);
};

struct IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1 {
    IMP_amdados_colon__colon_Matrix field;
    IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_Boundary_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_55_1 boundaries;
    IMP_amdados_colon__colon_KalmanFilter Kalman;
    IMP_amdados_colon__colon_Matrix B;
    IMP_amdados_colon__colon_Matrix P;
    IMP_amdados_colon__colon_Matrix Q;
    IMP_amdados_colon__colon_Matrix H;
    IMP_amdados_colon__colon_Matrix R;
    IMP_amdados_colon__colon_VectorView z;
    std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > > sensors;
    IMP_amdados_colon__colon_LUdecomposition LU;
    IMP_amdados_colon__colon_Matrix tmp_field;
    std::pair<double, double > flow;;
    IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1();
    IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1(IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1 const& p2) = default;
    IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1(IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1&& p2) = default;
    IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1(IMP_amdados_colon__colon_Matrix&& p2, IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_Boundary_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_55_1&& p3, IMP_amdados_colon__colon_KalmanFilter&& p4, IMP_amdados_colon__colon_Matrix&& p5, IMP_amdados_colon__colon_Matrix&& p6, IMP_amdados_colon__colon_Matrix&& p7, IMP_amdados_colon__colon_Matrix&& p8, IMP_amdados_colon__colon_Matrix&& p9, IMP_amdados_colon__colon_VectorView&& p10, std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >&& p11, IMP_amdados_colon__colon_LUdecomposition&& p12, IMP_amdados_colon__colon_Matrix&& p13, std::pair<double, double >&& p14, DummyCtorParamType p15);
    ~IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1() = default;
    IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1& operator=(IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1 const& p2) = default;
    IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1& operator=(IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1&& p2) = default;
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1 load(allscale::utils::ArchiveReader& var_0);
};

using data_item_type_3 = allscale::api::user::data::Grid<IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1, 2u >;
REGISTER_DATAITEMSERVER_DECLARATION(data_item_type_3)
REGISTER_DATAITEMSERVER(data_item_type_3)
using data_item_type_4 = allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u >;
REGISTER_DATAITEMSERVER_DECLARATION(data_item_type_4)
REGISTER_DATAITEMSERVER(data_item_type_4)
struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36_const_space_amdados_colon__colon_Configuration_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36 {
    IMP_amdados_colon__colon_Configuration capture_conf;
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > > capture_sensors;
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > capture_state_field;
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1, 2u > > capture_contexts;;
    void operator()(allscale::utils::Vector<long, 2 > const& p2) const;
    void store(allscale::utils::ArchiveWriter& p2) const;
    ;
    ;
    static IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36_const_space_amdados_colon__colon_Configuration_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36 load(allscale::utils::ArchiveReader& var_0);
};

struct __wi_allscale_wi_2_can_split;
typedef struct __wi_allscale_wi_2_can_split __wi_allscale_wi_2_can_split;

struct __wi_allscale_wi_2_variant_1;
typedef struct __wi_allscale_wi_2_variant_1 __wi_allscale_wi_2_variant_1;

struct __wi_allscale_wi_2_variant_0;
typedef struct __wi_allscale_wi_2_variant_0 __wi_allscale_wi_2_variant_0;

struct __wi_allscale_wi_2_name {
    static const char* name() { return "__wi_allscale_wi_2"; }
};

using __wi_allscale_wi_2_work = allscale::work_item_description<void, __wi_allscale_wi_2_name, allscale::do_serialization, __wi_allscale_wi_2_variant_0, __wi_allscale_wi_2_variant_1, __wi_allscale_wi_2_can_split >;

/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_1141(allscale::runtime::dependencies const& var_0, hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36_const_space_amdados_colon__colon_Configuration_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36 > const& var_1) {
    return allscale::spawn_first_with_dependencies<__wi_allscale_wi_2_work >(var_0, hpx::util::get<0 >(var_1), hpx::util::get<1 >(var_1));
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_pfor_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt___Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36_returns_detail_colon__colon_loop_reference_lt_Vector_lt_long_comma__space_2_gt__space__gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const& var_0, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36_const_space_amdados_colon__colon_Configuration_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36 const& var_1, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies const& var_2) {
    return {var_0, allscale::runtime::make_prec_operation<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, void >((hpx::util::tuple<IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36_const_space_amdados_colon__colon_Configuration_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36 > const&)INS_INIT(hpx::util::tuple<IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36_const_space_amdados_colon__colon_Configuration_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36 >){var_1}, &allscale_fun_1141)((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)INS_INIT(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_){(uint64_t)0, var_0})};
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_pfor_long_2__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36_returns_detail_colon__colon_loop_reference_lt_utils_colon__colon_Vector_lt_long_comma__space_2UL_gt__space__gt_(allscale::utils::Vector<long, 2 > const& var_0, allscale::utils::Vector<long, 2 > const& index, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36_const_space_amdados_colon__colon_Configuration_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36 const& var_2) {
    return (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_&&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_pfor_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt___Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36_returns_detail_colon__colon_loop_reference_lt_Vector_lt_long_comma__space_2_gt__space__gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{var_0, index}, var_2, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies{});
}
struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_749_9_const_space_amdados_colon__colon_Configuration_const_space_unsigned_space_long_const_space_unsigned_space_long_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_749_9;
typedef struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_749_9_const_space_amdados_colon__colon_Configuration_const_space_unsigned_space_long_const_space_unsigned_space_long_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_749_9 IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_749_9_const_space_amdados_colon__colon_Configuration_const_space_unsigned_space_long_const_space_unsigned_space_long_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_749_9;

struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_749_9_const_space_amdados_colon__colon_Configuration_const_space_unsigned_space_long_const_space_unsigned_space_long_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_749_9 {
    IMP_amdados_colon__colon_Configuration capture_conf;
    uint64_t capture_Nsubiter;
    uint64_t capture_Nt;
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1, 2u > > capture_contexts;
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > > capture_sensors;
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<IMP_amdados_colon__colon_Matrix, 2u > > capture_observations;;
    allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > > operator()(int64_t p2, allscale::utils::Vector<long, 2 > const& p3, allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > const& p4) const;
    void store(allscale::utils::ArchiveWriter& p2) const;
    ;
    ;
    static IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_749_9_const_space_amdados_colon__colon_Configuration_const_space_unsigned_space_long_const_space_unsigned_space_long_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_749_9 load(allscale::utils::ArchiveReader& var_0);
};

struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13_bool_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13;
typedef struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13_bool_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13 IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13_bool_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13;

typedef bool allscale_type_1385(allscale::utils::Vector<long, 2 > const&);

typedef allscale_type_1385* allscale_type_1386;

struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13_bool_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13 {
    operator allscale_type_1386() const;
    ;
    ;
    bool operator()(allscale::utils::Vector<long, 2 > const& p2) const;
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13_bool_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13 load(allscale::utils::ArchiveReader& var_0);
};

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2;
typedef struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2 IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2;

struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13_bool_long_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13;
typedef struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13_bool_long_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13 IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13_bool_long_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13;

struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13_bool_long_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13 {
    ;
    ;
    bool operator()(int64_t p2) const;
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13_bool_long_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13 load(allscale::utils::ArchiveReader& var_0);
};

struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13_const_space_unsigned_space_long_void_long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13;
typedef struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13_const_space_unsigned_space_long_void_long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13 IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13_const_space_unsigned_space_long_void_long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13;

struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13_const_space_unsigned_space_long_void_long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13 {
    uint64_t capture_Nsubiter;;
    ;
    ;
    void operator()(int64_t p2, allscale::utils::Vector<long, 2 > const& p3, allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > > const& p4) const;
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13_const_space_unsigned_space_long_void_long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13 load(allscale::utils::ArchiveReader& var_0);
};

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_stencil_reference_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative;
typedef struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_stencil_reference_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_stencil_reference_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative;

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference;
typedef struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference;

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference {
    allscale::treeture<void > handle;;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference();
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference&& p2) = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference(allscale::treeture<void >&& p2);
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference(allscale::treeture<void >&& p2, DummyCtorParamType p3);
    ~IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference();
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference& operator=(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference&& p2) = default;
    allscale::treeture<void > detach();
    bool isDone() const;
    bool isValid() const;
    void wait();
    void store(allscale::utils::ArchiveWriter& p2) const;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference& operator=(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference const& p2) = default;
    static IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference load(allscale::utils::ArchiveReader& var_0);
};

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_stencil_reference_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative : public IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_stencil_reference_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative();
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_stencil_reference_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_stencil_reference_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative const& p2) = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_stencil_reference_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_stencil_reference_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative&& p2) = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_stencil_reference_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative(allscale::treeture<void >&& p2);
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_stencil_reference_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference&& p2, DummyCtorParamType p3);
    ~IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_stencil_reference_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative() = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_stencil_reference_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative& operator=(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_stencil_reference_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative const& p2) = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_stencil_reference_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative& operator=(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_stencil_reference_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative&& p2) = default;
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_stencil_reference_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative load(allscale::utils::ArchiveReader& var_0);
};

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative;
typedef struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative;

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative {
    ;
    ;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_stencil_reference_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative process_allscaleapiuserdataGridstructallscaleapiuserdataAdaptiveGridCelldoublestructallscaleapiuserdataCellConfig2structallscaleapiuserdatalayersstructallscaleapiuserdatalayer11structallscaleapiuserdatalayer88structallscaleapiuserdatalayer222__Insieme__lambda_homeherbertcodingcallscale_amdadoscodeappsrcscenario_simulationcpp_749_9_pack_begin_allscaleapiuseralgorithmObserverlambdaathomeherbertcodingcallscale_amdadoscodeappsrcscenario_simulationcpp76613lambdaathomeherbertcodingcallscale_amdadoscodeappsrcscenario_simulationcpp77413lambdaathomeherbertcodingcallscale_amdadoscodeappsrcscenario_simulationcpp77613_pack_end_returns_stencil_referencestructallscaleapiuseralgorithmimplementationcoarse_grained_iterative(allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >& p2, uint64_t p3, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_749_9_const_space_amdados_colon__colon_Configuration_const_space_unsigned_space_long_const_space_unsigned_space_long_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_749_9 const& p4, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2 const& p5);
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative load(allscale::utils::ArchiveReader& var_0);
};

/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_stencil_reference_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_stencil_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt___Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_749_9_pack_begin__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13_pack_end_pack_begin__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13_pack_end_pack_begin__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13_pack_end_returns_stencil_reference_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative_gt_(allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >& var_0, uint64_t pos, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_749_9_const_space_amdados_colon__colon_Configuration_const_space_unsigned_space_long_const_space_unsigned_space_long_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_749_9 const& var_2, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2 const& var_3) {
    return (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_stencil_reference_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative&&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative{}.process_allscaleapiuserdataGridstructallscaleapiuserdataAdaptiveGridCelldoublestructallscaleapiuserdataCellConfig2structallscaleapiuserdatalayersstructallscaleapiuserdatalayer11structallscaleapiuserdatalayer88structallscaleapiuserdatalayer222__Insieme__lambda_homeherbertcodingcallscale_amdadoscodeappsrcscenario_simulationcpp_749_9_pack_begin_allscaleapiuseralgorithmObserverlambdaathomeherbertcodingcallscale_amdadoscodeappsrcscenario_simulationcpp76613lambdaathomeherbertcodingcallscale_amdadoscodeappsrcscenario_simulationcpp77413lambdaathomeherbertcodingcallscale_amdadoscodeappsrcscenario_simulationcpp77613_pack_end_returns_stencil_referencestructallscaleapiuseralgorithmimplementationcoarse_grained_iterative(var_0, pos, var_2, var_3);
}
struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_unsigned_space_long_void_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42;
typedef struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_unsigned_space_long_void_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42 IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_unsigned_space_long_void_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42;

struct IMP_empty_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3;
typedef struct IMP_empty_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3 IMP_empty_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3;

struct IMP_empty_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3 {
    ;
    ;
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP_empty_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3 load(allscale::utils::ArchiveReader& var_0);
};

struct __wi_allscale_wi_7_variant_1;
typedef struct __wi_allscale_wi_7_variant_1 __wi_allscale_wi_7_variant_1;

struct __wi_allscale_wi_7_variant_0;
typedef struct __wi_allscale_wi_7_variant_0 __wi_allscale_wi_7_variant_0;

struct __wi_allscale_wi_7_name {
    static const char* name() { return "__wi_allscale_wi_7"; }
};

struct __wi_allscale_wi_7_can_split;
typedef struct __wi_allscale_wi_7_can_split __wi_allscale_wi_7_can_split;

using __wi_allscale_wi_7_work = allscale::work_item_description<void, __wi_allscale_wi_7_name, allscale::do_serialization, __wi_allscale_wi_7_variant_0, __wi_allscale_wi_7_variant_1, __wi_allscale_wi_7_can_split >;

struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_unsigned_space_long_void_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42 {
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > capture_state_field;
    std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > capture_filename;
    allscale::utils::Vector<long, 2 > capture_GridSize;
    uint64_t capture_Nt;;
    void operator()() const;
    void store(allscale::utils::ArchiveWriter& p2) const;
    ;
    ;
    static IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_unsigned_space_long_void_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42 load(allscale::utils::ArchiveReader& var_0);
};

/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_1845(allscale::runtime::dependencies const& var_0, hpx::util::tuple<IMP_empty_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_unsigned_space_long_void_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42 > const& var_1) {
    return allscale::spawn_first_with_dependencies<__wi_allscale_wi_7_work >(var_0, hpx::util::get<0 >(var_1), hpx::util::get<1 >(var_1));
}
/* ------- Function Definitions --------- */
allscale::treeture<void > IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_async_allscale_colon__colon_api_colon__colon_core_colon__colon_no_dependencies__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42_returns_core_colon__colon_treeture_lt_std_colon__colon_result_of_t_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_797_colon_42_rparen__space__lparen_void_rparen__gt__space__gt_(allscale::runtime::dependencies&& var_0, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_unsigned_space_long_void_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42 const& var_1) {
    return allscale::runtime::make_prec_operation<IMP_empty_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, void >((hpx::util::tuple<IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_unsigned_space_long_void_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42 > const&)INS_INIT(hpx::util::tuple<IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_unsigned_space_long_void_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42 >){var_1}, &allscale_fun_1845)(std::move(var_0), (IMP_empty_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3 const&)IMP_empty_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3{});
}
/* ------- Function Definitions --------- */
allscale::treeture<void > IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_async__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42_returns_core_colon__colon_treeture_lt_std_colon__colon_result_of_t_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_797_colon_42_rparen__space__lparen_void_rparen__gt__space__gt_(IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_unsigned_space_long_void_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42 const& var_0) {
    return IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_async_allscale_colon__colon_api_colon__colon_core_colon__colon_no_dependencies__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42_returns_core_colon__colon_treeture_lt_std_colon__colon_result_of_t_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_797_colon_42_rparen__space__lparen_void_rparen__gt__space__gt_(allscale::runtime::after(), var_0);
}
struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2 {
    IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13_bool_long_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13 isInterestedInTime;
    IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13_bool_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13 isInterestedInLocation;
    IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13_const_space_unsigned_space_long_void_long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13 trigger;;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2 const& p2) = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2&& p2) = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2(IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13_bool_long_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13 const& p2, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13_bool_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13 const& p3, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13_const_space_unsigned_space_long_void_long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13 const& p4);
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2(IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13_bool_long_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13&& p2, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13_bool_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13&& p3, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13_const_space_unsigned_space_long_void_long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13&& p4, DummyCtorParamType p5);
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2() = default;
    ~IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2() = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2& operator=(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2 const& p2) = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2& operator=(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2&& p2) = default;
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2 load(allscale::utils::ArchiveReader& var_0);
};

/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2 IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_observer__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13_returns_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt_(IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13_bool_long_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13 const& var_0, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13_bool_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13 const& var_1, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13_const_space_unsigned_space_long_void_long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13 const& var_2) {
    return (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2&&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2{var_0, var_1, var_2};
}
struct allscale_type_130;
typedef struct allscale_type_130 allscale_type_130;

struct allscale_type_130 {
    char data[4];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_130> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_130> { using type = std::array<char,4u>; };

struct allscale_type_73;
typedef struct allscale_type_73 allscale_type_73;

struct allscale_type_73 {
    char data[11];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_73> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_73> { using type = std::array<char,11u>; };

struct allscale_type_90;
typedef struct allscale_type_90 allscale_type_90;

struct allscale_type_90 {
    char data[8];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_90> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_90> { using type = std::array<char,8u>; };

struct allscale_type_1749;
typedef struct allscale_type_1749 allscale_type_1749;

struct allscale_type_1749 {
    char data[40];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_1749> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_1749> { using type = std::array<char,40u>; };

struct allscale_type_1747;
typedef struct allscale_type_1747 allscale_type_1747;

struct allscale_type_1747 {
    char data[5];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_1747> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_1747> { using type = std::array<char,5u>; };

struct allscale_type_1748;
typedef struct allscale_type_1748 allscale_type_1748;

struct allscale_type_1748 {
    char data[9];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_1748> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_1748> { using type = std::array<char,9u>; };

/* ------- Function Definitions --------- */
std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > IMP_amdados_colon__colon_MakeFileName(IMP_amdados_colon__colon_Configuration const& var_0, std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > const& var_1) {
    int32_t var_2 = var_0.IMP_asInt("num_subdomains_x") * var_0.IMP_asInt("subdomain_x");
    int32_t var_3 = var_0.IMP_asInt("num_subdomains_y") * var_0.IMP_asInt("subdomain_y");
    std::__cxx11::basic_stringstream<char, std::char_traits<char >, std::allocator<char > > var_4{(std::ios_base::out | std::ios_base::in)};
    *(std::basic_ostream<char, std::char_traits<char > >*)(&var_4) << var_0.asString("output_dir") << (char)'/' << var_1 << "_Nx" << var_2 << "_Ny" << var_3;
    if (var_1 == "sensors") {
        *(std::basic_ostream<char, std::char_traits<char > >*)(&var_4) << ".txt";
    } else {
        if (var_1 == "analytic") {
            *(std::basic_ostream<char, std::char_traits<char > >*)(&var_4) << "_Nt" << var_0.IMP_asInt("Nt") << ".txt";
        } else {
            if (var_1 == "field") {
                *(std::basic_ostream<char, std::char_traits<char > >*)(&var_4) << "_Nt" << var_0.IMP_asInt("Nt") << ".bin";
            } else {
                if ((bool)false) {
                    std::cerr << "" << "unknown entity to make a file name from";
                };
            };
        };
    };
    {
        (void)(var_1 == "field" ? "\n%s%s" : "%s%s");
    };
    return (std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >&&)var_4.str();
}
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_RunDataAssimilation(IMP_amdados_colon__colon_Configuration const& var_0, allscale::runtime::DataItemReference<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > > const& var_1, allscale::runtime::DataItemReference<allscale::api::user::data::Grid<IMP_amdados_colon__colon_Matrix, 2u > > const& var_2) {
    const allscale::utils::Vector<long, 2 > var_3 = (allscale::utils::Vector<long, 2 >&&)IMP_amdados_colon__colon_GetGridSize(var_0);
    const uint64_t var_4 = var_0.asUInt("Nt");
    const uint64_t var_5 = var_0.asUInt("num_sub_iter");
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1, 2u > > var_6 = allscale::runtime::DataItemManager::create<allscale::api::user::data::Grid<IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1, 2u > >(var_3);
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > var_7 = allscale::runtime::DataItemManager::create<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >(var_3);
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_pfor_long_2__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36_returns_detail_colon__colon_loop_reference_lt_utils_colon__colon_Vector_lt_long_comma__space_2UL_gt__space__gt_(allscale::utils::Vector<long, 2 >{(int64_t)0, (int64_t)0}, var_3, INS_INIT(IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36_const_space_amdados_colon__colon_Configuration_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36){var_0, var_1, (allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > const&)var_7, (allscale::runtime::DataItemReference<allscale::api::user::data::Grid<IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1, 2u > > const&)var_6});
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_stencil_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt___Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_749_9_pack_begin__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13_pack_end_pack_begin__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13_pack_end_pack_begin__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13_pack_end_returns_stencil_reference_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative_gt_(var_7, var_4 * var_5, INS_INIT(IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_749_9_const_space_amdados_colon__colon_Configuration_const_space_unsigned_space_long_const_space_unsigned_space_long_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_749_9){var_0, var_5, var_4, (allscale::runtime::DataItemReference<allscale::api::user::data::Grid<IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1, 2u > > const&)var_6, var_1, var_2}, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_observer__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13_returns_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt_(INS_INIT(IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13_bool_long_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13){}, INS_INIT(IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13_bool_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13){}, INS_INIT(IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13_const_space_unsigned_space_long_void_long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13){var_5}));
    std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > var_8 = (std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >&&)IMP_amdados_colon__colon_MakeFileName(var_0, std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >{"field", std::allocator<char >{}});
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_async__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42_returns_core_colon__colon_treeture_lt_std_colon__colon_result_of_t_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_797_colon_42_rparen__space__lparen_void_rparen__gt__space__gt_(INS_INIT(IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_unsigned_space_long_void_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42){(allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > const&)var_7, (std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > const&)var_8, (allscale::utils::Vector<long, 2 > const&)var_3, var_4}).wait();
    std::cout << "Wrote result data to " << var_8 << &std::endl;
    {
        (void)"%s";
    };
}
struct allscale_type_931;
typedef struct allscale_type_931 allscale_type_931;

struct allscale_type_931 {
    char data[34];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_931> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_931> { using type = std::array<char,34u>; };

/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_ScenarioBenchmark(std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > const& var_0, int32_t var_1) {
    {
        (void)"Running scenario \'benchmark\' ...";
    };
    IMP_amdados_colon__colon_Configuration var_2;
    var_2.ReadConfigFile(std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >{var_0.c_str(), std::allocator<char >{}});
    var_2.SetInt("num_subdomains_x", var_1);
    var_2.SetInt("num_subdomains_y", var_1);
    IMP_amdados_colon__colon_InitDependentParams(var_2);
    var_2.PrintParameters();
    int32_t var_3 = (int32_t)var_2.asUInt("Nt");
    std::cout << "Running benchmark based on configuration file \"" << var_0;
    std::cout << "\" with domain size " << var_1 << "x" << var_1;
    std::cout << " for " << var_3 << " time steps ...\n";
    std::cout << "Generating artificial sensory input data ...\n";
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > > var_4 = allscale::runtime::DataItemManager::create<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > >(IMP_amdados_colon__colon_GetGridSize(var_2));
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<IMP_amdados_colon__colon_Matrix, 2u > > var_5 = allscale::runtime::DataItemManager::create<allscale::api::user::data::Grid<IMP_amdados_colon__colon_Matrix, 2u > >(IMP_amdados_colon__colon_GetGridSize(var_2));
    IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_GenerateSensorData_slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_47_5(var_2, var_4, var_5);
    std::cout << "Running benchmark simulation ...\n";
    std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<int64_t, std::ratio<1, 1000000000 > > > var_6 = (std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<int64_t, std::ratio<1, 1000000000 > > >&&)std::chrono::_V2::system_clock::now();
    {
        (void)"Running the simulation with data assimilation ...";
    };
    IMP_amdados_colon__colon_RunDataAssimilation(var_2, var_4, var_5);
    std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<int64_t, std::ratio<1, 1000000000 > > > var_7 = (std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<int64_t, std::ratio<1, 1000000000 > > >&&)std::chrono::_V2::system_clock::now();
    std::chrono::duration<int64_t, std::ratio<1, 1000000000 > > var_8 = (std::chrono::duration<int64_t, std::ratio<1, 1000000000 > > const&)(var_7 - var_6);
    double var_9 = (double)((float)std::chrono::duration_cast<std::chrono::duration<int64_t, std::ratio<1, 1000 > >, int64_t, std::ratio<1, 1000000000 > >(var_8).count() / 1.0E+3f);
    std::cout << "Simulation took " << var_9 << "s\n";
    double var_10 = (double)(var_1 * var_1 * var_3) / var_9;
    std::cout << "Throughput: " << var_10 << " sub-domains/s\n";
}
/* ------- Function Definitions --------- */
int32_t allscale_fun_5(int32_t var_0, char** var_1) {
    { };
    { };
    std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > var_2 = (std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >&&)std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >{"amdados.conf", std::allocator<char >{}};
    int32_t var_3 = 2;
    IMP_amdados_colon__colon_ScenarioBenchmark(var_2, var_3);
    return 0;
}
ALLSCALE_REGISTER_TREETURE_TYPE(int32_t)
/* ------- Function Definitions --------- */
allscale::treeture<int32_t > allscale_fun_3(hpx::util::tuple<int32_t, char** > const& var_0) {
    return allscale::treeture<int32_t >(allscale_fun_5(hpx::util::get<0 >(var_0), hpx::util::get<1 >(var_0)));
}
struct __wi_main_variant_0 {
    static allscale::treeture<int32_t > execute(hpx::util::tuple<int32_t, char** > const& var_0);
    static constexpr bool valid = true;
};

struct DummyCtorParamType {
    ;
    ;
};

/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_amdados_colon__colon_Configuration_colon__colon_Parameter::IMP_amdados_colon__colon_Configuration_colon__colon_Parameter() : name(), svalue(), dvalue(0.0E+0), type(amdadosConfigurationParamTypeUNKNOWN_T) { }
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_Configuration_colon__colon_Parameter::store(allscale::utils::ArchiveWriter& var_1) const {
    var_1.write<std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > >((*this).name);
    var_1.write<std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > >((*this).svalue);
    var_1.write<double >((*this).dvalue);
    var_1.write<amdadosConfigurationParamType >((*this).type);
}
/* ------- Function Definitions --------- */
IMP_amdados_colon__colon_Configuration_colon__colon_Parameter::IMP_amdados_colon__colon_Configuration_colon__colon_Parameter(std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >&& var_1, std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >&& var_2, double&& var_3, amdadosConfigurationParamType&& var_4, DummyCtorParamType var_5) : name(var_1), svalue(var_2), dvalue(var_3), type(var_4) { }
/* ------- Function Definitions --------- */
IMP_amdados_colon__colon_Configuration_colon__colon_Parameter IMP_amdados_colon__colon_Configuration_colon__colon_Parameter::load(allscale::utils::ArchiveReader& var_0) {
    std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > var_1 = var_0.read<std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > >();
    std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > var_2 = var_0.read<std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > >();
    double var_3 = var_0.read<double >();
    amdadosConfigurationParamType var_4 = var_0.read<amdadosConfigurationParamType >();
    DummyCtorParamType var_5;
    return {std::move(var_1), std::move(var_2), std::move(var_3), std::move(var_4), var_5};
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_Configuration::PrintParameters() const { }
struct allscale_type_109;
typedef struct allscale_type_109 allscale_type_109;

struct allscale_type_109 {
    char data[42];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_109> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_109> { using type = std::array<char,42u>; };

struct allscale_type_123;
typedef struct allscale_type_123 allscale_type_123;

struct allscale_type_123 {
    char data[24];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_123> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_123> { using type = std::array<char,24u>; };

struct allscale_type_146;
typedef struct allscale_type_146 allscale_type_146;

struct allscale_type_146 {
    char data[41];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_146> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_146> { using type = std::array<char,41u>; };

struct allscale_type_81;
typedef struct allscale_type_81 allscale_type_81;

struct allscale_type_81 {
    char data[28];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_81> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_81> { using type = std::array<char,28u>; };

/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_Configuration::ReadConfigFile(std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > const& var_1) {
    std::basic_fstream<char, std::char_traits<char > > var_2{(var_1), (std::ios_base::in)};
    if ((bool)false) {
        std::cerr << "" << "ERROR: failed to open configuration file " << var_1 << &std::endl;
    };
    int32_t var_3 = 1;
    std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > var_4;
    std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > var_5;
    std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > var_6;
    while ((*(std::basic_ios<char, std::char_traits<char > >*)(&std::getline(*(std::basic_istream<char, std::char_traits<char > >*)(&var_2), var_4)))) {
        if (var_4.empty()) {
            continue;
        };
        std::__cxx11::basic_stringstream<char, std::char_traits<char >, std::allocator<char > > var_7{(var_4), (std::ios_base::out | std::ios_base::in)};
        {
            int32_t var_8 = 1;
            while ((*(std::basic_ios<char, std::char_traits<char > >*)(&(*(std::basic_istream<char, std::char_traits<char > >*)(&var_7) >> var_5)))) {
                {
                    if ((bool)false) {
                        std::cerr << "" << "ERROR at line " << var_1 << ":" << var_3 << &std::endl << "the valid line layout: " << "\'<comment>\' or \'<name> <value> <comment>\'" << &std::endl;
                    };
                    if (!var_5.empty() && (int32_t)var_5.operator[]((uint64_t)0) == (int32_t)((char)'#')) {
                        if ((bool)false) {
                            std::cerr << "" << "ERROR at line " << var_1 << ":" << var_3 << &std::endl << "comment may present in the " << "1st or the 3rd token in a line" << &std::endl;
                        };
                        break;
                    };
                    if (var_8 == 1) {
                        var_6 = var_5;
                    } else {
                        if (var_8 == 2) {
                            double var_9 = 0.0E+0;
                            if (sscanf(var_5.c_str(), "%lf", &var_9) == 1) {
                                (*this).IMP_SetDouble(var_6.c_str(), var_9);
                            } else {
                                (*this).IMP_SetString(var_6.c_str(), var_5.c_str());
                            };
                        };
                    };
                };
                ++var_8;
            };
        };
        if ((bool)false) {
            std::cerr << "" << "ERROR at line " << var_1 << ":" << var_3 << &std::endl << "failure while reading configuration file" << &std::endl;
        };
    };
}
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_Configuration::IMP_SetDouble(const char* var_1, double var_2) {
    std::_Rb_tree_iterator<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >, IMP_amdados_colon__colon_Configuration_colon__colon_Parameter > > var_3 = (std::_Rb_tree_iterator<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >, IMP_amdados_colon__colon_Configuration_colon__colon_Parameter > >&&)(*this).m_params.find(std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >{var_1, std::allocator<char >{}});
    if (var_3 == (*this).m_params.end()) {
        IMP_amdados_colon__colon_Configuration_colon__colon_Parameter& var_4 = (*this).m_params.operator[](std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >{var_1, std::allocator<char >{}});
        var_4.name = var_1;
        var_4.dvalue = var_2;
        var_4.type = amdadosConfigurationParamTypeNUMERIC_T;
    } else {
        (*this).CheckType((*var_3.operator->()).second, amdadosConfigurationParamTypeNUMERIC_T);
        (*var_3.operator->()).second.dvalue = var_2;
    };
}
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_Configuration::IMP_SetString(const char* var_1, const char* var_2) {
    std::_Rb_tree_iterator<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >, IMP_amdados_colon__colon_Configuration_colon__colon_Parameter > > var_3 = (std::_Rb_tree_iterator<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >, IMP_amdados_colon__colon_Configuration_colon__colon_Parameter > >&&)(*this).m_params.find(std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >{var_1, std::allocator<char >{}});
    if (var_3 == (*this).m_params.end()) {
        IMP_amdados_colon__colon_Configuration_colon__colon_Parameter& var_4 = (*this).m_params.operator[](std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >{var_1, std::allocator<char >{}});
        var_4.name = var_1;
        var_4.svalue = var_2;
        var_4.type = amdadosConfigurationParamTypeSTRING_T;
    } else {
        (*this).CheckType((*var_3.operator->()).second, amdadosConfigurationParamTypeSTRING_T);
        (*var_3.operator->()).second.svalue = var_2;
    };
}
/* ------- Function Definitions --------- */
IMP_amdados_colon__colon_Configuration::IMP_amdados_colon__colon_Configuration() : m_params() { }
/* ------- Function Definitions --------- */
bool IMP_amdados_colon__colon_Configuration::IsInteger(const char* var_1) const {
    return (*this).IMP_asDouble(var_1) == (double)(*this).IMP_asInt(var_1);
}
/* ------- Function Definitions --------- */
int32_t IMP_amdados_colon__colon_Configuration::IMP_asInt(const char* var_1) const {
    std::_Rb_tree_const_iterator<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >, IMP_amdados_colon__colon_Configuration_colon__colon_Parameter > > var_2 = (std::_Rb_tree_const_iterator<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >, IMP_amdados_colon__colon_Configuration_colon__colon_Parameter > >&&)(*this).m_params.find(std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >{var_1, std::allocator<char >{}});
    (*this).CheckExist(var_2 != (*this).m_params.end(), var_1);
    (*this).CheckType((*var_2.operator->()).second, amdadosConfigurationParamTypeNUMERIC_T);
    (*this).CheckIntRange((*var_2.operator->()).second.dvalue);
    return (int32_t)floor((*var_2.operator->()).second.dvalue + 5.0E-1);
}
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_Configuration::CheckExist(bool var_1, const char* var_2) const {
    if ((bool)false) {
        std::cerr << "" << "Parameter " << var_2 << " was not found" << &std::endl;
    };
    (void)(&var_1);
}
/* ------- Function Definitions --------- */
struct allscale_type_82;
typedef struct allscale_type_82 allscale_type_82;

struct allscale_type_82 {
    char data[39];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_82> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_82> { using type = std::array<char,39u>; };

/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_Configuration::CheckIntRange(double value) const {
    if ((bool)false) {
        std::cerr << "" << "the value \'" << value << "\' causes numerical overflow" << &std::endl << "when converted to an integer parameter" << &std::endl;
    };
}
/* ------- Function Definitions --------- */
double IMP_amdados_colon__colon_Configuration::IMP_asDouble(const char* var_1) const {
    std::_Rb_tree_const_iterator<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >, IMP_amdados_colon__colon_Configuration_colon__colon_Parameter > > var_2 = (std::_Rb_tree_const_iterator<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >, IMP_amdados_colon__colon_Configuration_colon__colon_Parameter > >&&)(*this).m_params.find(std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >{var_1, std::allocator<char >{}});
    (*this).CheckExist(var_2 != (*this).m_params.end(), var_1);
    (*this).CheckType((*var_2.operator->()).second, amdadosConfigurationParamTypeNUMERIC_T);
    return (*var_2.operator->()).second.dvalue;
}
struct allscale_type_89;
typedef struct allscale_type_89 allscale_type_89;

struct allscale_type_89 {
    char data[7];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_89> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_89> { using type = std::array<char,7u>; };

/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_Configuration::CheckType(IMP_amdados_colon__colon_Configuration_colon__colon_Parameter const& var_1, amdadosConfigurationParamType var_2) const {
    if ((bool)false) {
        std::cerr << "" << "Parameter " << var_1.name << " has no type defined" << &std::endl;
    };
    if ((bool)false) {
        std::cerr << "" << "Parameter " << var_1.name << " is expected to be a " << (var_2 == amdadosConfigurationParamTypeNUMERIC_T ? "numeric" : "string") << &std::endl;
    };
}
/* ------- Function Definitions --------- */
IMP_amdados_colon__colon_Configuration::IMP_amdados_colon__colon_Configuration(std::map<std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >, IMP_amdados_colon__colon_Configuration_colon__colon_Parameter, std::less<std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > >, std::allocator<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >, IMP_amdados_colon__colon_Configuration_colon__colon_Parameter > > >&& var_1, DummyCtorParamType var_2) : m_params(var_1) { }
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
const char* IMP_amdados_colon__colon_Configuration::asCString(const char* var_1) const {
    std::_Rb_tree_const_iterator<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >, IMP_amdados_colon__colon_Configuration_colon__colon_Parameter > > var_2 = (std::_Rb_tree_const_iterator<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >, IMP_amdados_colon__colon_Configuration_colon__colon_Parameter > >&&)(*this).m_params.find(std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >{var_1, std::allocator<char >{}});
    (*this).CheckExist(var_2 != (*this).m_params.end(), var_1);
    (*this).CheckType((*var_2.operator->()).second, amdadosConfigurationParamTypeSTRING_T);
    return (*var_2.operator->()).second.svalue.c_str();
}
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_Configuration::SetInt(const char* var_1, int32_t var_2) {
    (*this).IMP_SetDouble(var_1, (double)var_2);
    (*this).CheckIntRange((double)var_2);
}
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_Configuration::store(allscale::utils::ArchiveWriter& var_1) const {
    var_1.write<std::map<std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >, IMP_amdados_colon__colon_Configuration_colon__colon_Parameter, std::less<std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > >, std::allocator<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >, IMP_amdados_colon__colon_Configuration_colon__colon_Parameter > > > >((*this).m_params);
}
/* ------- Function Definitions --------- */
std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > const& IMP_amdados_colon__colon_Configuration::asString(const char* var_1) const {
    std::_Rb_tree_const_iterator<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >, IMP_amdados_colon__colon_Configuration_colon__colon_Parameter > > var_2 = (std::_Rb_tree_const_iterator<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >, IMP_amdados_colon__colon_Configuration_colon__colon_Parameter > >&&)(*this).m_params.find(std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >{var_1, std::allocator<char >{}});
    (*this).CheckExist(var_2 != (*this).m_params.end(), var_1);
    (*this).CheckType((*var_2.operator->()).second, amdadosConfigurationParamTypeSTRING_T);
    return (*var_2.operator->()).second.svalue;
}
/* ------- Function Definitions --------- */
IMP_amdados_colon__colon_Configuration IMP_amdados_colon__colon_Configuration::load(allscale::utils::ArchiveReader& var_0) {
    std::map<std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >, IMP_amdados_colon__colon_Configuration_colon__colon_Parameter, std::less<std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > >, std::allocator<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >, IMP_amdados_colon__colon_Configuration_colon__colon_Parameter > > > var_1 = var_0.read<std::map<std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >, IMP_amdados_colon__colon_Configuration_colon__colon_Parameter, std::less<std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > >, std::allocator<std::pair<const std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > >, IMP_amdados_colon__colon_Configuration_colon__colon_Parameter > > > >();
    DummyCtorParamType var_2;
    return {std::move(var_1), var_2};
}
/* ------- Function Definitions --------- */
uint64_t IMP_amdados_colon__colon_Configuration::asUInt(const char* var_1) const {
    int32_t var_2 = (*this).IMP_asInt(var_1);
    if ((bool)false) {
        std::cerr << "";
    };
    return (uint64_t)var_2;
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_amdados_colon__colon_VectorView::IMP_amdados_colon__colon_VectorView() : data() { }
/* ------- Function Definitions --------- */
IMP_amdados_colon__colon_VectorView::IMP_amdados_colon__colon_VectorView(int64_t value) : data((uint64_t)value, std::allocator<double >{}) { }
/* ------- Function Definitions --------- */
IMP_amdados_colon__colon_VectorView::IMP_amdados_colon__colon_VectorView(IMP_amdados_colon__colon_VectorView&& var_1) : data() {
    (*this).data.swap(var_1.data);
}
/* ------- Function Definitions --------- */
IMP_amdados_colon__colon_VectorView::IMP_amdados_colon__colon_VectorView(std::vector<double, std::allocator<double > >&& var_1, DummyCtorParamType var_2) : data(var_1) { }
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_VectorView::Clear() {
    (*this).data.clear();
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
bool IMP_amdados_colon__colon_VectorView::Empty() const {
    return (*this).data.empty();
}
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_VectorView::Resize(int64_t value, bool a) {
    if (a) {
        (*this).data.clear();
    };
    (*this).data.resize((uint64_t)value);
}
/* ------- Function Definitions --------- */
bool IMP_amdados_colon__colon_VectorView::SameSize(IMP_amdados_colon__colon_VectorView const& var_1) const {
    return (*this).data.size() == var_1.data.size();
}
/* ------- Function Definitions --------- */
int64_t IMP_amdados_colon__colon_VectorView::Size() const {
    return (int64_t)(*this).data.size();
}
/* ------- Function Definitions --------- */
IMP_amdados_colon__colon_VectorView& IMP_amdados_colon__colon_VectorView::operator=(IMP_amdados_colon__colon_VectorView const& var_1) {
    (*this).data = var_1.data;
    return *this;
}
/* ------- Function Definitions --------- */
double& IMP_amdados_colon__colon_VectorView::operator()(int64_t value) {
    return (*this).data.operator[]((uint64_t)value);
}
/* ------- Function Definitions --------- */
double const& IMP_amdados_colon__colon_VectorView::operator()(int64_t value) const {
    return (*this).data.operator[]((uint64_t)value);
}
/* ------- Function Definitions --------- */
double* IMP_amdados_colon__colon_VectorView::begin() {
    return (double*)(&(*this).data.begin().operator*());
}
/* ------- Function Definitions --------- */
IMP_amdados_colon__colon_VectorView IMP_amdados_colon__colon_VectorView::load(allscale::utils::ArchiveReader& var_0) {
    std::vector<double, std::allocator<double > > var_1 = var_0.read<std::vector<double, std::allocator<double > > >();
    DummyCtorParamType var_2;
    return {std::move(var_1), var_2};
}
/* ------- Function Definitions --------- */
const double* IMP_amdados_colon__colon_VectorView::begin() const {
    return (const double*)(&(*this).data.cbegin().operator*());
}
/* ------- Function Definitions --------- */
double* IMP_amdados_colon__colon_VectorView::end() {
    return (double*)(&(*this).data.end().operator*());
}
/* ------- Function Definitions --------- */
const double* IMP_amdados_colon__colon_VectorView::end() const {
    return (const double*)(&(*this).data.cend().operator*());
}
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_VectorView::store(allscale::utils::ArchiveWriter& var_1) const {
    var_1.write<std::vector<double, std::allocator<double > > >((*this).data);
}
/* ------- Function Definitions --------- */
double const& IMP_amdados_colon__colon_Matrix::operator()(int64_t value, int64_t i) const {
    return (*(const IMP_amdados_colon__colon_VectorView*)this).operator()(value * (*this).ncols + i);
}
/* ------- Function Definitions --------- */
IMP_amdados_colon__colon_Matrix::IMP_amdados_colon__colon_Matrix() : IMP_amdados_colon__colon_VectorView(), nrows((int64_t)0), ncols((int64_t)0) { }
/* ------- Function Definitions --------- */
IMP_amdados_colon__colon_Matrix::IMP_amdados_colon__colon_Matrix(IMP_amdados_colon__colon_Matrix const& var_1) : IMP_amdados_colon__colon_VectorView((IMP_amdados_colon__colon_VectorView const&)var_1), nrows(var_1.nrows), ncols(var_1.ncols) { }
/* ------- Function Definitions --------- */
IMP_amdados_colon__colon_Matrix::IMP_amdados_colon__colon_Matrix(IMP_amdados_colon__colon_Matrix&& var_1) : IMP_amdados_colon__colon_VectorView((IMP_amdados_colon__colon_VectorView&&)std::move(var_1)), nrows(var_1.nrows), ncols(var_1.ncols) {
    var_1.nrows = (int64_t)0;
    var_1.ncols = (int64_t)0;
}
/* ------- Function Definitions --------- */
IMP_amdados_colon__colon_Matrix::IMP_amdados_colon__colon_Matrix(int64_t value, int64_t i) : IMP_amdados_colon__colon_VectorView(value * i), nrows(value), ncols(i) { }
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_Matrix::Clear() {
    (*(IMP_amdados_colon__colon_VectorView*)this).Clear();
    (*this).nrows = (int64_t)0;
    (*this).ncols = (int64_t)0;
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
bool IMP_amdados_colon__colon_Matrix::IsSquare() const {
    return (*this).nrows == (*this).ncols;
}
/* ------- Function Definitions --------- */
int64_t IMP_amdados_colon__colon_Matrix::NCols() const {
    return (*this).ncols;
}
/* ------- Function Definitions --------- */
int64_t IMP_amdados_colon__colon_Matrix::NRows() const {
    return (*this).nrows;
}
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_Matrix::Resize(int64_t value, int64_t i, bool a) {
    (*(IMP_amdados_colon__colon_VectorView*)this).Resize(value * i, a);
    (*this).nrows = value;
    (*this).ncols = i;
}
/* ------- Function Definitions --------- */
bool IMP_amdados_colon__colon_Matrix::SameSize(IMP_amdados_colon__colon_Matrix const& var_1) const {
    return (*this).nrows == var_1.nrows && (*this).ncols == var_1.ncols;
}
/* ------- Function Definitions --------- */
bool IMP_amdados_colon__colon_Matrix::SameSizeTr(IMP_amdados_colon__colon_Matrix const& var_1) const {
    return (*this).nrows == var_1.ncols && (*this).ncols == var_1.nrows;
}
/* ------- Function Definitions --------- */
int64_t IMP_amdados_colon__colon_Matrix::Size() const {
    return (*this).nrows * (*this).ncols;
}
/* ------- Function Definitions --------- */
IMP_amdados_colon__colon_Matrix& IMP_amdados_colon__colon_Matrix::operator=(IMP_amdados_colon__colon_Matrix const& var_1) {
    (*(IMP_amdados_colon__colon_VectorView*)this).operator=((IMP_amdados_colon__colon_VectorView const&)var_1);
    (*this).nrows = var_1.nrows;
    (*this).ncols = var_1.ncols;
    return *this;
}
/* ------- Function Definitions --------- */
double& IMP_amdados_colon__colon_Matrix::operator()(int64_t value, int64_t i) {
    return (*(IMP_amdados_colon__colon_VectorView*)this).operator()(value * (*this).ncols + i);
}
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_Matrix::store(allscale::utils::ArchiveWriter& var_1) const {
    var_1.write((*this).nrows);
    var_1.write((*this).ncols);
    var_1.write((*(const IMP_amdados_colon__colon_VectorView*)this).data);
}
/* ------- Function Definitions --------- */
IMP_amdados_colon__colon_Matrix IMP_amdados_colon__colon_Matrix::load(allscale::utils::ArchiveReader& var_0) {
    IMP_amdados_colon__colon_Matrix var_1;
    var_1.nrows = (int64_t)var_0.read<int32_t >();
    var_1.ncols = (int64_t)var_0.read<int32_t >();
    (*(IMP_amdados_colon__colon_VectorView*)(&var_1)).data = var_0.read<std::vector<double, std::allocator<double > > >();
    return (IMP_amdados_colon__colon_Matrix&&)var_1;
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_60_27_long_double_long_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_60_27::operator allscale_type_333() const {
    assert((bool)false && (bool)"This is an Insieme generated dummy function which should never be called");
}
/* ------- Function Definitions --------- */
int64_t IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_60_27_long_double_long_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_60_27::operator()(double value, int64_t i) const {
    int64_t var_3 = (int64_t)floor(value * (double)i);
    var_3 = std::min(std::max(var_3, (int64_t)0), i - (int64_t)1);
    return var_3;
}
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_60_27_long_double_long_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_60_27::store(allscale::utils::ArchiveWriter& var_1) const { }
/* ------- Function Definitions --------- */
IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_60_27_long_double_long_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_60_27 IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_60_27_long_double_long_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_60_27::load(allscale::utils::ArchiveReader& var_0) {
    return {};
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
double IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_106_39_std_colon__colon_uniform_real_distribution_lt_double_gt__space__ampersand__std_colon__colon_mersenne_twister_engine_lt_unsigned_space_long_comma__space_32_comma__space_624_comma__space_397_comma__space_31_comma__space_2567483615_comma__space_11_comma__space_4294967295_comma__space_7_comma__space_2636928640_comma__space_15_comma__space_4022730752_comma__space_18_comma__space_1812433253_gt__space__ampersand__double_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_106_39::operator()() const {
    return (*this).capture_distrib.operator()((*this).capture_gen);
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
double IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_107_39_std_colon__colon_uniform_real_distribution_lt_double_gt__space__ampersand__std_colon__colon_mersenne_twister_engine_lt_unsigned_space_long_comma__space_32_comma__space_624_comma__space_397_comma__space_31_comma__space_2567483615_comma__space_11_comma__space_4294967295_comma__space_7_comma__space_2636928640_comma__space_15_comma__space_4022730752_comma__space_18_comma__space_1812433253_gt__space__ampersand__double_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_107_39::operator()() const {
    return (*this).capture_distrib.operator()((*this).capture_gen);
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
double IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_90_37_const_space_int_double_double_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_90_37::operator()(double value) const {
    return value / (double)(*this).capture_NN;
}
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_90_37_const_space_int_double_double_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_90_37::store(allscale::utils::ArchiveWriter& var_1) const {
    var_1.write<int32_t >((*this).capture_NN);
}
/* ------- Function Definitions --------- */
IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_90_37_const_space_int_double_double_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_90_37 IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_90_37_const_space_int_double_double_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_sensors_dot_cpp_90_37::load(allscale::utils::ArchiveReader& var_0) {
    int32_t var_1 = var_0.read<int32_t >();
    return {std::move(var_1)};
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_utils_slash_include_slash_allscale_slash_utils_slash_vector_dot_h_249_26_long_const_space_long_space__ampersand__const_space_long_space__ampersand_::operator allscale_type_443() const {
    assert((bool)false && (bool)"This is an Insieme generated dummy function which should never be called");
}
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_utils_slash_include_slash_allscale_slash_utils_slash_vector_dot_h_249_26_long_const_space_long_space__ampersand__const_space_long_space__ampersand_::store(allscale::utils::ArchiveWriter& var_1) const { }
/* ------- Function Definitions --------- */
int64_t IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_utils_slash_include_slash_allscale_slash_utils_slash_vector_dot_h_249_26_long_const_space_long_space__ampersand__const_space_long_space__ampersand_::operator()(int64_t const& var_1, int64_t const& var_2) const {
    return var_1 / var_2;
}
/* ------- Function Definitions --------- */
IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_utils_slash_include_slash_allscale_slash_utils_slash_vector_dot_h_249_26_long_const_space_long_space__ampersand__const_space_long_space__ampersand_ IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_utils_slash_include_slash_allscale_slash_utils_slash_vector_dot_h_249_26_long_const_space_long_space__ampersand__const_space_long_space__ampersand_::load(allscale::utils::ArchiveReader& var_0) {
    return {};
}
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61::operator()(allscale::utils::Vector<long, 2 > const& index) const {
    allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u >&& var_2 = allscale::runtime::DataItemManager::get((allscale::runtime::DataItemReference<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > >&)(*this).capture_sensors);
    allscale::api::user::data::Grid<IMP_amdados_colon__colon_Matrix, 2u >&& var_3 = allscale::runtime::DataItemManager::get((allscale::runtime::DataItemReference<allscale::api::user::data::Grid<IMP_amdados_colon__colon_Matrix, 2u > >&)(*this).capture_observations);
    var_2.operator[](index).clear();
    var_3.operator[](index).Clear();
    if ((*this).capture_locations.find(index) != (*this).capture_locations.end()) {
        var_2.operator[](index) = (*this).capture_locations.at(index);
    };
    const uint64_t var_4 = var_2.operator[](index).size();
    IMP_amdados_colon__colon_Matrix& var_5 = var_3.operator[](index);
    var_5.Resize((*this).capture_Nt, (int64_t)var_4, (bool)true);
    if (var_4 > (uint64_t)0) {
        int64_t var_6 = (int64_t)((uint64_t)(*this).capture_Nt / var_4);
        {
            for (uint64_t var_7 = (uint64_t)0; var_7 < var_4; ++var_7) {
                var_5.operator()((int64_t)((uint64_t)var_6 * var_7), (int64_t)var_7) = (double)1.0E+0f;
            };
        };
    };
}
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61::store(allscale::utils::ArchiveWriter& var_1) const {
    var_1.write<allscale::runtime::DataItemReference<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > > >((*this).capture_sensors);
    var_1.write<allscale::runtime::DataItemReference<allscale::api::user::data::Grid<IMP_amdados_colon__colon_Matrix, 2u > > >((*this).capture_observations);
    var_1.write<std::map<allscale::utils::Vector<long, 2 >, std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, std::less<allscale::utils::Vector<long, 2 > >, std::allocator<std::pair<const allscale::utils::Vector<long, 2 >, std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > > > > > >((*this).capture_locations);
    var_1.write<int64_t >((*this).capture_Nt);
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61 IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61::load(allscale::utils::ArchiveReader& var_0) {
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > > var_1 = var_0.read<allscale::runtime::DataItemReference<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > > >();
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<IMP_amdados_colon__colon_Matrix, 2u > > var_2 = var_0.read<allscale::runtime::DataItemReference<allscale::api::user::data::Grid<IMP_amdados_colon__colon_Matrix, 2u > > >();
    std::map<allscale::utils::Vector<long, 2 >, std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, std::less<allscale::utils::Vector<long, 2 > >, std::allocator<std::pair<const allscale::utils::Vector<long, 2 >, std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > > > > > var_3 = var_0.read<std::map<allscale::utils::Vector<long, 2 >, std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, std::less<allscale::utils::Vector<long, 2 > >, std::allocator<std::pair<const allscale::utils::Vector<long, 2 >, std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > > > > > >();
    int64_t var_4 = var_0.read<int64_t >();
    return {std::move(var_1), std::move(var_2), std::move(var_3), std::move(var_4)};
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_Boundary_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_55_1 IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_Boundary_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_55_1::load(allscale::utils::ArchiveReader& var_0) {
    std::vector<double, std::allocator<double > > var_1 = var_0.read<std::vector<double, std::allocator<double > > >();
    std::vector<double, std::allocator<double > > var_2 = var_0.read<std::vector<double, std::allocator<double > > >();
    double var_3 = var_0.read<double >();
    allscale_type_937 var_4 = var_0.read<allscale_type_937 >();
    allscale_type_937 var_5 = var_0.read<allscale_type_937 >();
    return {std::move(var_1), std::move(var_2), std::move(var_3), std::move(var_4), std::move(var_5)};
}
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_Boundary_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_55_1::store(allscale::utils::ArchiveWriter& var_1) const {
    var_1.write<std::vector<double, std::allocator<double > > >((*this).myself);
    var_1.write<std::vector<double, std::allocator<double > > >((*this).remote);
    var_1.write<double >((*this).rel_diff);
    var_1.write<allscale_type_937 >((*this).inflow);
    var_1.write<allscale_type_937 >((*this).outer);
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_amdados_colon__colon_Cholesky::IMP_amdados_colon__colon_Cholesky() : m_L() { }
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_Cholesky::BatchSolve(IMP_amdados_colon__colon_Matrix& var_1, IMP_amdados_colon__colon_Matrix const& var_2) const {
    IMP_amdados_colon__colon_Matrix const& var_3 = (*this).m_L;
    const int64_t var_4 = var_3.NRows();
    const int64_t var_5 = var_1.NCols();
    if ((bool)false) {
        std::cerr << "";
    };
    {
        for (int64_t var_6 = (int64_t)0; var_6 < var_5; ++var_6) {
            {
                {
                    for (int64_t var_7 = (int64_t)0; var_7 < var_4; ++var_7) {
                        {
                            double var_8 = var_2.operator()(var_7, var_6);
                            {
                                int64_t var_9 = var_7 - (int64_t)1;
                                while (var_9 >= (int64_t)0) {
                                    var_8 -= var_3.operator()(var_7, var_9) * var_1.operator()(var_9, var_6);
                                    var_9--;
                                };
                            };
                            var_1.operator()(var_7, var_6) = var_8 / var_3.operator()(var_7, var_7);
                        };
                    };
                };
                {
                    int64_t var_10 = var_4 - (int64_t)1;
                    while (var_10 >= (int64_t)0) {
                        {
                            double var_11 = var_1.operator()(var_10, var_6);
                            {
                                for (int64_t var_12 = var_10 + (int64_t)1; var_12 < var_4; ++var_12) {
                                    var_11 -= var_3.operator()(var_12, var_10) * var_1.operator()(var_12, var_6);
                                };
                            };
                            var_1.operator()(var_10, var_6) = var_11 / var_3.operator()(var_10, var_10);
                        };
                        var_10--;
                    };
                };
            };
        };
    };
}
/* ------- Function Definitions --------- */
IMP_amdados_colon__colon_Cholesky::IMP_amdados_colon__colon_Cholesky(IMP_amdados_colon__colon_Matrix&& var_1, DummyCtorParamType var_2) : m_L(var_1) { }
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_amdados_colon__colon_Cholesky IMP_amdados_colon__colon_Cholesky::load(allscale::utils::ArchiveReader& var_0) {
    IMP_amdados_colon__colon_Matrix var_1 = var_0.read<IMP_amdados_colon__colon_Matrix >();
    DummyCtorParamType var_2;
    return {std::move(var_1), var_2};
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_Cholesky::Solve(IMP_amdados_colon__colon_VectorView& var_1, IMP_amdados_colon__colon_VectorView const& var_2) const {
    IMP_amdados_colon__colon_Matrix const& var_3 = (*this).m_L;
    const int64_t var_4 = var_3.NRows();
    if ((bool)false) {
        std::cerr << "";
    };
    {
        for (int64_t var_5 = (int64_t)0; var_5 < var_4; ++var_5) {
            {
                double var_6 = var_2.operator()(var_5);
                {
                    int64_t var_7 = var_5 - (int64_t)1;
                    while (var_7 >= (int64_t)0) {
                        var_6 -= var_3.operator()(var_5, var_7) * var_1.operator()(var_7);
                        var_7--;
                    };
                };
                var_1.operator()(var_5) = var_6 / var_3.operator()(var_5, var_5);
            };
        };
    };
    {
        int64_t var_8 = var_4 - (int64_t)1;
        while (var_8 >= (int64_t)0) {
            {
                double var_9 = var_1.operator()(var_8);
                {
                    for (int64_t var_10 = var_8 + (int64_t)1; var_10 < var_4; ++var_10) {
                        var_9 -= var_3.operator()(var_10, var_8) * var_1.operator()(var_10);
                    };
                };
                var_1.operator()(var_8) = var_9 / var_3.operator()(var_8, var_8);
            };
            var_8--;
        };
    };
}
struct allscale_type_976;
typedef struct allscale_type_976 allscale_type_976;

struct allscale_type_976 {
    char data[36];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_976> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_976> { using type = std::array<char,36u>; };

struct allscale_type_977;
typedef struct allscale_type_977 allscale_type_977;

struct allscale_type_977 {
    char data[23];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_977> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_977> { using type = std::array<char,23u>; };

/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_Cholesky::Init(IMP_amdados_colon__colon_Matrix const& var_1) {
    (void)0;
    if ((bool)false) {
        std::cerr << "";
    };
    const int64_t var_2 = var_1.NRows();
    (*this).m_L.operator=(var_1);
    IMP_amdados_colon__colon_Matrix& var_3 = (*this).m_L;
    {
        for (int64_t var_4 = (int64_t)0; var_4 < var_2; ++var_4) {
            {
                for (int64_t var_5 = var_4; var_5 < var_2; ++var_5) {
                    {
                        if (var_3.operator()(var_5, var_4) != var_3.operator()(var_4, var_5)) {
                            if ((bool)false) {
                                std::cerr << "" << "Cholesky expects a symmetric matrix";
                            };
                        };
                        double var_6 = var_3.operator()(var_4, var_5);
                        {
                            int64_t var_7 = var_4 - (int64_t)1;
                            while (var_7 >= (int64_t)0) {
                                var_6 -= var_3.operator()(var_4, var_7) * var_3.operator()(var_5, var_7);
                                var_7--;
                            };
                        };
                        if (var_4 == var_5) {
                            if ((bool)false) {
                                std::cerr << "" << "Cholesky failed, sum: " << var_6;
                            };
                            var_3.operator()(var_4, var_4) = sqrt(var_6);
                        } else {
                            var_3.operator()(var_5, var_4) = var_6 / var_3.operator()(var_4, var_4);
                        };
                    };
                };
            };
        };
    };
    {
        for (int64_t var_8 = (int64_t)0; var_8 < var_2; ++var_8) {
            {
                for (int64_t var_9 = (int64_t)0; var_9 < var_8; ++var_9) {
                    var_3.operator()(var_9, var_8) = 0.0E+0;
                };
            };
        };
    };
}
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_Cholesky::BatchSolveTr(IMP_amdados_colon__colon_Matrix& var_1, IMP_amdados_colon__colon_Matrix const& var_2) const {
    IMP_amdados_colon__colon_Matrix const& var_3 = (*this).m_L;
    const int64_t var_4 = var_3.NRows();
    const int64_t var_5 = var_1.NCols();
    if ((bool)false) {
        std::cerr << "";
    };
    {
        for (int64_t var_6 = (int64_t)0; var_6 < var_5; ++var_6) {
            {
                {
                    for (int64_t var_7 = (int64_t)0; var_7 < var_4; ++var_7) {
                        {
                            double var_8 = var_2.operator()(var_6, var_7);
                            {
                                int64_t var_9 = var_7 - (int64_t)1;
                                while (var_9 >= (int64_t)0) {
                                    var_8 -= var_3.operator()(var_7, var_9) * var_1.operator()(var_9, var_6);
                                    var_9--;
                                };
                            };
                            var_1.operator()(var_7, var_6) = var_8 / var_3.operator()(var_7, var_7);
                        };
                    };
                };
                {
                    int64_t var_10 = var_4 - (int64_t)1;
                    while (var_10 >= (int64_t)0) {
                        {
                            double var_11 = var_1.operator()(var_10, var_6);
                            {
                                for (int64_t var_12 = var_10 + (int64_t)1; var_12 < var_4; ++var_12) {
                                    var_11 -= var_3.operator()(var_12, var_10) * var_1.operator()(var_12, var_6);
                                };
                            };
                            var_1.operator()(var_10, var_6) = var_11 / var_3.operator()(var_10, var_10);
                        };
                        var_10--;
                    };
                };
            };
        };
    };
}
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_Cholesky::store(allscale::utils::ArchiveWriter& var_1) const {
    var_1.write<IMP_amdados_colon__colon_Matrix >((*this).m_L);
}
struct allscale_type_1017;
typedef struct allscale_type_1017 allscale_type_1017;

struct allscale_type_1017 {
    char data[26];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_1017> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_1017> { using type = std::array<char,26u>; };

/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_LUdecomposition::Init(IMP_amdados_colon__colon_Matrix const& var_1) {
    (void)0;
    if ((bool)false) {
        std::cerr << "";
    };
    const int64_t var_2 = var_1.NRows();
    (*this).m_LU.operator=(var_1);
    (*this).m_Perm.resize((uint64_t)var_2);
    IMP_amdados_colon__colon_Matrix& var_3 = (*this).m_LU;
    int64_t* var_4 = (*this).m_Perm.data();
    {
        for (int64_t var_5 = (int64_t)0; var_5 < var_2; ++var_5) {
            var_4[var_5] = var_5;
        };
    };
    {
        for (int64_t var_6 = (int64_t)0, _end = var_2 - (int64_t)1; var_6 < _end; ++var_6) {
            {
                double var_7 = 0.0E+0;
                int64_t var_8 = var_6;
                {
                    for (int64_t var_9 = var_6; var_9 < var_2; ++var_9) {
                        {
                            double var_10 = fabs(var_3.operator()(var_4[var_9], var_6));
                            if (var_7 < var_10) {
                                var_7 = var_10;
                                var_8 = var_9;
                            };
                        };
                    };
                };
                if ((bool)false) {
                    std::cerr << "" << "LU failed, max. element: " << var_7;
                };
                if (var_6 != var_8) {
                    std::swap(var_4[var_6], var_4[var_8]);
                };
                {
                    for (int64_t var_11 = var_6 + (int64_t)1; var_11 < var_2; ++var_11) {
                        {
                            const int64_t var_12 = var_4[var_11];
                            const int64_t var_13 = var_4[var_6];
                            const double var_14 = var_3.operator()(var_12, var_6) /= var_3.operator()(var_13, var_6);
                            {
                                for (int64_t var_15 = var_6 + (int64_t)1; var_15 < var_2; ++var_15) {
                                    var_3.operator()(var_12, var_15) -= var_14 * var_3.operator()(var_13, var_15);
                                };
                            };
                        };
                    };
                };
            };
        };
    };
}
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_LUdecomposition::BatchSolveTr(IMP_amdados_colon__colon_Matrix& var_1, IMP_amdados_colon__colon_Matrix const& var_2) const {
    IMP_amdados_colon__colon_Matrix const& var_3 = (*this).m_LU;
    const int64_t* var_4 = (*this).m_Perm.data();
    const int64_t var_5 = var_3.NRows();
    const int64_t var_6 = var_1.NCols();
    if ((bool)false) {
        std::cerr << "";
    };
    {
        for (int64_t var_7 = (int64_t)0; var_7 < var_6; ++var_7) {
            {
                {
                    for (int64_t var_8 = (int64_t)0; var_8 < var_5; ++var_8) {
                        {
                            const int64_t var_9 = var_4[var_8];
                            var_1.operator()(var_8, var_7) = var_2.operator()(var_7, var_9);
                            {
                                for (int64_t var_10 = (int64_t)0; var_10 < var_8; ++var_10) {
                                    var_1.operator()(var_8, var_7) -= var_3.operator()(var_9, var_10) * var_1.operator()(var_10, var_7);
                                };
                            };
                        };
                    };
                };
                {
                    int64_t var_11 = var_5 - (int64_t)1;
                    while (var_11 >= (int64_t)0) {
                        {
                            const int64_t var_12 = var_4[var_11];
                            {
                                for (int64_t var_13 = var_11 + (int64_t)1; var_13 < var_5; ++var_13) {
                                    var_1.operator()(var_11, var_7) -= var_3.operator()(var_12, var_13) * var_1.operator()(var_13, var_7);
                                };
                            };
                            var_1.operator()(var_11, var_7) /= var_3.operator()(var_12, var_11);
                        };
                        --var_11;
                    };
                };
            };
        };
    };
}
/* ------- Function Definitions --------- */
IMP_amdados_colon__colon_LUdecomposition IMP_amdados_colon__colon_LUdecomposition::load(allscale::utils::ArchiveReader& var_0) {
    IMP_amdados_colon__colon_Matrix var_1 = var_0.read<IMP_amdados_colon__colon_Matrix >();
    std::vector<int64_t, std::allocator<int64_t > > var_2 = var_0.read<std::vector<int64_t, std::allocator<int64_t > > >();
    DummyCtorParamType var_3;
    return {std::move(var_1), std::move(var_2), var_3};
}
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_LUdecomposition::Solve(IMP_amdados_colon__colon_VectorView& var_1, IMP_amdados_colon__colon_VectorView const& var_2) const {
    IMP_amdados_colon__colon_Matrix const& var_3 = (*this).m_LU;
    const int64_t* var_4 = (*this).m_Perm.data();
    const int64_t var_5 = var_3.NRows();
    if ((bool)false) {
        std::cerr << "";
    };
    {
        for (int64_t var_6 = (int64_t)0; var_6 < var_5; ++var_6) {
            {
                const int64_t var_7 = var_4[var_6];
                var_1.operator()(var_6) = var_2.operator()(var_7);
                {
                    for (int64_t var_8 = (int64_t)0; var_8 < var_6; ++var_8) {
                        var_1.operator()(var_6) -= var_3.operator()(var_7, var_8) * var_1.operator()(var_8);
                    };
                };
            };
        };
    };
    {
        int64_t var_9 = var_5 - (int64_t)1;
        while (var_9 >= (int64_t)0) {
            {
                const int64_t var_10 = var_4[var_9];
                {
                    for (int64_t var_11 = var_9 + (int64_t)1; var_11 < var_5; ++var_11) {
                        var_1.operator()(var_9) -= var_3.operator()(var_10, var_11) * var_1.operator()(var_11);
                    };
                };
                var_1.operator()(var_9) /= var_3.operator()(var_10, var_9);
            };
            --var_9;
        };
    };
}
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_LUdecomposition::store(allscale::utils::ArchiveWriter& var_1) const {
    var_1.write<IMP_amdados_colon__colon_Matrix >((*this).m_LU);
    var_1.write<std::vector<int64_t, std::allocator<int64_t > > >((*this).m_Perm);
}
/* ------- Function Definitions --------- */
IMP_amdados_colon__colon_LUdecomposition::IMP_amdados_colon__colon_LUdecomposition() : m_LU(), m_Perm() { }
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_amdados_colon__colon_LUdecomposition::IMP_amdados_colon__colon_LUdecomposition(IMP_amdados_colon__colon_Matrix&& var_1, std::vector<int64_t, std::allocator<int64_t > >&& var_2, DummyCtorParamType var_3) : m_LU(var_1), m_Perm(var_2) { }
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_LUdecomposition::BatchSolve(IMP_amdados_colon__colon_Matrix& var_1, IMP_amdados_colon__colon_Matrix const& var_2) const {
    IMP_amdados_colon__colon_Matrix const& var_3 = (*this).m_LU;
    const int64_t* var_4 = (*this).m_Perm.data();
    const int64_t var_5 = var_3.NRows();
    const int64_t var_6 = var_1.NCols();
    if ((bool)false) {
        std::cerr << "";
    };
    {
        for (int64_t var_7 = (int64_t)0; var_7 < var_6; ++var_7) {
            {
                {
                    for (int64_t var_8 = (int64_t)0; var_8 < var_5; ++var_8) {
                        {
                            const int64_t var_9 = var_4[var_8];
                            var_1.operator()(var_8, var_7) = var_2.operator()(var_9, var_7);
                            {
                                for (int64_t var_10 = (int64_t)0; var_10 < var_8; ++var_10) {
                                    var_1.operator()(var_8, var_7) -= var_3.operator()(var_9, var_10) * var_1.operator()(var_10, var_7);
                                };
                            };
                        };
                    };
                };
                {
                    int64_t var_11 = var_5 - (int64_t)1;
                    while (var_11 >= (int64_t)0) {
                        {
                            const int64_t var_12 = var_4[var_11];
                            {
                                for (int64_t var_13 = var_11 + (int64_t)1; var_13 < var_5; ++var_13) {
                                    var_1.operator()(var_11, var_7) -= var_3.operator()(var_12, var_13) * var_1.operator()(var_13, var_7);
                                };
                            };
                            var_1.operator()(var_11, var_7) /= var_3.operator()(var_12, var_11);
                        };
                        --var_11;
                    };
                };
            };
        };
    };
}
/* ------- Function Definitions --------- */
IMP_amdados_colon__colon_KalmanFilter::IMP_amdados_colon__colon_KalmanFilter(IMP_amdados_colon__colon_Cholesky&& var_1, IMP_amdados_colon__colon_LUdecomposition&& var_2, IMP_amdados_colon__colon_VectorView&& var_3, IMP_amdados_colon__colon_VectorView&& var_4, IMP_amdados_colon__colon_VectorView&& var_5, IMP_amdados_colon__colon_Matrix&& var_6, IMP_amdados_colon__colon_Matrix&& var_7, IMP_amdados_colon__colon_Matrix&& var_8, IMP_amdados_colon__colon_Matrix&& var_9, IMP_amdados_colon__colon_Matrix&& var_10, DummyCtorParamType var_11) : m_chol(var_1), m_lu(var_2), m_x_tmp(var_3), m_y(var_4), m_invSy(var_5), m_S(var_6), m_P_tmp(var_7), m_PHt(var_8), m_HP(var_9), m_invSHP(var_10) { }
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_AddMatrices(IMP_amdados_colon__colon_Matrix& var_0, IMP_amdados_colon__colon_Matrix const& var_1, IMP_amdados_colon__colon_Matrix const& var_2) {
    if ((bool)false) {
        std::cerr << "";
    };
    std::transform(((IMP_amdados_colon__colon_VectorView const&)var_1).begin(), ((IMP_amdados_colon__colon_VectorView const&)var_1).end(), ((IMP_amdados_colon__colon_VectorView const&)var_2).begin(), ((IMP_amdados_colon__colon_VectorView&)var_0).begin(), (std::plus<double >&&)std::plus<double >{});
}
/* ------- Function Definitions --------- */
double* allscale_fun_1051(double* lhs, double value) {
    *lhs = value;
    return lhs;
}
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_Symmetrize(IMP_amdados_colon__colon_Matrix& var_0) {
    const int64_t var_1 = var_0.NRows();
    if ((bool)false) {
        std::cerr << "";
    };
    {
        for (int64_t var_2 = (int64_t)0; var_2 < var_1; ++var_2) {
            {
                for (int64_t var_3 = var_2 + (int64_t)1; var_3 < var_1; ++var_3) {
                    var_0.operator()(var_3, var_2) = *allscale_fun_1051(&var_0.operator()(var_2, var_3), 5.0E-1 * (var_0.operator()(var_3, var_2) + var_0.operator()(var_2, var_3)));
                };
            };
        };
    };
}
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_KalmanFilter::PropagateStateInverse(IMP_amdados_colon__colon_VectorView& var_1, IMP_amdados_colon__colon_Matrix& var_2, IMP_amdados_colon__colon_Matrix const& var_3, IMP_amdados_colon__colon_Matrix const& var_4) {
    (void)0;
    if ((bool)false) {
        std::cerr << "";
    };
    if ((bool)false) {
        std::cerr << "";
    };
    (*this).m_x_tmp.operator=(var_1);
    (*this).m_P_tmp.operator=(var_2);
    (*this).m_lu.Init(var_3);
    (*this).m_lu.Solve(var_1, (*this).m_x_tmp);
    (*this).m_lu.BatchSolve((*this).m_P_tmp, var_2);
    (*this).m_lu.BatchSolveTr(var_2, (*this).m_P_tmp);
    IMP_amdados_colon__colon_AddMatrices(var_2, var_2, var_4);
    IMP_amdados_colon__colon_Symmetrize(var_2);
}
/* ------- Function Definitions --------- */
IMP_amdados_colon__colon_KalmanFilter::IMP_amdados_colon__colon_KalmanFilter() : m_chol(), m_lu(), m_x_tmp(), m_y(), m_invSy(), m_S(), m_P_tmp(), m_PHt(), m_HP(), m_invSHP() { }
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_MatMultTr(IMP_amdados_colon__colon_Matrix& var_0, IMP_amdados_colon__colon_Matrix const& var_1, IMP_amdados_colon__colon_Matrix const& var_2) {
    const int64_t var_3 = var_1.NRows();
    const int64_t var_4 = var_2.NRows();
    const int64_t var_5 = var_2.NCols();
    if ((bool)false) {
        std::cerr << "";
    };
    {
        for (int64_t var_6 = (int64_t)0; var_6 < var_3; ++var_6) {
            {
                for (int64_t var_7 = (int64_t)0; var_7 < var_4; ++var_7) {
                    {
                        double var_8 = 0.0E+0;
                        {
                            for (int64_t var_9 = (int64_t)0; var_9 < var_5; ++var_9) {
                                var_8 += var_1.operator()(var_6, var_9) * var_2.operator()(var_7, var_9);
                            };
                        };
                        var_0.operator()(var_6, var_7) = var_8;
                    };
                };
            };
        };
    };
}
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_MatVecMult(IMP_amdados_colon__colon_VectorView& var_0, IMP_amdados_colon__colon_Matrix const& var_1, IMP_amdados_colon__colon_VectorView const& var_2) {
    const int64_t var_3 = var_1.NRows();
    const int64_t var_4 = var_1.NCols();
    if ((bool)false) {
        std::cerr << "";
    };
    {
        for (int64_t var_5 = (int64_t)0; var_5 < var_3; ++var_5) {
            {
                double var_6 = 0.0E+0;
                {
                    for (int64_t var_7 = (int64_t)0; var_7 < var_4; ++var_7) {
                        var_6 += var_1.operator()(var_5, var_7) * var_2.operator()(var_7);
                    };
                };
                var_0.operator()(var_5) = var_6;
            };
        };
    };
}
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_MatMult(IMP_amdados_colon__colon_Matrix& var_0, IMP_amdados_colon__colon_Matrix const& var_1, IMP_amdados_colon__colon_Matrix const& var_2) {
    const int64_t var_3 = var_1.NRows();
    const int64_t var_4 = var_1.NCols();
    const int64_t var_5 = var_2.NCols();
    if ((bool)false) {
        std::cerr << "";
    };
    {
        for (int64_t var_6 = (int64_t)0; var_6 < var_3; ++var_6) {
            {
                for (int64_t var_7 = (int64_t)0; var_7 < var_5; ++var_7) {
                    {
                        double var_8 = 0.0E+0;
                        {
                            for (int64_t var_9 = (int64_t)0; var_9 < var_4; ++var_9) {
                                var_8 += var_1.operator()(var_6, var_9) * var_2.operator()(var_9, var_7);
                            };
                        };
                        var_0.operator()(var_6, var_7) = var_8;
                    };
                };
            };
        };
    };
}
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_GetTransposed(IMP_amdados_colon__colon_Matrix& var_0, IMP_amdados_colon__colon_Matrix const& var_1) {
    const int64_t var_2 = var_1.NRows();
    const int64_t var_3 = var_1.NCols();
    if ((bool)false) {
        std::cerr << "";
    };
    {
        for (int64_t var_4 = (int64_t)0; var_4 < var_2; ++var_4) {
            {
                for (int64_t var_5 = (int64_t)0; var_5 < var_3; ++var_5) {
                    var_0.operator()(var_5, var_4) = var_1.operator()(var_4, var_5);
                };
            };
        };
    };
}
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_AddVectors(IMP_amdados_colon__colon_VectorView& var_0, IMP_amdados_colon__colon_VectorView const& var_1, IMP_amdados_colon__colon_VectorView const& var_2) {
    if ((bool)false) {
        std::cerr << "";
    };
    std::transform(var_1.begin(), var_1.end(), var_2.begin(), var_0.begin(), (std::plus<double >&&)std::plus<double >{});
}
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_SubtractMatrices(IMP_amdados_colon__colon_Matrix& var_0, IMP_amdados_colon__colon_Matrix const& var_1, IMP_amdados_colon__colon_Matrix const& var_2) {
    if ((bool)false) {
        std::cerr << "";
    };
    std::transform(((IMP_amdados_colon__colon_VectorView const&)var_1).begin(), ((IMP_amdados_colon__colon_VectorView const&)var_1).end(), ((IMP_amdados_colon__colon_VectorView const&)var_2).begin(), ((IMP_amdados_colon__colon_VectorView&)var_0).begin(), (std::minus<double >&&)std::minus<double >{});
}
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_SubtractVectors(IMP_amdados_colon__colon_VectorView& var_0, IMP_amdados_colon__colon_VectorView const& var_1, IMP_amdados_colon__colon_VectorView const& var_2) {
    if ((bool)false) {
        std::cerr << "";
    };
    std::transform(var_1.begin(), var_1.end(), var_2.begin(), var_0.begin(), (std::minus<double >&&)std::minus<double >{});
}
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_KalmanFilter::SolveFilter(IMP_amdados_colon__colon_VectorView& var_1, IMP_amdados_colon__colon_Matrix& var_2, IMP_amdados_colon__colon_Matrix const& var_3, IMP_amdados_colon__colon_Matrix const& var_4, IMP_amdados_colon__colon_VectorView const& var_5) {
    const int64_t var_6 = var_1.Size();
    const int64_t var_7 = var_5.Size();
    if ((bool)false) {
        std::cerr << "";
    };
    if ((bool)false) {
        std::cerr << "";
    };
    if ((bool)false) {
        std::cerr << "";
    };
    (*this).m_y.Resize(var_7, (bool)false);
    (*this).m_invSy.Resize(var_7, (bool)false);
    (*this).m_S.Resize(var_7, var_7, (bool)false);
    (*this).m_PHt.Resize(var_6, var_7, (bool)false);
    (*this).m_HP.Resize(var_7, var_6, (bool)false);
    (*this).m_invSHP.Resize(var_7, var_6, (bool)false);
    (*this).m_x_tmp.operator=(var_1);
    (*this).m_P_tmp.operator=(var_2);
    IMP_amdados_colon__colon_VectorView const& var_8 = (*this).m_x_tmp;
    IMP_amdados_colon__colon_Matrix const& var_9 = (*this).m_P_tmp;
    IMP_amdados_colon__colon_MatVecMult((*this).m_y, var_3, var_8);
    IMP_amdados_colon__colon_SubtractVectors((*this).m_y, var_5, (*this).m_y);
    IMP_amdados_colon__colon_MatMultTr((*this).m_PHt, var_9, var_3);
    IMP_amdados_colon__colon_MatMult((*this).m_S, var_3, (*this).m_PHt);
    IMP_amdados_colon__colon_AddMatrices((*this).m_S, (*this).m_S, var_4);
    IMP_amdados_colon__colon_Symmetrize((*this).m_S);
    (*this).m_chol.Init((*this).m_S);
    (*this).m_chol.Solve((*this).m_invSy, (*this).m_y);
    IMP_amdados_colon__colon_MatVecMult(var_1, (*this).m_PHt, (*this).m_invSy);
    IMP_amdados_colon__colon_AddVectors(var_1, var_1, var_8);
    IMP_amdados_colon__colon_GetTransposed((*this).m_HP, (*this).m_PHt);
    (*this).m_chol.BatchSolve((*this).m_invSHP, (*this).m_HP);
    IMP_amdados_colon__colon_MatMult(var_2, (*this).m_PHt, (*this).m_invSHP);
    IMP_amdados_colon__colon_SubtractMatrices(var_2, var_9, var_2);
    IMP_amdados_colon__colon_Symmetrize(var_2);
}
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_KalmanFilter::store(allscale::utils::ArchiveWriter& var_1) const {
    var_1.write<IMP_amdados_colon__colon_Cholesky >((*this).m_chol);
    var_1.write<IMP_amdados_colon__colon_LUdecomposition >((*this).m_lu);
    var_1.write<IMP_amdados_colon__colon_VectorView >((*this).m_x_tmp);
    var_1.write<IMP_amdados_colon__colon_VectorView >((*this).m_y);
    var_1.write<IMP_amdados_colon__colon_VectorView >((*this).m_invSy);
    var_1.write<IMP_amdados_colon__colon_Matrix >((*this).m_S);
    var_1.write<IMP_amdados_colon__colon_Matrix >((*this).m_P_tmp);
    var_1.write<IMP_amdados_colon__colon_Matrix >((*this).m_PHt);
    var_1.write<IMP_amdados_colon__colon_Matrix >((*this).m_HP);
    var_1.write<IMP_amdados_colon__colon_Matrix >((*this).m_invSHP);
}
/* ------- Function Definitions --------- */
IMP_amdados_colon__colon_KalmanFilter IMP_amdados_colon__colon_KalmanFilter::load(allscale::utils::ArchiveReader& var_0) {
    IMP_amdados_colon__colon_Cholesky var_1 = var_0.read<IMP_amdados_colon__colon_Cholesky >();
    IMP_amdados_colon__colon_LUdecomposition var_2 = var_0.read<IMP_amdados_colon__colon_LUdecomposition >();
    IMP_amdados_colon__colon_VectorView var_3 = var_0.read<IMP_amdados_colon__colon_VectorView >();
    IMP_amdados_colon__colon_VectorView var_4 = var_0.read<IMP_amdados_colon__colon_VectorView >();
    IMP_amdados_colon__colon_VectorView var_5 = var_0.read<IMP_amdados_colon__colon_VectorView >();
    IMP_amdados_colon__colon_Matrix var_6 = var_0.read<IMP_amdados_colon__colon_Matrix >();
    IMP_amdados_colon__colon_Matrix var_7 = var_0.read<IMP_amdados_colon__colon_Matrix >();
    IMP_amdados_colon__colon_Matrix var_8 = var_0.read<IMP_amdados_colon__colon_Matrix >();
    IMP_amdados_colon__colon_Matrix var_9 = var_0.read<IMP_amdados_colon__colon_Matrix >();
    IMP_amdados_colon__colon_Matrix var_10 = var_0.read<IMP_amdados_colon__colon_Matrix >();
    DummyCtorParamType var_11;
    return {std::move(var_1), std::move(var_2), std::move(var_3), std::move(var_4), std::move(var_5), std::move(var_6), std::move(var_7), std::move(var_8), std::move(var_9), std::move(var_10), var_11};
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1::IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1(IMP_amdados_colon__colon_Matrix&& var_1, IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_Boundary_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_55_1&& var_2, IMP_amdados_colon__colon_KalmanFilter&& var_3, IMP_amdados_colon__colon_Matrix&& var_4, IMP_amdados_colon__colon_Matrix&& var_5, IMP_amdados_colon__colon_Matrix&& var_6, IMP_amdados_colon__colon_Matrix&& var_7, IMP_amdados_colon__colon_Matrix&& var_8, IMP_amdados_colon__colon_VectorView&& var_9, std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >&& var_10, IMP_amdados_colon__colon_LUdecomposition&& var_11, IMP_amdados_colon__colon_Matrix&& var_12, std::pair<double, double >&& var_13, DummyCtorParamType var_14) : field(var_1), boundaries(var_2), Kalman(var_3), B(var_4), P(var_5), Q(var_6), H(var_7), R(var_8), z(var_9), sensors(var_10), LU(var_11), tmp_field(var_12), flow(var_13) { }
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1::store(allscale::utils::ArchiveWriter& var_1) const {
    var_1.write<IMP_amdados_colon__colon_Matrix >((*this).field);
    var_1.write<IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_Boundary_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_55_1 >((*this).boundaries);
    var_1.write<IMP_amdados_colon__colon_KalmanFilter >((*this).Kalman);
    var_1.write<IMP_amdados_colon__colon_Matrix >((*this).B);
    var_1.write<IMP_amdados_colon__colon_Matrix >((*this).P);
    var_1.write<IMP_amdados_colon__colon_Matrix >((*this).Q);
    var_1.write<IMP_amdados_colon__colon_Matrix >((*this).H);
    var_1.write<IMP_amdados_colon__colon_Matrix >((*this).R);
    var_1.write<IMP_amdados_colon__colon_VectorView >((*this).z);
    var_1.write<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > > >((*this).sensors);
    var_1.write<IMP_amdados_colon__colon_LUdecomposition >((*this).LU);
    var_1.write<IMP_amdados_colon__colon_Matrix >((*this).tmp_field);
    var_1.write<std::pair<double, double > >((*this).flow);
}
/* ------- Function Definitions --------- */
IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1 IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1::load(allscale::utils::ArchiveReader& var_0) {
    IMP_amdados_colon__colon_Matrix var_1 = var_0.read<IMP_amdados_colon__colon_Matrix >();
    IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_Boundary_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_55_1 var_2 = var_0.read<IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_Boundary_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_55_1 >();
    IMP_amdados_colon__colon_KalmanFilter var_3 = var_0.read<IMP_amdados_colon__colon_KalmanFilter >();
    IMP_amdados_colon__colon_Matrix var_4 = var_0.read<IMP_amdados_colon__colon_Matrix >();
    IMP_amdados_colon__colon_Matrix var_5 = var_0.read<IMP_amdados_colon__colon_Matrix >();
    IMP_amdados_colon__colon_Matrix var_6 = var_0.read<IMP_amdados_colon__colon_Matrix >();
    IMP_amdados_colon__colon_Matrix var_7 = var_0.read<IMP_amdados_colon__colon_Matrix >();
    IMP_amdados_colon__colon_Matrix var_8 = var_0.read<IMP_amdados_colon__colon_Matrix >();
    IMP_amdados_colon__colon_VectorView var_9 = var_0.read<IMP_amdados_colon__colon_VectorView >();
    std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > > var_10 = var_0.read<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > > >();
    IMP_amdados_colon__colon_LUdecomposition var_11 = var_0.read<IMP_amdados_colon__colon_LUdecomposition >();
    IMP_amdados_colon__colon_Matrix var_12 = var_0.read<IMP_amdados_colon__colon_Matrix >();
    std::pair<double, double > var_13 = var_0.read<std::pair<double, double > >();
    DummyCtorParamType var_14;
    return {std::move(var_1), std::move(var_2), std::move(var_3), std::move(var_4), std::move(var_5), std::move(var_6), std::move(var_7), std::move(var_8), std::move(var_9), std::move(var_10), std::move(var_11), std::move(var_12), std::move(var_13), var_14};
}
/* ------- Function Definitions --------- */
IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1::IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1() : field(), boundaries(), Kalman(), B(), P(), Q(), H(), R(), z(), sensors(), LU(), tmp_field(), flow(0.0E+0, 0.0E+0) { }
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_Fill(IMP_amdados_colon__colon_VectorView& var_0, double value) {
    std::fill(var_0.begin(), var_0.end(), value);
}
/* ------- Function Definitions --------- */
int64_t IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_sub2ind_slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_143_1(int64_t var_0, int64_t value, allscale::utils::Vector<long, 2 > const& var_2) {
    return var_0 * (var_2.y + (int64_t)2) + value;
}
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_ComputeH_slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_329_1(std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > > const& var_0, allscale::utils::Vector<long, 2 > const& index, IMP_amdados_colon__colon_Matrix& var_2) {
    if (var_0.empty()) {
        var_2.Clear();
        return;
    };
    if ((bool)false) {
        std::cerr << "";
    };
    if ((bool)false) {
        std::cerr << "";
    };
    IMP_amdados_colon__colon_Fill((IMP_amdados_colon__colon_VectorView&)var_2, 0.0E+0);
    {
        uint64_t pos = (uint64_t)0;
        while (pos < var_0.size()) {
            var_2.operator()((int64_t)pos, IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_sub2ind_slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_143_1(var_0.operator[](pos).x + (int64_t)1, var_0.operator[](pos).y + (int64_t)1, index)) = 1.0E+0;
            ++pos;
        };
    };
}
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_InitialCovar_slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_258_1(IMP_amdados_colon__colon_Configuration const& var_0, IMP_amdados_colon__colon_Matrix& var_1) {
    const double var_2 = var_0.IMP_asDouble("model_ini_var");
    const double var_3 = var_0.IMP_asDouble("model_ini_covar_radius");
    const double var_4 = std::max(var_3, 1.0E+0);
    const double var_5 = std::max(var_3, 1.0E+0);
    const int64_t var_6 = (int64_t)IMP_amdados_colon__colon_Round(ceil(4.0E+0 * var_4));
    const int64_t var_7 = (int64_t)IMP_amdados_colon__colon_Round(ceil(4.0E+0 * var_5));
    const int64_t var_8 = (int64_t)var_0.IMP_asInt("subdomain_x");
    const int64_t var_9 = (int64_t)var_0.IMP_asInt("subdomain_y");
    const allscale::utils::Vector<long, 2 > var_10{(var_8), (var_9)};
    if ((bool)false) {
        std::cerr << "";
    };
    if ((bool)false) {
        std::cerr << "";
    };
    IMP_amdados_colon__colon_Fill((IMP_amdados_colon__colon_VectorView&)var_1, 0.0E+0);
    {
        int64_t var_11 = (int64_t)0;
        while (var_11 < var_8 + (int64_t)2) {
            {
                int64_t var_12 = (int64_t)0;
                while (var_12 < var_9 + (int64_t)2) {
                    {
                        int64_t var_13 = IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_sub2ind_slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_143_1(var_11, var_12, var_10);
                        double var_14 = 0.0E+0;
                        double var_15 = 0.0E+0;
                        {
                            int64_t var_16 = var_11 - var_6;
                            while (var_16 <= var_11 + var_6) {
                                if ((int64_t)0 <= var_16 && var_16 < var_8 + (int64_t)2) {
                                    int64_t var_17 = var_12 - var_7;
                                    while (var_17 <= var_12 + var_7) {
                                        if ((int64_t)0 <= var_17 && var_17 < var_9 + (int64_t)2) {
                                            int64_t var_18 = IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_sub2ind_slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_143_1(var_16, var_17, var_10);
                                            if (var_13 <= var_18) {
                                                var_14 = (double)(var_11 - var_16) / var_4;
                                                var_15 = (double)(var_12 - var_17) / var_5;
                                                var_1.operator()(var_13, var_18) = *allscale_fun_1051(&var_1.operator()(var_18, var_13), var_2 * exp(-5.0E-1 * (var_14 * var_14 + var_15 * var_15)));
                                            };
                                        };
                                        ++var_17;
                                    };
                                };
                                ++var_16;
                            };
                        };
                    };
                    ++var_12;
                };
            };
            ++var_11;
        };
    };
}
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36_const_space_amdados_colon__colon_Configuration_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36::operator()(allscale::utils::Vector<long, 2 > const& index) const {
    allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > const&& var_2 = allscale::runtime::DataItemManager::get((allscale::runtime::DataItemReference<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > > const&)(*this).capture_sensors);
    allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u >&& var_3 = allscale::runtime::DataItemManager::get((allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >&)(*this).capture_state_field);
    allscale::api::user::data::Grid<IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1, 2u >&& var_4 = allscale::runtime::DataItemManager::get((allscale::runtime::DataItemReference<allscale::api::user::data::Grid<IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1, 2u > >&)(*this).capture_contexts);
    const int64_t var_5 = (int64_t)var_2.operator[](index).size();
    if (var_5 > (int64_t)0) {
        var_3.operator[](index).setActiveLayer((uint32_t)amdadosLayerFine);
    } else {
        var_3.operator[](index).setActiveLayer((uint32_t)amdadosLayerLow);
    };
    const allscale::utils::Vector<long, 2 > var_6 = (allscale::utils::Vector<long, 2 >&&)allscale::utils::Vector<long, 2 >{var_3.operator[](index).getActiveLayerSize()};
    const int64_t var_7 = var_6.x;
    const int64_t var_8 = var_6.y;
    const int64_t var_9 = (var_7 + (int64_t)2) * (var_8 + (int64_t)2);
    IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1& var_10 = var_4.operator[](index);
    var_10.field.Resize(var_7 + (int64_t)2, var_8 + (int64_t)2, (bool)true);
    var_10.B.Resize(var_9, var_9, (bool)true);
    if (var_5 > (int64_t)0) {
        var_10.P.Resize(var_9, var_9, (bool)true);
        var_10.Q.Resize(var_9, var_9, (bool)true);
        var_10.H.Resize(var_5, var_9, (bool)true);
        var_10.R.Resize(var_5, var_5, (bool)true);
        var_10.z.Resize(var_5, (bool)true);
        var_10.sensors = var_2.operator[](index);
        IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_ComputeH_slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_329_1(var_2.operator[](index), var_6, var_10.H);
        IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_InitialCovar_slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_258_1((*this).capture_conf, var_10.P);
    };
}
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36_const_space_amdados_colon__colon_Configuration_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36::store(allscale::utils::ArchiveWriter& var_1) const {
    var_1.write<IMP_amdados_colon__colon_Configuration >((*this).capture_conf);
    var_1.write<allscale::runtime::DataItemReference<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > > >((*this).capture_sensors);
    var_1.write<allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > >((*this).capture_state_field);
    var_1.write<allscale::runtime::DataItemReference<allscale::api::user::data::Grid<IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1, 2u > > >((*this).capture_contexts);
}
/* ------- Function Definitions --------- */
IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36_const_space_amdados_colon__colon_Configuration_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36 IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36_const_space_amdados_colon__colon_Configuration_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36::load(allscale::utils::ArchiveReader& var_0) {
    IMP_amdados_colon__colon_Configuration var_1 = var_0.read<IMP_amdados_colon__colon_Configuration >();
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > > var_2 = var_0.read<allscale::runtime::DataItemReference<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > > >();
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > var_3 = var_0.read<allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > >();
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1, 2u > > var_4 = var_0.read<allscale::runtime::DataItemReference<allscale::api::user::data::Grid<IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1, 2u > > >();
    return {std::move(var_1), std::move(var_2), std::move(var_3), std::move(var_4)};
}
/* ------- Function Definitions --------- */
struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 {
    uint64_t capture_t;
    IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_749_9_const_space_amdados_colon__colon_Configuration_const_space_unsigned_space_long_const_space_unsigned_space_long_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_749_9 capture_update;
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > capture_b;
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > capture_a;;
    void operator()(allscale::utils::Vector<long, 2 > const& p2) const;
    void store(allscale::utils::ArchiveWriter& p2) const;
    ;
    ;
    static IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 load(allscale::utils::ArchiveReader& var_0);
};

/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_ApplyBoundaryCondition_slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_238_1(allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >& var_0, allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_2) {
    const allscale::utils::Vector<long, 2 > var_3 = (allscale::utils::Vector<long, 2 >&&)allscale::utils::Vector<long, 2 >{var_0.getActiveLayerSize()};
    const int64_t var_4 = var_2.x;
    const int64_t var_5 = var_3.x;
    const int64_t var_6 = var_2.y;
    const int64_t var_7 = var_3.y;
    if (index.x == (int64_t)0) {
        var_0.setBoundary(allscale::api::user::data::Direction::Left, std::vector<double, std::allocator<double > >{(uint64_t)var_7, 0.0E+0, std::allocator<double >{}});
    } else {
        if (index.x == var_4 - (int64_t)1) {
            var_0.setBoundary(allscale::api::user::data::Direction::Right, std::vector<double, std::allocator<double > >{(uint64_t)var_7, 0.0E+0, std::allocator<double >{}});
        };
    };
    if (index.y == (int64_t)0) {
        var_0.setBoundary(allscale::api::user::data::Direction::Down, std::vector<double, std::allocator<double > >{(uint64_t)var_5, 0.0E+0, std::allocator<double >{}});
    } else {
        if (index.y == var_6 - (int64_t)1) {
            var_0.setBoundary(allscale::api::user::data::Direction::Up, std::vector<double, std::allocator<double > >{(uint64_t)var_5, 0.0E+0, std::allocator<double >{}});
        };
    };
}
struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_599_24_double_const_space_double_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_599_24;
typedef struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_599_24_double_const_space_double_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_599_24 IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_599_24_double_const_space_double_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_599_24;

typedef double allscale_type_1281(double const&);

typedef allscale_type_1281* allscale_type_1282;

struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_599_24_double_const_space_double_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_599_24 {
    operator allscale_type_1282() const;
    ;
    ;
    double operator()(double const& p2) const;
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_599_24_double_const_space_double_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_599_24 load(allscale::utils::ArchiveReader& var_0);
};

struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_436_32_amdados_colon__colon_Matrix_space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_double_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_436_32;
typedef struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_436_32_amdados_colon__colon_Matrix_space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_double_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_436_32 IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_436_32_amdados_colon__colon_Matrix_space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_double_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_436_32;

struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_436_32_amdados_colon__colon_Matrix_space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_double_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_436_32 {
    IMP_amdados_colon__colon_Matrix& capture_field;;
    void operator()(allscale::utils::Vector<long, 2 > const& p2, double const& p3) const;
};

/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_MatrixFromAllscale_slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_424_1(IMP_amdados_colon__colon_Matrix& var_0, allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > const& var_1, allscale::utils::Vector<long, 2 > const& var_2) {
    allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > const&& var_3 = allscale::runtime::DataItemManager::get(var_1);
    const uint32_t var_4 = var_3.operator[](var_2).getActiveLayer();
    const int64_t var_5 = var_3.size().x;
    const int64_t var_6 = var_3.size().y;
    const int64_t var_7 = (int64_t)var_3.operator[](var_2).getActiveLayerSize().x;
    const int64_t var_8 = (int64_t)var_3.operator[](var_2).getActiveLayerSize().y;
    if ((bool)false) {
        std::cerr << "";
    };
    var_3.operator[](var_2).forAllActiveNodes(INS_INIT(IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_436_32_amdados_colon__colon_Matrix_space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_double_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_436_32){var_0});
    std::vector<double, std::allocator<double > > var_9;
    if (var_2.x > (int64_t)0) {
        var_9 = var_3.operator[](allscale::utils::Vector<long, 2 >{var_2.x - (int64_t)1, var_2.y}).data.getBoundary(var_4, allscale::api::user::data::Direction::Right);
        if ((bool)false) {
            std::cerr << "";
        };
        {
            for (int64_t var_10 = (int64_t)0; var_10 < var_8; ++var_10) {
                var_0.operator()((int64_t)0, var_10 + (int64_t)1) = var_9.operator[]((uint64_t)var_10);
            };
        };
    } else {
        for (int64_t var_11 = (int64_t)0; var_11 < var_8; ++var_11) {
            var_0.operator()((int64_t)0, var_11 + (int64_t)1) = var_0.operator()((int64_t)2, var_11 + (int64_t)1);
        };
    };
    if (var_2.x + (int64_t)1 < var_5) {
        var_9 = var_3.operator[](allscale::utils::Vector<long, 2 >{var_2.x + (int64_t)1, var_2.y}).data.getBoundary(var_4, allscale::api::user::data::Direction::Left);
        if ((bool)false) {
            std::cerr << "";
        };
        {
            for (int64_t var_12 = (int64_t)0; var_12 < var_8; ++var_12) {
                var_0.operator()(var_7 + (int64_t)1, var_12 + (int64_t)1) = var_9.operator[]((uint64_t)var_12);
            };
        };
    } else {
        for (int64_t var_13 = (int64_t)0; var_13 < var_8; ++var_13) {
            var_0.operator()(var_7 + (int64_t)1, var_13 + (int64_t)1) = var_0.operator()(var_7 - (int64_t)1, var_13 + (int64_t)1);
        };
    };
    if (var_2.y > (int64_t)0) {
        var_9 = var_3.operator[](allscale::utils::Vector<long, 2 >{var_2.x, var_2.y - (int64_t)1}).data.getBoundary(var_4, allscale::api::user::data::Direction::Up);
        if ((bool)false) {
            std::cerr << "";
        };
        {
            for (int64_t var_14 = (int64_t)0; var_14 < var_7; ++var_14) {
                var_0.operator()(var_14 + (int64_t)1, (int64_t)0) = var_9.operator[]((uint64_t)var_14);
            };
        };
    } else {
        for (int64_t var_15 = (int64_t)0; var_15 < var_7; ++var_15) {
            var_0.operator()(var_15 + (int64_t)1, (int64_t)0) = var_0.operator()(var_15 + (int64_t)1, (int64_t)2);
        };
    };
    if (var_2.y + (int64_t)1 < var_6) {
        var_9 = var_3.operator[](allscale::utils::Vector<long, 2 >{var_2.x, var_2.y + (int64_t)1}).data.getBoundary(var_4, allscale::api::user::data::Direction::Down);
        if ((bool)false) {
            std::cerr << "";
        };
        {
            for (int64_t var_16 = (int64_t)0; var_16 < var_7; ++var_16) {
                var_0.operator()(var_16 + (int64_t)1, var_8 + (int64_t)1) = var_9.operator[]((uint64_t)var_16);
            };
        };
    } else {
        for (int64_t var_17 = (int64_t)0; var_17 < var_7; ++var_17) {
            var_0.operator()(var_17 + (int64_t)1, var_8 + (int64_t)1) = var_0.operator()(var_17 + (int64_t)1, var_8 - (int64_t)1);
        };
    };
    var_0.operator()((int64_t)0, (int64_t)0) = (var_0.operator()((int64_t)1, (int64_t)0) + var_0.operator()((int64_t)1, (int64_t)1) + var_0.operator()((int64_t)0, (int64_t)1)) / 3.0E+0;
    var_0.operator()((int64_t)0, var_8 + (int64_t)1) = (var_0.operator()((int64_t)1, var_8 + (int64_t)1) + var_0.operator()((int64_t)1, var_8) + var_0.operator()((int64_t)0, var_8)) / 3.0E+0;
    var_0.operator()(var_7 + (int64_t)1, (int64_t)0) = (var_0.operator()(var_7, (int64_t)0) + var_0.operator()(var_7, (int64_t)1) + var_0.operator()(var_7 + (int64_t)1, (int64_t)1)) / 3.0E+0;
    var_0.operator()(var_7 + (int64_t)1, var_8 + (int64_t)1) = (var_0.operator()(var_7, var_8 + (int64_t)1) + var_0.operator()(var_7, var_8) + var_0.operator()(var_7 + (int64_t)1, var_8)) / 3.0E+0;
}
/* ------- Function Definitions --------- */
std::pair<double, double > IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_Flow_slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_349_1(IMP_amdados_colon__colon_Configuration const& var_0, uint64_t var_1) {
    const double var_2 = var_0.IMP_asDouble("flow_model_max_vx");
    const double var_3 = var_0.IMP_asDouble("flow_model_max_vy");
    const double var_4 = (double)var_1 / var_0.IMP_asDouble("Nt");
    return (std::pair<double, double >&&)std::pair<double, double >{(0.0 - var_2) * sin(1.0000000000000001E-1 * var_4 - 3.1415926535897931E+0), (0.0 - var_3) * sin(2.0000000000000001E-1 * var_4 - 3.1415926535897931E+0)};
}
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_GetObservations_slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_210_1(IMP_amdados_colon__colon_VectorView& var_0, IMP_amdados_colon__colon_Matrix const& var_1, int32_t var_2, IMP_amdados_colon__colon_Matrix const& var_3, std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > > const& var_4, allscale::utils::Vector<long, 2 > const& var_5) {
    const int64_t var_6 = var_1.NCols();
    if ((bool)false) {
        std::cerr << "";
    };
    {
        for (int64_t var_7 = (int64_t)0; var_7 < var_6; ++var_7) {
            var_0.operator()(var_7) = var_1.operator()((int64_t)var_2, var_7);
        };
    };
    (void)var_3;
    (void)var_4;
    (void)var_5;
}
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon_MakeIdentityMatrix(IMP_amdados_colon__colon_Matrix& var_0) {
    std::fill(((IMP_amdados_colon__colon_VectorView&)var_0).begin(), ((IMP_amdados_colon__colon_VectorView&)var_0).end(), 0.0E+0);
    {
        int64_t value = (int64_t)0;
        while (value < var_0.NRows()) {
            var_0.operator()(value, value) = 1.0E+0;
            ++value;
        };
    };
}
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_InverseModelMatrix_slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_368_1(IMP_amdados_colon__colon_Matrix& var_0, IMP_amdados_colon__colon_Configuration const& var_1, std::pair<double, double > const& var_2, allscale::utils::Vector<long, 2 > const& var_3, uint32_t var_4, int32_t var_5) {
    const int64_t var_6 = var_3.x;
    const int64_t var_7 = var_3.y;
    if ((bool)false) {
        std::cerr << "";
    };
    const double var_8 = var_4 == (uint32_t)amdadosLayerFine ? 1.0E+0 : var_1.IMP_asDouble("resolution_ratio");
    const double var_9 = var_1.IMP_asDouble("diffusion_coef");
    const double var_10 = var_1.IMP_asDouble("dx") * var_8;
    const double var_11 = var_1.IMP_asDouble("dy") * var_8;
    const double var_12 = var_1.IMP_asDouble("dt") / (double)(var_5 > 0 ? var_5 : 1);
    const double var_13 = var_9 * var_12 / std::pow(var_10, 2);
    const double var_14 = var_9 * var_12 / std::pow(var_11, 2);
    const double var_15 = 2.0E+0 * var_10 / var_12;
    const double var_16 = 2.0E+0 * var_11 / var_12;
    const double var_17 = var_2.first / var_15;
    const double var_18 = var_2.second / var_16;
    IMP_amdados_colon__colon_MakeIdentityMatrix(var_0);
    {
        for (int64_t var_19 = (int64_t)1, _end = var_6 + 1l; var_19 < _end; ++var_19) {
            {
                for (int64_t var_20 = (int64_t)1, _end = var_7 + 1l; var_20 < _end; ++var_20) {
                    {
                        int64_t var_21 = IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_sub2ind_slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_143_1(var_19, var_20, var_3);
                        var_0.operator()(var_21, var_21) = 1.0E+0 + (double)2 * (var_13 + var_14);
                        var_0.operator()(var_21, IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_sub2ind_slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_143_1(var_19 - (int64_t)1, var_20, var_3)) = 0.0 - var_17 - var_13;
                        var_0.operator()(var_21, IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_sub2ind_slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_143_1(var_19 + (int64_t)1, var_20, var_3)) = var_17 - var_13;
                        var_0.operator()(var_21, IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_sub2ind_slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_143_1(var_19, var_20 - (int64_t)1, var_3)) = 0.0 - var_18 - var_14;
                        var_0.operator()(var_21, IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_sub2ind_slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_143_1(var_19, var_20 + (int64_t)1, var_3)) = var_18 - var_14;
                    };
                };
            };
        };
    };
}
struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_515_28_const_space_amdados_colon__colon_Matrix_space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__double_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_515_28;
typedef struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_515_28_const_space_amdados_colon__colon_Matrix_space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__double_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_515_28 IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_515_28_const_space_amdados_colon__colon_Matrix_space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__double_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_515_28;

struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_515_28_const_space_amdados_colon__colon_Matrix_space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__double_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_515_28 {
    IMP_amdados_colon__colon_Matrix const& capture_field;;
    void operator()(allscale::utils::Vector<long, 2 > const& p2, double& p3) const;
};

/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_AllscaleFromMatrix_slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_511_1(allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >& var_0, IMP_amdados_colon__colon_Matrix const& var_1) {
    if ((bool)false) {
        std::cerr << "";
    };
    var_0.forAllActiveNodes(INS_INIT(IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_515_28_const_space_amdados_colon__colon_Matrix_space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__double_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_515_28){var_1});
}
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_ComputeR_slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_312_1(IMP_amdados_colon__colon_Configuration const& var_0, IMP_amdados_colon__colon_Matrix& var_1) {
    std::uniform_real_distribution<double > var_2{((double)0), ((double)1)};
    std::mersenne_twister_engine<uint64_t, 64u, 312u, 156u, 31u, 13043109905998158313u, 29u, 6148914691236517205u, 17u, 8202884508482404352u, 37u, 18444473444759240704u, 43u, 6364136223846793005u > var_3{(IMP_amdados_colon__colon_RandomSeed())};
    const double var_4 = var_0.IMP_asDouble("model_noise_R");
    if ((bool)false) {
        std::cerr << "";
    };
    IMP_amdados_colon__colon_Fill((IMP_amdados_colon__colon_VectorView&)var_1, 0.0E+0);
    {
        int64_t var_5 = (int64_t)0;
        while (var_5 < var_1.NRows()) {
            var_1.operator()(var_5, var_5) = 1.0E+0 + var_4 * var_2.operator()(var_3);
            ++var_5;
        };
    };
}
/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_ComputeQ_slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_296_1(IMP_amdados_colon__colon_Configuration const& var_0, IMP_amdados_colon__colon_Matrix& var_1) {
    std::uniform_real_distribution<double > var_2{((double)0), ((double)1)};
    std::mersenne_twister_engine<uint64_t, 64u, 312u, 156u, 31u, 13043109905998158313u, 29u, 6148914691236517205u, 17u, 8202884508482404352u, 37u, 18444473444759240704u, 43u, 6364136223846793005u > var_3{(IMP_amdados_colon__colon_RandomSeed())};
    const double var_4 = var_0.IMP_asDouble("model_noise_Q");
    if ((bool)false) {
        std::cerr << "";
    };
    IMP_amdados_colon__colon_Fill((IMP_amdados_colon__colon_VectorView&)var_1, 0.0E+0);
    {
        int64_t var_5 = (int64_t)0;
        while (var_5 < var_1.NRows()) {
            var_1.operator()(var_5, var_5) = 1.0E+0 + var_4 * var_2.operator()(var_3);
            ++var_5;
        };
    };
}
typedef void allscale_type_1256(double&);

typedef allscale_type_1256* allscale_type_1257;

struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_594_34_void_double_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_594_34;
typedef struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_594_34_void_double_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_594_34 IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_594_34_void_double_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_594_34;

struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_594_34_void_double_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_594_34 {
    operator allscale_type_1257() const;
    ;
    ;
    void operator()(double& p2) const;
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_594_34_void_double_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_594_34 load(allscale::utils::ArchiveReader& var_0);
};

/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainRoutineKalman_slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_525_1(IMP_amdados_colon__colon_Configuration const& var_0, std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > > const& var_1, IMP_amdados_colon__colon_Matrix const& var_2, uint64_t var_3, allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > const& var_4, allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >& var_5, IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1& var_6, allscale::utils::Vector<long, 2 > const& var_7, uint64_t var_8, uint64_t var_9) {
    allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > const&& var_10 = allscale::runtime::DataItemManager::get(var_4);
    const uint32_t var_11 = (uint32_t)amdadosLayerFine;
    if ((bool)false) {
        std::cerr << "";
    };
    var_5.setActiveLayer(var_11);
    const allscale::utils::Vector<long, 2 > var_12 = (allscale::utils::Vector<long, 2 >&&)allscale::utils::Vector<long, 2 >{var_10.operator[](var_7).getActiveLayerSize()};
    if ((bool)false) {
        std::cerr << "";
    };
    (void)(&var_9);
    const uint64_t var_13 = var_3 / var_8;
    const uint64_t var_14 = var_3 % var_8;
    var_6.flow = IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_Flow_slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_349_1(var_0, var_13);
    IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_MatrixFromAllscale_slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_424_1(var_6.field, var_4, var_7);
    if (var_14 == (uint64_t)0) {
        IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_GetObservations_slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_210_1(var_6.z, var_2, (int32_t)var_13, var_6.H, var_1, var_12);
        IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_ComputeQ_slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_296_1(var_0, var_6.Q);
        IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_ComputeR_slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_312_1(var_0, var_6.R);
        IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_InverseModelMatrix_slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_368_1(var_6.B, var_0, var_6.flow, var_12, var_11, 0);
        var_6.Kalman.PropagateStateInverse(*(IMP_amdados_colon__colon_VectorView*)(&var_6.field), var_6.P, var_6.B, var_6.Q);
    };
    var_6.Kalman.SolveFilter(*(IMP_amdados_colon__colon_VectorView*)(&var_6.field), var_6.P, var_6.H, var_6.R, var_6.z);
    IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_AllscaleFromMatrix_slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_511_1(var_5, var_6.field);
    IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_ApplyBoundaryCondition_slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_238_1(var_5, var_7, var_10.size());
    var_5.forAllActiveNodes(INS_INIT(IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_594_34_void_double_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_594_34){});
    var_5.coarsen(INS_INIT(IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_599_24_double_const_space_double_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_599_24){});
    var_5.setActiveLayer(var_11);
}
struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_667_23_double_const_space_double_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_667_23;
typedef struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_667_23_double_const_space_double_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_667_23 IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_667_23_double_const_space_double_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_667_23;

struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_667_23_double_const_space_double_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_667_23 {
    operator allscale_type_1282() const;
    ;
    ;
    double operator()(double const& p2) const;
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_667_23_double_const_space_double_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_667_23 load(allscale::utils::ArchiveReader& var_0);
};

struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_662_34_void_double_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_662_34;
typedef struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_662_34_void_double_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_662_34 IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_662_34_void_double_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_662_34;

struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_662_34_void_double_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_662_34 {
    operator allscale_type_1257() const;
    ;
    ;
    void operator()(double& p2) const;
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_662_34_void_double_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_662_34 load(allscale::utils::ArchiveReader& var_0);
};

/* ------- Function Definitions --------- */
void IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainRoutineNoSensors_slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_608_1(IMP_amdados_colon__colon_Configuration const& var_0, uint64_t var_1, allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > const& var_2, allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >& var_3, IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1& var_4, allscale::utils::Vector<long, 2 > const& var_5, uint64_t var_6, uint64_t var_7) {
    allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > const&& var_8 = allscale::runtime::DataItemManager::get(var_2);
    const uint32_t var_9 = (uint32_t)amdadosLayerLow;
    if ((bool)false) {
        std::cerr << "";
    };
    var_3.setActiveLayer(var_9);
    const allscale::utils::Vector<long, 2 > var_10 = (allscale::utils::Vector<long, 2 >&&)allscale::utils::Vector<long, 2 >{var_8.operator[](var_5).getActiveLayerSize()};
    if ((bool)false) {
        std::cerr << "";
    };
    (void)(&var_7);
    const uint64_t var_11 = var_1 / var_6;
    const uint64_t var_12 = var_1 % var_6;
    (void)(&var_12);
    var_4.flow = IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_Flow_slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_349_1(var_0, var_11);
    IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_MatrixFromAllscale_slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_424_1(var_4.field, var_2, var_5);
    IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_InverseModelMatrix_slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_368_1(var_4.B, var_0, var_4.flow, var_10, var_9, (int32_t)var_6);
    var_4.tmp_field.operator=(var_4.field);
    var_4.LU.Init(var_4.B);
    var_4.LU.Solve(*(IMP_amdados_colon__colon_VectorView*)(&var_4.field), *(IMP_amdados_colon__colon_VectorView*)(&var_4.tmp_field));
    IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_AllscaleFromMatrix_slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_511_1(var_3, var_4.field);
    IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_ApplyBoundaryCondition_slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_238_1(var_3, var_5, var_8.size());
    var_3.forAllActiveNodes(INS_INIT(IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_662_34_void_double_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_662_34){});
    var_3.refine(INS_INIT(IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_667_23_double_const_space_double_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_667_23){});
    var_3.setActiveLayer(var_9);
}
/* ------- Function Definitions --------- */
allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > > IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_749_9_const_space_amdados_colon__colon_Configuration_const_space_unsigned_space_long_const_space_unsigned_space_long_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_749_9::operator()(int64_t value, allscale::utils::Vector<long, 2 > const& var_2, allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > const& var_3) const {
    allscale::api::user::data::Grid<IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1, 2u >&& var_4 = allscale::runtime::DataItemManager::get((allscale::runtime::DataItemReference<allscale::api::user::data::Grid<IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1, 2u > >&)(*this).capture_contexts);
    allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > const&& var_5 = allscale::runtime::DataItemManager::get((allscale::runtime::DataItemReference<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > > const&)(*this).capture_sensors);
    allscale::api::user::data::Grid<IMP_amdados_colon__colon_Matrix, 2u > const&& var_6 = allscale::runtime::DataItemManager::get((allscale::runtime::DataItemReference<allscale::api::user::data::Grid<IMP_amdados_colon__colon_Matrix, 2u > > const&)(*this).capture_observations);
    allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > > var_7;
    if (var_4.operator[](var_2).sensors.size() > (uint64_t)0) {
        IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainRoutineKalman_slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_525_1((*this).capture_conf, var_5.operator[](var_2), var_6.operator[](var_2), (uint64_t)value, var_3, var_7, var_4.operator[](var_2), var_2, (*this).capture_Nsubiter, (*this).capture_Nt);
    } else {
        IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainRoutineNoSensors_slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_608_1((*this).capture_conf, (uint64_t)value, var_3, var_7, var_4.operator[](var_2), var_2, (*this).capture_Nsubiter, (*this).capture_Nt);
    };
    return (allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >&&)var_7;
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_599_24_double_const_space_double_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_599_24::operator allscale_type_1282() const {
    assert((bool)false && (bool)"This is an Insieme generated dummy function which should never be called");
}
/* ------- Function Definitions --------- */
double IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_599_24_double_const_space_double_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_599_24::operator()(double const& var_1) const {
    return var_1;
}
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_599_24_double_const_space_double_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_599_24::store(allscale::utils::ArchiveWriter& var_1) const { }
/* ------- Function Definitions --------- */
IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_599_24_double_const_space_double_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_599_24 IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_599_24_double_const_space_double_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_599_24::load(allscale::utils::ArchiveReader& var_0) {
    return {};
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_436_32_amdados_colon__colon_Matrix_space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_double_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_436_32::operator()(allscale::utils::Vector<long, 2 > const& index, double const& var_2) const {
    (*this).capture_field.operator()(index.x + (int64_t)1, index.y + (int64_t)1) = var_2;
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_515_28_const_space_amdados_colon__colon_Matrix_space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__double_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_515_28::operator()(allscale::utils::Vector<long, 2 > const& index, double& var_2) const {
    var_2 = (*this).capture_field.operator()(index.x + (int64_t)1, index.y + (int64_t)1);
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_594_34_void_double_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_594_34::operator allscale_type_1257() const {
    assert((bool)false && (bool)"This is an Insieme generated dummy function which should never be called");
}
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_594_34_void_double_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_594_34::operator()(double& var_1) const {
    if (var_1 < 0.0E+0) {
        var_1 = 0.0E+0;
    };
}
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_594_34_void_double_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_594_34::store(allscale::utils::ArchiveWriter& var_1) const { }
/* ------- Function Definitions --------- */
IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_594_34_void_double_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_594_34 IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_594_34_void_double_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_594_34::load(allscale::utils::ArchiveReader& var_0) {
    return {};
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_667_23_double_const_space_double_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_667_23::operator allscale_type_1282() const {
    assert((bool)false && (bool)"This is an Insieme generated dummy function which should never be called");
}
/* ------- Function Definitions --------- */
double IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_667_23_double_const_space_double_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_667_23::operator()(double const& var_1) const {
    return var_1;
}
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_667_23_double_const_space_double_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_667_23::store(allscale::utils::ArchiveWriter& var_1) const { }
/* ------- Function Definitions --------- */
IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_667_23_double_const_space_double_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_667_23 IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_667_23_double_const_space_double_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_667_23::load(allscale::utils::ArchiveReader& var_0) {
    return {};
}
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_662_34_void_double_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_662_34::store(allscale::utils::ArchiveWriter& var_1) const { }
/* ------- Function Definitions --------- */
IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_662_34_void_double_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_662_34 IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_662_34_void_double_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_662_34::load(allscale::utils::ArchiveReader& var_0) {
    return {};
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_662_34_void_double_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_662_34::operator()(double& var_1) const {
    if (var_1 < 0.0E+0) {
        var_1 = 0.0E+0;
    };
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_662_34_void_double_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_662_34::operator allscale_type_1257() const {
    assert((bool)false && (bool)"This is an Insieme generated dummy function which should never be called");
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_749_9_const_space_amdados_colon__colon_Configuration_const_space_unsigned_space_long_const_space_unsigned_space_long_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_749_9 IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_749_9_const_space_amdados_colon__colon_Configuration_const_space_unsigned_space_long_const_space_unsigned_space_long_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_749_9::load(allscale::utils::ArchiveReader& var_0) {
    IMP_amdados_colon__colon_Configuration var_1 = var_0.read<IMP_amdados_colon__colon_Configuration >();
    uint64_t pos = var_0.read<uint64_t >();
    uint64_t var_3 = var_0.read<uint64_t >();
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1, 2u > > var_4 = var_0.read<allscale::runtime::DataItemReference<allscale::api::user::data::Grid<IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1, 2u > > >();
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > > var_5 = var_0.read<allscale::runtime::DataItemReference<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > > >();
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<IMP_amdados_colon__colon_Matrix, 2u > > var_6 = var_0.read<allscale::runtime::DataItemReference<allscale::api::user::data::Grid<IMP_amdados_colon__colon_Matrix, 2u > > >();
    return {std::move(var_1), std::move(pos), std::move(var_3), std::move(var_4), std::move(var_5), std::move(var_6)};
}
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_749_9_const_space_amdados_colon__colon_Configuration_const_space_unsigned_space_long_const_space_unsigned_space_long_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_749_9::store(allscale::utils::ArchiveWriter& var_1) const {
    var_1.write<IMP_amdados_colon__colon_Configuration >((*this).capture_conf);
    var_1.write<uint64_t >((*this).capture_Nsubiter);
    var_1.write<uint64_t >((*this).capture_Nt);
    var_1.write<allscale::runtime::DataItemReference<allscale::api::user::data::Grid<IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1, 2u > > >((*this).capture_contexts);
    var_1.write<allscale::runtime::DataItemReference<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > > >((*this).capture_sensors);
    var_1.write<allscale::runtime::DataItemReference<allscale::api::user::data::Grid<IMP_amdados_colon__colon_Matrix, 2u > > >((*this).capture_observations);
}
/* ------- Function Definitions --------- */
IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8::load(allscale::utils::ArchiveReader& var_0) {
    uint64_t pos = var_0.read<uint64_t >();
    IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_749_9_const_space_amdados_colon__colon_Configuration_const_space_unsigned_space_long_const_space_unsigned_space_long_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_749_9 var_2 = var_0.read<IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_749_9_const_space_amdados_colon__colon_Configuration_const_space_unsigned_space_long_const_space_unsigned_space_long_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_749_9 >();
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > var_3 = var_0.read<allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > >();
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > var_4 = var_0.read<allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > >();
    return {std::move(pos), std::move(var_2), std::move(var_3), std::move(var_4)};
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8::store(allscale::utils::ArchiveWriter& var_1) const {
    var_1.write<uint64_t >((*this).capture_t);
    var_1.write<IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_749_9_const_space_amdados_colon__colon_Configuration_const_space_unsigned_space_long_const_space_unsigned_space_long_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_749_9 >((*this).capture_update);
    var_1.write<allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > >((*this).capture_b);
    var_1.write<allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > >((*this).capture_a);
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8::operator()(allscale::utils::Vector<long, 2 > const& index) const {
    allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u >&& var_2 = allscale::runtime::DataItemManager::get((allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >&)(*this).capture_b);
    var_2.operator[](index) = (*this).capture_update.operator()((int64_t)(*this).capture_t, index, (allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >&)(*this).capture_a);
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 {
    uint64_t capture_t;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2 capture_observer;
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > capture_b;;
    void operator()(allscale::utils::Vector<long, 2 > const& p2) const;
    void store(allscale::utils::ArchiveWriter& p2) const;
    ;
    ;
    static IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 load(allscale::utils::ArchiveReader& var_0);
};

/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
bool IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13_bool_long_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13::operator()(int64_t value) const {
    return (bool)false;
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13_bool_long_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13 IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13_bool_long_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13::load(allscale::utils::ArchiveReader& var_0) {
    return {};
}
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13_bool_long_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13::store(allscale::utils::ArchiveWriter& var_1) const { }
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13_bool_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13::operator allscale_type_1386() const {
    assert((bool)false && (bool)"This is an Insieme generated dummy function which should never be called");
}
/* ------- Function Definitions --------- */
bool IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13_bool_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13::operator()(allscale::utils::Vector<long, 2 > const& index) const {
    return (bool)true;
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13_bool_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13::store(allscale::utils::ArchiveWriter& var_1) const { }
/* ------- Function Definitions --------- */
IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13_bool_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13 IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13_bool_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13::load(allscale::utils::ArchiveReader& var_0) {
    return {};
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13_const_space_unsigned_space_long_void_long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13::operator()(int64_t value, allscale::utils::Vector<long, 2 > const& var_2, allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > > const& var_3) const { }
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13_const_space_unsigned_space_long_void_long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13::store(allscale::utils::ArchiveWriter& var_1) const {
    var_1.write<uint64_t >((*this).capture_Nsubiter);
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13_const_space_unsigned_space_long_void_long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13 IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13_const_space_unsigned_space_long_void_long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13::load(allscale::utils::ArchiveReader& var_0) {
    uint64_t pos = var_0.read<uint64_t >();
    return {std::move(pos)};
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2::IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2(IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13_bool_long_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13 const& var_1, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13_bool_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13 const& var_2, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13_const_space_unsigned_space_long_void_long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13 const& var_3) : isInterestedInTime(var_1), isInterestedInLocation(var_2), trigger(var_3) { }
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2::IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2(IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13_bool_long_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13&& var_1, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13_bool_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13&& var_2, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13_const_space_unsigned_space_long_void_long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13&& var_3, DummyCtorParamType var_4) : isInterestedInTime(var_1), isInterestedInLocation(var_2), trigger(var_3) { }
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2::store(allscale::utils::ArchiveWriter& var_1) const {
    var_1.write<IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13_bool_long_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13 >((*this).isInterestedInTime);
    var_1.write<IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13_bool_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13 >((*this).isInterestedInLocation);
    var_1.write<IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13_const_space_unsigned_space_long_void_long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13 >((*this).trigger);
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2 IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2::load(allscale::utils::ArchiveReader& var_0) {
    IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13_bool_long_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13 var_1 = var_0.read<IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13_bool_long_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13 >();
    IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13_bool_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13 var_2 = var_0.read<IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13_bool_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13 >();
    IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13_const_space_unsigned_space_long_void_long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13 var_3 = var_0.read<IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13_const_space_unsigned_space_long_void_long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13 >();
    DummyCtorParamType var_4;
    return {std::move(var_1), std::move(var_2), std::move(var_3), var_4};
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10::load(allscale::utils::ArchiveReader& var_0) {
    uint64_t pos = var_0.read<uint64_t >();
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2 var_2 = var_0.read<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2 >();
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > var_3 = var_0.read<allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > >();
    return {std::move(pos), std::move(var_2), std::move(var_3)};
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10::operator()(allscale::utils::Vector<long, 2 > const& index) const {
    allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u >&& var_2 = allscale::runtime::DataItemManager::get((allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >&)(*this).capture_b);
    if ((*this).capture_observer.isInterestedInLocation.operator()(index)) {
        (*this).capture_observer.trigger.operator()((int64_t)(*this).capture_t, index, var_2.operator[](index));
    };
}
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10::store(allscale::utils::ArchiveWriter& var_1) const {
    var_1.write<uint64_t >((*this).capture_t);
    var_1.write<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2 >((*this).capture_observer);
    var_1.write<allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > >((*this).capture_b);
}
struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 {
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > capture_a;
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > capture_b;;
    void operator()(allscale::utils::Vector<long, 2 > const& p2) const;
    void store(allscale::utils::ArchiveWriter& p2) const;
    ;
    ;
    static IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 load(allscale::utils::ArchiveReader& var_0);
};

/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7::store(allscale::utils::ArchiveWriter& var_1) const {
    var_1.write<allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > >((*this).capture_a);
    var_1.write<allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > >((*this).capture_b);
}
/* ------- Function Definitions --------- */
IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7::load(allscale::utils::ArchiveReader& var_0) {
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > var_1 = var_0.read<allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > >();
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > var_2 = var_0.read<allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > >();
    return {std::move(var_1), std::move(var_2)};
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7::operator()(allscale::utils::Vector<long, 2 > const& index) const {
    allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u >&& var_2 = allscale::runtime::DataItemManager::get((allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >&)(*this).capture_a);
    allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u >&& var_3 = allscale::runtime::DataItemManager::get((allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >&)(*this).capture_b);
    var_3.operator[](index) = var_2.operator[](index);
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_() : _begin(), _end() { }
/* ------- Function Definitions --------- */
bool IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::IMP_empty_returns_bool() const {
    return (*this).IMP_size_returns_size_t() == (uint64_t)0;
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_(allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_2) : _begin(index), _end(var_2) {
    if ((*this).IMP_empty_returns_bool()) {
        (*this)._end = (*this)._begin;
    };
}
struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__bool;
typedef struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__bool IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__bool;

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__bool {
    ;
    ;
    uint64_t operator()(allscale::utils::Vector<long, 2 > const& p2, allscale::utils::Vector<long, 2 > const& p3) const;
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__bool load(allscale::utils::ArchiveReader& var_0);
};

/* ------- Function Definitions --------- */
uint64_t IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::IMP_size_returns_size_t() const {
    return IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__bool{}.operator()((*this)._begin, (*this)._end);
}
struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_struct_space_std_colon__colon_array_lt_long_comma__space_2_gt__bool;
typedef struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_struct_space_std_colon__colon_array_lt_long_comma__space_2_gt__bool IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_struct_space_std_colon__colon_array_lt_long_comma__space_2_gt__bool;

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_struct_space_std_colon__colon_array_lt_long_comma__space_2_gt__bool {
    ;
    ;
    uint64_t operator()(std::array<int64_t, 2u > const& p2, std::array<int64_t, 2u > const& p3) const;
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_struct_space_std_colon__colon_array_lt_long_comma__space_2_gt__bool load(allscale::utils::ArchiveReader& var_0);
};

/* ------- Function Definitions --------- */
uint64_t IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__bool::operator()(allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_2) const {
    return IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_struct_space_std_colon__colon_array_lt_long_comma__space_2_gt__bool{}.operator()(index.operator const std::array<long, 2> &(), var_2.operator const std::array<long, 2> &());
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_long_bool;
typedef struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_long_bool IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_long_bool;

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_long_bool {
    ;
    ;
    uint64_t operator()(int64_t p2, int64_t p3) const;
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_long_bool load(allscale::utils::ArchiveReader& var_0);
};

/* ------- Function Definitions --------- */
uint64_t IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_struct_space_std_colon__colon_array_lt_long_comma__space_2_gt__bool::operator()(std::array<int64_t, 2u > const& var_1, std::array<int64_t, 2u > const& var_2) const {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_long_bool var_3;
    uint64_t pos = (uint64_t)1;
    {
        for (uint64_t var_5 = (uint64_t)0; var_5 < 2ul; ++var_5) {
            pos *= var_3.operator()(var_1.operator[](var_5), var_2.operator[](var_5));
        };
    };
    return pos;
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
uint64_t IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_long_bool::operator()(int64_t value, int64_t i) const {
    return (uint64_t)(value < i ? i - value : (int64_t)0);
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_long_bool IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_long_bool::load(allscale::utils::ArchiveReader& var_0) {
    return {};
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_long_bool::store(allscale::utils::ArchiveWriter& var_1) const { }
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_struct_space_std_colon__colon_array_lt_long_comma__space_2_gt__bool IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_struct_space_std_colon__colon_array_lt_long_comma__space_2_gt__bool::load(allscale::utils::ArchiveReader& var_0) {
    return {};
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_struct_space_std_colon__colon_array_lt_long_comma__space_2_gt__bool::store(allscale::utils::ArchiveWriter& var_1) const { }
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__bool IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__bool::load(allscale::utils::ArchiveReader& var_0) {
    return {};
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__bool::store(allscale::utils::ArchiveWriter& var_1) const { }
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_(allscale::utils::Vector<long, 2 >&& var_1, allscale::utils::Vector<long, 2 >&& var_2, DummyCtorParamType var_3) : _begin(var_1), _end(var_2) { }
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
allscale::utils::Vector<long, 2 > const& IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::begin_returns_constallscaleutilsVectorlong2() const {
    return (*this)._begin;
}
/* ------- Function Definitions --------- */
bool IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_covers_long_2_returns_bool(allscale::utils::Vector<long, 2 > const& var_0, allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_2, allscale::utils::Vector<long, 2 > const& var_3) {
    {
        uint64_t pos = (uint64_t)0;
        while (pos < 2ul) {
            if (var_2.operator[](pos) >= var_3.operator[](pos)) {
                return (bool)true;
            };
            ++pos;
        };
    };
    {
        uint64_t var_5 = (uint64_t)0;
        while (var_5 < 2ul) {
            if (!(var_0.operator[](var_5) <= var_2.operator[](var_5) && var_3.operator[](var_5) <= index.operator[](var_5))) {
                return (bool)false;
            };
            ++var_5;
        };
    };
    return (bool)true;
}
/* ------- Function Definitions --------- */
bool IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::covers_returns_bool(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const& var_1) const {
    return IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_covers_long_2_returns_bool((*this)._begin, (*this)._end, var_1._begin, var_1._end);
}
/* ------- Function Definitions --------- */
allscale::utils::Vector<long, 2 > const& IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::end_returns_constallscaleutilsVectorlong2() const {
    return (*this)._end;
}
struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_2;
typedef struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_2 IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_2;

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_1;
typedef struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_1 IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_1;

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_0;
typedef struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_0 IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_0;

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_0 {
    ;
    ;
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_0 load(allscale::utils::ArchiveReader& var_0);
    void IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61_pack_begin_long_long_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& p2, allscale::utils::Vector<long, 2 > const& p3, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61 const& p4, int64_t p5, int64_t p6);
    void IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36_pack_begin_long_long_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& p2, allscale::utils::Vector<long, 2 > const& p3, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36_const_space_amdados_colon__colon_Configuration_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36 const& p4, int64_t p5, int64_t p6);
    void IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_pack_begin_long_long_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& p2, allscale::utils::Vector<long, 2 > const& p3, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 const& p4, int64_t p5, int64_t p6);
    void IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_pack_begin_long_long_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& p2, allscale::utils::Vector<long, 2 > const& p3, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 const& p4, int64_t p5, int64_t p6);
    void IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_pack_begin_long_long_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& p2, allscale::utils::Vector<long, 2 > const& p3, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 const& p4, int64_t p5, int64_t p6);
};

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_1 {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_0 nested;;
    ;
    ;
    void run_allscaleutilsVector_long_2__Insieme__lambda_homeherbertcodingcallscale_amdadoscodeappsrcscenario_benchmarkcpp_100_61_pack_begin_long_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& p2, allscale::utils::Vector<long, 2 > const& p3, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61 const& p4, int64_t p5);
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_1 load(allscale::utils::ArchiveReader& var_0);
    void IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36_pack_begin_long_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& p2, allscale::utils::Vector<long, 2 > const& p3, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36_const_space_amdados_colon__colon_Configuration_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36 const& p4, int64_t p5);
    void IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_pack_begin_long_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& p2, allscale::utils::Vector<long, 2 > const& p3, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 const& p4, int64_t p5);
    void IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_pack_begin_long_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& p2, allscale::utils::Vector<long, 2 > const& p3, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 const& p4, int64_t p5);
    void IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_pack_begin_long_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& p2, allscale::utils::Vector<long, 2 > const& p3, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 const& p4, int64_t p5);
};

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_2 {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_1 nested;;
    ;
    ;
    void run_allscaleutilsVector_long_2__Insieme__lambda_homeherbertcodingcallscale_amdadoscodeappsrcscenario_benchmarkcpp_100_61_pack_begin_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& p2, allscale::utils::Vector<long, 2 > const& p3, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61 const& p4);
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_2 load(allscale::utils::ArchiveReader& var_0);
    void IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36_pack_begin_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& p2, allscale::utils::Vector<long, 2 > const& p3, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36_const_space_amdados_colon__colon_Configuration_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36 const& p4);
    void IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_pack_begin_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& p2, allscale::utils::Vector<long, 2 > const& p3, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 const& p4);
    void IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_pack_begin_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& p2, allscale::utils::Vector<long, 2 > const& p3, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 const& p4);
    void IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_pack_begin_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& p2, allscale::utils::Vector<long, 2 > const& p3, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 const& p4);
};

/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_forEach_long_2__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61_returns_void(allscale::utils::Vector<long, 2 > const& var_0, allscale::utils::Vector<long, 2 > const& index, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61 const& var_2) {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_2{}.run_allscaleutilsVector_long_2__Insieme__lambda_homeherbertcodingcallscale_amdadoscodeappsrcscenario_benchmarkcpp_100_61_pack_begin_pack_end_returns_void(var_0, index, var_2);
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::forEach__Insieme__lambda_homeherbertcodingcallscale_amdadoscodeappsrcscenario_benchmarkcpp_100_61_returns_void(IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61 const& var_1) const {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_forEach_long_2__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61_returns_void((*this)._begin, (*this)._end, var_1);
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_0::store(allscale::utils::ArchiveWriter& var_1) const { }
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_0 IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_0::load(allscale::utils::ArchiveReader& var_0) {
    return {};
}
struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_;
typedef struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_;

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ {
    ;
    ;
    allscale::utils::Vector<long, 2 > operator()(int64_t p2, int64_t p3);
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ load(allscale::utils::ArchiveReader& var_0);
};

/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_0::IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61_pack_begin_long_long_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_2, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61 const& var_3, int64_t var_4, int64_t var_5) {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ var_6;
    var_3.operator()(var_6.operator()(var_4, var_5));
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
allscale::utils::Vector<long, 2 > IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::operator()(int64_t value, int64_t i) {
    return (allscale::utils::Vector<long, 2 >&&)allscale::utils::Vector<long, 2 >{value, i};
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::store(allscale::utils::ArchiveWriter& var_1) const { }
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::load(allscale::utils::ArchiveReader& var_0) {
    return {};
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_0::IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36_pack_begin_long_long_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_2, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36_const_space_amdados_colon__colon_Configuration_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36 const& var_3, int64_t var_4, int64_t var_5) {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ var_6;
    var_3.operator()(var_6.operator()(var_4, var_5));
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_0::IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_pack_begin_long_long_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_2, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 const& var_3, int64_t var_4, int64_t var_5) {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ var_6;
    var_3.operator()(var_6.operator()(var_4, var_5));
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_0::IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_pack_begin_long_long_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_2, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 const& var_3, int64_t var_4, int64_t var_5) {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ var_6;
    var_3.operator()(var_6.operator()(var_4, var_5));
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_0::IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_pack_begin_long_long_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_2, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 const& var_3, int64_t var_4, int64_t var_5) {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ var_6;
    var_3.operator()(var_6.operator()(var_4, var_5));
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_1::run_allscaleutilsVector_long_2__Insieme__lambda_homeherbertcodingcallscale_amdadoscodeappsrcscenario_benchmarkcpp_100_61_pack_begin_long_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_2, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61 const& var_3, int64_t var_4) {
    int64_t var_5 = index.operator[](2ul - 1ul);
    int64_t var_6 = var_2.operator[](2ul - 1ul);
    {
        for (int64_t var_7 = var_5; var_7 < var_6; ++var_7) {
            (*this).nested.IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61_pack_begin_long_long_pack_end_returns_void(index, var_2, var_3, var_4, var_7);
        };
    };
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_1::store(allscale::utils::ArchiveWriter& var_1) const {
    var_1.write<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_0 >((*this).nested);
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_1 IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_1::load(allscale::utils::ArchiveReader& var_0) {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_0 var_1 = var_0.read<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_0 >();
    return {std::move(var_1)};
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_1::IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36_pack_begin_long_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_2, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36_const_space_amdados_colon__colon_Configuration_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36 const& var_3, int64_t var_4) {
    int64_t var_5 = index.operator[](2ul - 1ul);
    int64_t var_6 = var_2.operator[](2ul - 1ul);
    {
        for (int64_t var_7 = var_5; var_7 < var_6; ++var_7) {
            (*this).nested.IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36_pack_begin_long_long_pack_end_returns_void(index, var_2, var_3, var_4, var_7);
        };
    };
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_1::IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_pack_begin_long_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_2, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 const& var_3, int64_t var_4) {
    int64_t var_5 = index.operator[](2ul - 1ul);
    int64_t var_6 = var_2.operator[](2ul - 1ul);
    {
        for (int64_t var_7 = var_5; var_7 < var_6; ++var_7) {
            (*this).nested.IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_pack_begin_long_long_pack_end_returns_void(index, var_2, var_3, var_4, var_7);
        };
    };
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_1::IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_pack_begin_long_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_2, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 const& var_3, int64_t var_4) {
    int64_t var_5 = index.operator[](2ul - 1ul);
    int64_t var_6 = var_2.operator[](2ul - 1ul);
    {
        for (int64_t var_7 = var_5; var_7 < var_6; ++var_7) {
            (*this).nested.IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_pack_begin_long_long_pack_end_returns_void(index, var_2, var_3, var_4, var_7);
        };
    };
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_1::IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_pack_begin_long_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_2, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 const& var_3, int64_t var_4) {
    int64_t var_5 = index.operator[](2ul - 1ul);
    int64_t var_6 = var_2.operator[](2ul - 1ul);
    {
        for (int64_t var_7 = var_5; var_7 < var_6; ++var_7) {
            (*this).nested.IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_pack_begin_long_long_pack_end_returns_void(index, var_2, var_3, var_4, var_7);
        };
    };
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_2::run_allscaleutilsVector_long_2__Insieme__lambda_homeherbertcodingcallscale_amdadoscodeappsrcscenario_benchmarkcpp_100_61_pack_begin_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_2, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61 const& var_3) {
    int64_t var_4 = index.operator[](2ul - 2ul);
    int64_t var_5 = var_2.operator[](2ul - 2ul);
    {
        for (int64_t var_6 = var_4; var_6 < var_5; ++var_6) {
            (*this).nested.run_allscaleutilsVector_long_2__Insieme__lambda_homeherbertcodingcallscale_amdadoscodeappsrcscenario_benchmarkcpp_100_61_pack_begin_long_pack_end_returns_void(index, var_2, var_3, var_6);
        };
    };
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_2::store(allscale::utils::ArchiveWriter& var_1) const {
    var_1.write<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_1 >((*this).nested);
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_2 IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_2::load(allscale::utils::ArchiveReader& var_0) {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_1 var_1 = var_0.read<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_1 >();
    return {std::move(var_1)};
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_2::IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36_pack_begin_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_2, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36_const_space_amdados_colon__colon_Configuration_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36 const& var_3) {
    int64_t var_4 = index.operator[](2ul - 2ul);
    int64_t var_5 = var_2.operator[](2ul - 2ul);
    {
        for (int64_t var_6 = var_4; var_6 < var_5; ++var_6) {
            (*this).nested.IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36_pack_begin_long_pack_end_returns_void(index, var_2, var_3, var_6);
        };
    };
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_2::IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_pack_begin_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_2, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 const& var_3) {
    int64_t var_4 = index.operator[](2ul - 2ul);
    int64_t var_5 = var_2.operator[](2ul - 2ul);
    {
        for (int64_t var_6 = var_4; var_6 < var_5; ++var_6) {
            (*this).nested.IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_pack_begin_long_pack_end_returns_void(index, var_2, var_3, var_6);
        };
    };
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_2::IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_pack_begin_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_2, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 const& var_3) {
    int64_t var_4 = index.operator[](2ul - 2ul);
    int64_t var_5 = var_2.operator[](2ul - 2ul);
    {
        for (int64_t var_6 = var_4; var_6 < var_5; ++var_6) {
            (*this).nested.IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_pack_begin_long_pack_end_returns_void(index, var_2, var_3, var_6);
        };
    };
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_2::IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_pack_begin_pack_end_returns_void(allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_2, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 const& var_3) {
    int64_t var_4 = index.operator[](2ul - 2ul);
    int64_t var_5 = var_2.operator[](2ul - 2ul);
    {
        for (int64_t var_6 = var_4; var_6 < var_5; ++var_6) {
            (*this).nested.IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_pack_begin_long_pack_end_returns_void(index, var_2, var_3, var_6);
        };
    };
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::shrink_returns_allscaleapiuseralgorithmdetailrangeallscaleutilsVectorlong2(int32_t var_1) const {
    return (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_&&)(*this).grow_returns_allscaleapiuseralgorithmdetailrangeallscaleutilsVectorlong2(*this, 0 - var_1);
}
/* ------- Function Definitions --------- */
int64_t IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_grow_long_returns_long(int64_t const& var_0, int64_t const& var_1, int32_t var_2) {
    return std::min(var_1, var_0 + (int64_t)var_2);
}
/* ------- Function Definitions --------- */
allscale::utils::Vector<long, 2 > IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_grow_long_2_returns_utils_colon__colon_Vector_lt_long_comma__space_2UL_gt_(allscale::utils::Vector<long, 2 > const& var_0, allscale::utils::Vector<long, 2 > const& index, int32_t var_2) {
    allscale::utils::Vector<long, 2 > var_3;
    {
        for (uint32_t var_4 = (uint32_t)0; var_4 < (uint32_t)2ul; ++var_4) {
            var_3.operator[]((uint64_t)var_4) = IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_grow_long_returns_long(var_0.operator[]((uint64_t)var_4), index.operator[]((uint64_t)var_4), var_2);
        };
    };
    return (allscale::utils::Vector<long, 2 >&&)var_3;
}
/* ------- Function Definitions --------- */
int64_t IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_shrink_long_returns_long(int64_t const& var_0, int64_t const& var_1, int32_t var_2) {
    return std::max(var_1, var_0 - (int64_t)var_2);
}
/* ------- Function Definitions --------- */
allscale::utils::Vector<long, 2 > IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_shrink_long_2_returns_utils_colon__colon_Vector_lt_long_comma__space_2UL_gt_(allscale::utils::Vector<long, 2 > const& var_0, allscale::utils::Vector<long, 2 > const& index, int32_t var_2) {
    allscale::utils::Vector<long, 2 > var_3;
    {
        for (uint32_t var_4 = (uint32_t)0; var_4 < (uint32_t)2ul; ++var_4) {
            var_3.operator[]((uint64_t)var_4) = IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_shrink_long_returns_long(var_0.operator[]((uint64_t)var_4), index.operator[]((uint64_t)var_4), var_2);
        };
    };
    return (allscale::utils::Vector<long, 2 >&&)var_3;
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::grow_returns_allscaleapiuseralgorithmdetailrangeallscaleutilsVectorlong2(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const& var_1, int32_t var_2) const {
    return (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_&&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_shrink_long_2_returns_utils_colon__colon_Vector_lt_long_comma__space_2UL_gt_((*this)._begin, var_1.begin_returns_constallscaleutilsVectorlong2(), var_2), IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_grow_long_2_returns_utils_colon__colon_Vector_lt_long_comma__space_2UL_gt_((*this)._end, var_1.end_returns_constallscaleutilsVectorlong2(), var_2)};
}
struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ left;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ right;;
};

/* ------- Function Definitions --------- */
uint64_t IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_spliter_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt___static__IMP_getSplitDimension_returns_std_colon__colon_size_t(uint64_t var_0) {
    return var_0 % 2ul;
}
/* ------- Function Definitions --------- */
int64_t* cxx_style_assignment(int64_t* lhs, int64_t value) {
    *lhs = value;
    return lhs;
}
struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_long;
typedef struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_long IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_long;

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long;
typedef struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long;

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long {
    int64_t _begin;
    int64_t _end;;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long();
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long const& p2) = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long&& p2) = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long(int64_t const& p2, int64_t const& p3);
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long(int64_t&& p2, int64_t&& p3, DummyCtorParamType p4);
    ~IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long() = default;
    bool allscale_fun_731() const;
    uint64_t allscale_fun_735() const;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long& operator=(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long const& p2) = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long& operator=(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long&& p2) = default;
    int64_t const& begin_returns_constlong() const;
    bool covers_returns_bool(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long const& p2) const;
    int64_t const& end_returns_constlong() const;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long grow_returns_allscaleapiuseralgorithmdetailrangelong(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long const& p2, int32_t p3) const;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long shrink_returns_allscaleapiuseralgorithmdetailrangelong(int32_t p2) const;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_long split_returns_fragmentslong(uint64_t p2) const;
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long load(allscale::utils::ArchiveReader& var_0);
};

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_long {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long left;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long right;;
};

/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_long allscale_fun_768(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long const& var_0, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long const& var_1) {
    return (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_long&&)INS_INIT(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_long){var_0, var_1};
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_long allscale_fun_766(uint64_t var_0, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long const& var_1) {
    int64_t const& var_2 = var_1.begin_returns_constlong();
    int64_t const& var_3 = var_1.end_returns_constlong();
    int64_t var_4 = var_2 + (var_3 - var_2) / (int64_t)2;
    return (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_long&&)allscale_fun_768(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long{var_2, var_4}, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long{var_4, var_3});
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_make_fragments_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__returns_fragments_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const& var_0, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const& var_1) {
    return (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_&&)INS_INIT(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_){var_0, var_1};
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_spliter_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt___static__IMP_split_returns_fragments_lt_Vector_lt_long_comma__space_2UL_gt__space__gt_(uint64_t var_0, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const& var_1) {
//    const IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__bool var_2 = (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__bool&&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__bool{};
    uint64_t pos = IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_spliter_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt___static__IMP_getSplitDimension_returns_std_colon__colon_size_t(var_0);
    allscale::utils::Vector<long, 2 > const& var_4 = var_1.begin_returns_constallscaleutilsVectorlong2();
    allscale::utils::Vector<long, 2 > const& var_5 = var_1.end_returns_constallscaleutilsVectorlong2();
    allscale::utils::Vector<long, 2 > var_6 = var_5;
    allscale::utils::Vector<long, 2 > var_7 = var_4;
    var_6.operator[](pos) = *cxx_style_assignment(&var_7.operator[](pos), allscale_fun_766(var_0, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long{var_4.operator[](pos), var_5.operator[](pos)}).left.end_returns_constlong());
    if ((bool)false) {
        std::cerr << "";
    };
    return (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_&&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_make_fragments_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__returns_fragments_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{var_4, var_6}, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{var_7, var_5});
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::split_returns_fragmentsallscaleutilsVectorlong2(uint64_t pos) const {
    return (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_&&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_spliter_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt___static__IMP_split_returns_fragments_lt_Vector_lt_long_comma__space_2UL_gt__space__gt_(pos, *this);
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long::IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long(int64_t const& var_1, int64_t const& var_2) : _begin(var_1), _end(var_2) {
    if ((*this).allscale_fun_731()) {
        (*this)._end = (*this)._begin;
    };
}
/* ------- Function Definitions --------- */
bool IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long::allscale_fun_731() const {
    return (*this).allscale_fun_735() == (uint64_t)0;
}
/* ------- Function Definitions --------- */
uint64_t IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long::allscale_fun_735() const {
    return IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_long_bool{}.operator()((*this)._begin, (*this)._end);
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long::IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long() : _begin(0l), _end(0l) { }
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long::IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long(int64_t&& var_1, int64_t&& var_2, DummyCtorParamType var_3) : _begin(var_1), _end(var_2) { }
/* ------- Function Definitions --------- */
int64_t const& IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long::begin_returns_constlong() const {
    return (*this)._begin;
}
/* ------- Function Definitions --------- */
bool IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_covers_long_returns_bool(int64_t const& var_0, int64_t const& var_1, int64_t const& var_2, int64_t const& var_3) {
    return var_2 >= var_3 || (var_0 <= var_2 && var_3 <= var_1);
}
/* ------- Function Definitions --------- */
bool IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long::covers_returns_bool(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long const& var_1) const {
    return IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_covers_long_returns_bool((*this)._begin, (*this)._end, var_1._begin, var_1._end);
}
/* ------- Function Definitions --------- */
int64_t const& IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long::end_returns_constlong() const {
    return (*this)._end;
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long::grow_returns_allscaleapiuseralgorithmdetailrangelong(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long const& var_1, int32_t var_2) const {
    return (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long&&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long{IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_shrink_long_returns_long((*this)._begin, var_1.begin_returns_constlong(), var_2), IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_grow_long_returns_long((*this)._end, var_1.end_returns_constlong(), var_2)};
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long::shrink_returns_allscaleapiuseralgorithmdetailrangelong(int32_t var_1) const {
    return (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long&&)(*this).grow_returns_allscaleapiuseralgorithmdetailrangelong(*this, 0 - var_1);
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_long IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_make_fragments_long_returns_fragments_lt_long_gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long const& var_0, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long const& var_1) {
    return (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_long&&)INS_INIT(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_long){var_0, var_1};
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_long IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_spliter_long__static__IMP_split_returns_fragments_lt_long_gt_(uint64_t var_0, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long const& var_1) {
    int64_t const& var_2 = var_1.begin_returns_constlong();
    int64_t const& var_3 = var_1.end_returns_constlong();
    int64_t var_4 = var_2 + (var_3 - var_2) / (int64_t)2;
    return (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_long&&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_make_fragments_long_returns_fragments_lt_long_gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long{var_2, var_4}, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long{var_4, var_3});
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_long IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long::split_returns_fragmentslong(uint64_t pos) const {
    return (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_long&&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_spliter_long__static__IMP_split_returns_fragments_lt_long_gt_(pos, *this);
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long::store(allscale::utils::ArchiveWriter& var_1) const {
    var_1.write<int64_t >((*this)._begin);
    var_1.write<int64_t >((*this)._end);
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long::load(allscale::utils::ArchiveReader& var_0) {
    int64_t value = var_0.read<int64_t >();
    int64_t i = var_0.read<int64_t >();
    DummyCtorParamType var_3;
    return {std::move(value), std::move(i), var_3};
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::store(allscale::utils::ArchiveWriter& var_1) const {
    var_1.write<allscale::utils::Vector<long, 2 > >((*this)._begin);
    var_1.write<allscale::utils::Vector<long, 2 > >((*this)._end);
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::load(allscale::utils::ArchiveReader& var_0) {
    allscale::utils::Vector<long, 2 > var_1 = var_0.read<allscale::utils::Vector<long, 2 > >();
    allscale::utils::Vector<long, 2 > var_2 = var_0.read<allscale::utils::Vector<long, 2 > >();
    DummyCtorParamType var_3;
    return {std::move(var_1), std::move(var_2), var_3};
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_forEach_long_2__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36_returns_void(allscale::utils::Vector<long, 2 > const& var_0, allscale::utils::Vector<long, 2 > const& index, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36_const_space_amdados_colon__colon_Configuration_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36 const& var_2) {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_2{}.IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36_pack_begin_pack_end_returns_void(var_0, index, var_2);
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::IMP_forEach__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36_returns_void(IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36_const_space_amdados_colon__colon_Configuration_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36 const& var_1) const {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_forEach_long_2__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36_returns_void((*this)._begin, (*this)._end, var_1);
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_forEach_long_2__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_returns_void(allscale::utils::Vector<long, 2 > const& var_0, allscale::utils::Vector<long, 2 > const& index, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 const& var_2) {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_2{}.IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_pack_begin_pack_end_returns_void(var_0, index, var_2);
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::IMP_forEach__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_returns_void(IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 const& var_1) const {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_forEach_long_2__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_returns_void((*this)._begin, (*this)._end, var_1);
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_forEach_long_2__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_returns_void(allscale::utils::Vector<long, 2 > const& var_0, allscale::utils::Vector<long, 2 > const& index, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 const& var_2) {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_2{}.IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_pack_begin_pack_end_returns_void(var_0, index, var_2);
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::IMP_forEach__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_returns_void(IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 const& var_1) const {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_forEach_long_2__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_returns_void((*this)._begin, (*this)._end, var_1);
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_forEach_long_2__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_returns_void(allscale::utils::Vector<long, 2 > const& var_0, allscale::utils::Vector<long, 2 > const& index, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 const& var_2) {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_scanner_2{}.IMP_run_allscale_colon__colon_utils_colon__colon_Vector_long_2__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_pack_begin_pack_end_returns_void(var_0, index, var_2);
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::IMP_forEach__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_returns_void(IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 const& var_1) const {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_forEach_long_2__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_returns_void((*this)._begin, (*this)._end, var_1);
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_() : IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}) { }
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const& var_1) : _range(var_1), handle(allscale::make_ready_treeture()), depth((uint64_t)0) { }
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
uint64_t IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::getDepth_returns_stdsize_t() const {
    return (*this).depth;
}
/* ------- Function Definitions --------- */
allscale::treeture<void > const& IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::getHandle_returns_constcoretask_reference() const {
    return (*this).handle;
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ allscale_fun_810(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const& var_0, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const& var_1) {
    return (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_&&)INS_INIT(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_){var_0, var_1};
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ allscale_fun_808(uint64_t var_0, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const& var_1) {
//    const IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__bool var_2 = (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__bool&&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_volume_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__bool{};
    uint64_t pos = IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_spliter_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt___static__IMP_getSplitDimension_returns_std_colon__colon_size_t(var_0);
    allscale::utils::Vector<long, 2 > const& var_4 = var_1.begin_returns_constallscaleutilsVectorlong2();
    allscale::utils::Vector<long, 2 > const& var_5 = var_1.end_returns_constallscaleutilsVectorlong2();
    allscale::utils::Vector<long, 2 > var_6 = var_5;
    allscale::utils::Vector<long, 2 > var_7 = var_4;
    var_6.operator[](pos) = *cxx_style_assignment(&var_7.operator[](pos), allscale_fun_766(var_0, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_long{var_4.operator[](pos), var_5.operator[](pos)}).left.end_returns_constlong());
    if ((bool)false) {
        std::cerr << "";
    };
    return (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_&&)allscale_fun_810(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{var_4, var_6}, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{var_7, var_5});
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::getLeft_returns_iteration_referenceallscaleutilsVectorlong2() const {
    return {allscale_fun_808((*this).depth, (*this)._range).left, (*this).handle.get_left_child(), (*this).depth + (uint64_t)1};
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::operator allscale::treeture<void >() const {
    return (*this).handle;
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_&& var_1, allscale::treeture<void >&& var_2, uint64_t&& var_3, DummyCtorParamType var_4) : _range(var_1), handle(var_2), depth(var_3) { }
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const& var_1, allscale::treeture<void > const& var_2, uint64_t pos) : _range(var_1), handle(var_2), depth(pos) { }
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const& IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::getRange_returns_constrangeallscaleutilsVectorlong2() const {
    return (*this)._range;
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::getRight_returns_iteration_referenceallscaleutilsVectorlong2() const {
    return {allscale_fun_808((*this).depth, (*this)._range).right, (*this).handle.get_right_child(), (*this).depth + (uint64_t)1};
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::load(allscale::utils::ArchiveReader& var_0) {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ var_1 = var_0.read<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ >();
    allscale::treeture<void > var_2 = var_0.read<allscale::treeture<void > >();
    uint64_t pos = var_0.read<uint64_t >();
    DummyCtorParamType var_4;
    return {std::move(var_1), std::move(var_2), std::move(pos), var_4};
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::wait_returns_void() const {
    if ((*this).handle.valid()) {
        (*this).handle.wait();
    };
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::store(allscale::utils::ArchiveWriter& var_1) const {
    var_1.write<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ >((*this)._range);
    var_1.write<allscale::treeture<void > >((*this).handle);
    var_1.write<uint64_t >((*this).depth);
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_() : IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}) { }
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const& var_1, allscale::treeture<void >&& var_2) : IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_(var_1, std::move(var_2), (uint64_t)0) { }
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::~IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_() {
    (*(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_*)this).wait_returns_void();
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_&& var_1, DummyCtorParamType var_2) : IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_(std::move(var_1)) { }
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::store(allscale::utils::ArchiveWriter& var_1) const {
    var_1.write<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ >(*(const IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_*)this);
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::load(allscale::utils::ArchiveReader& var_0) {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ var_1 = var_0.read<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_iteration_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ >();
    DummyCtorParamType var_2;
    return {std::move(var_1), var_2};
}
struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_SubDependencies_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies left;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies right;;
};

/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_dependency IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_dependency::load(allscale::utils::ArchiveReader& var_0) {
    return {};
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_dependency::store(allscale::utils::ArchiveWriter& var_1) const { }
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies::IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_dependency&& var_1, DummyCtorParamType var_2) : IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_dependency(std::move(var_1)) { }
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_SubDependencies_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies::split() const {
    return (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_SubDependencies_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies&&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_SubDependencies_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies{};
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies::store(allscale::utils::ArchiveWriter& var_1) const {
    var_1.write<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_dependency >(*(const IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_dependency*)this);
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies::load(allscale::utils::ArchiveReader& var_0) {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_dependency var_1 = var_0.read<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_dependency >();
    DummyCtorParamType var_2;
    return {std::move(var_1), var_2};
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::store(allscale::utils::ArchiveWriter& var_1) const {
    var_1.write<uint64_t >((*this).depth);
    var_1.write<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ >((*this).range);
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_::load(allscale::utils::ArchiveReader& var_0) {
    uint64_t pos = var_0.read<uint64_t >();
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ var_2 = var_0.read<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ >();
    return {std::move(pos), std::move(var_2)};
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_913(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61 > const& var_0) {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ var_1 = (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_&&)((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).range.split_returns_fragmentsallscaleutilsVectorlong2(((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).depth);
    return allscale::runtime::treeture_parallel(allscale::runtime::after(), std::move(allscale::spawn_with_dependencies<__wi_allscale_wi_1_work >(allscale::runtime::after(), (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)INS_INIT(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_){((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).depth + (uint64_t)1, (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)var_1.left}, (IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61 const&)hpx::util::get<1 >(var_0))), std::move(allscale::spawn_with_dependencies<__wi_allscale_wi_1_work >(allscale::runtime::after(), (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)INS_INIT(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_){((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).depth + (uint64_t)1, (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)var_1.right}, (IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61 const&)hpx::util::get<1 >(var_0))));
}
/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_911(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61 > const& var_0) {
    return allscale_fun_913(var_0);
}
/* ------- Function Definitions --------- */
hpx::util::tuple< > allscale_fun_916(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61 > const& var_0) {
    return INS_INIT(hpx::util::tuple< >){};
}
struct __wi_allscale_wi_1_variant_0 {
    static allscale::treeture<void > execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61 > const& var_0);
    static hpx::util::tuple< > get_requirements(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61 > const& var_0);
    static constexpr bool valid = true;
};

hpx::util::tuple< > __wi_allscale_wi_1_variant_0::get_requirements(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61 > const& var_0) {
    return allscale_fun_916(var_0);
}
allscale::treeture<void > __wi_allscale_wi_1_variant_0::execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61 > const& var_0) {
    return allscale_fun_911(var_0);
}
/* ------- Function Definitions --------- */
bool allscale_fun_921(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61 > const& var_0) {
    return ((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).range.IMP_size_returns_size_t() <= (uint64_t)1;
}
/* ------- Function Definitions --------- */
void allscale_fun_923(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61 > const& var_0) {
    ((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).range.forEach__Insieme__lambda_homeherbertcodingcallscale_amdadoscodeappsrcscenario_benchmarkcpp_100_61_returns_void(hpx::util::get<1 >(var_0));
}
/* ------- Function Definitions --------- */
void allscale_fun_924(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61 > const& var_0) {
    ((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).range.forEach__Insieme__lambda_homeherbertcodingcallscale_amdadoscodeappsrcscenario_benchmarkcpp_100_61_returns_void(hpx::util::get<1 >(var_0));
    return (void)0;
}
/* ------- Function Definitions --------- */
void rec(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61 > const& var_0) {
    if (allscale_fun_921(var_0)) {
        return allscale_fun_923(var_0);
    } else {
        return allscale_fun_924(var_0);
    };
}
/* ------- Function Definitions --------- */
allscale::runtime::unused_type allscale_fun_918(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61 > const& var_0) {
    rec(var_0);
    return {};
}
/* ------- Function Definitions --------- */
hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<IMP_amdados_colon__colon_Matrix, 2u > >, allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > > > allscale_fun_925(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61 > const& var_0) {
    return INS_INIT(hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<IMP_amdados_colon__colon_Matrix, 2u > >, allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > > >){allscale::runtime::createDataItemRequirement((allscale::runtime::DataItemReference<allscale::api::user::data::Grid<IMP_amdados_colon__colon_Matrix, 2u > >&)hpx::util::get<1 >(*(const hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61 >*)(&var_0)).capture_observations, allscale::api::core::span(allscale::api::user::data::GridRegion<2>::single((allscale::utils::Vector<long, 2 > const&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._begin.x, hpx::util::get<0 >(var_0).range._begin.y)), allscale::api::user::data::GridRegion<2>::single((allscale::utils::Vector<long, 2 > const&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._end.x - (uint8_t)1, hpx::util::get<0 >(var_0).range._end.y - (uint8_t)1))), allscale::runtime::AccessMode::ReadWrite), allscale::runtime::createDataItemRequirement((allscale::runtime::DataItemReference<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > >&)hpx::util::get<1 >(*(const hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61 >*)(&var_0)).capture_sensors, allscale::api::core::span(allscale::api::user::data::GridRegion<2>::single((allscale::utils::Vector<long, 2 > const&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._begin.x, hpx::util::get<0 >(var_0).range._begin.y)), allscale::api::user::data::GridRegion<2>::single((allscale::utils::Vector<long, 2 > const&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._end.x - (uint8_t)1, hpx::util::get<0 >(var_0).range._end.y - (uint8_t)1))), allscale::runtime::AccessMode::ReadWrite)};
}
struct __wi_allscale_wi_1_variant_1 {
    static allscale::runtime::unused_type execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61 > const& var_0);
    static hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<IMP_amdados_colon__colon_Matrix, 2u > >, allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > > > get_requirements(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61 > const& var_0);
    static constexpr bool valid = true;
};

allscale::runtime::unused_type __wi_allscale_wi_1_variant_1::execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61 > const& var_0) {
    return allscale_fun_918(var_0);
}
hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<IMP_amdados_colon__colon_Matrix, 2u > >, allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > > > __wi_allscale_wi_1_variant_1::get_requirements(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61 > const& var_0) {
    return allscale_fun_925(var_0);
}
/* ------- Function Definitions --------- */
bool allscale_fun_929(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61 > const& var_0) {
    return !allscale_fun_921(var_0);
}
struct __wi_allscale_wi_1_can_split {
    static bool call(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61 > const& var_0);
};

bool __wi_allscale_wi_1_can_split::call(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__std_colon__colon_map_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_struct_space_std_colon__colon_less_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__comma__space_std_colon__colon_allocator_lt_struct_space_std_colon__colon_pair_lt_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__space__gt__space__gt__space__gt__long_auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_benchmark_dot_cpp_100_61 > const& var_0) {
    return allscale_fun_929(var_0);
}
/* ------- Function Definitions --------- */
bool allscale_fun_1152(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36_const_space_amdados_colon__colon_Configuration_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36 > const& var_0) {
    return ((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).range.IMP_size_returns_size_t() <= (uint64_t)1;
}
/* ------- Function Definitions --------- */
bool allscale_fun_1168(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36_const_space_amdados_colon__colon_Configuration_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36 > const& var_0) {
    return !allscale_fun_1152(var_0);
}
struct __wi_allscale_wi_2_can_split {
    static bool call(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36_const_space_amdados_colon__colon_Configuration_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36 > const& var_0);
};

bool __wi_allscale_wi_2_can_split::call(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36_const_space_amdados_colon__colon_Configuration_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36 > const& var_0) {
    return allscale_fun_1168(var_0);
}
/* ------- Function Definitions --------- */
void allscale_fun_1154(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36_const_space_amdados_colon__colon_Configuration_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36 > const& var_0) {
    ((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).range.IMP_forEach__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36_returns_void(hpx::util::get<1 >(var_0));
}
/* ------- Function Definitions --------- */
void allscale_fun_1164(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36_const_space_amdados_colon__colon_Configuration_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36 > const& var_0) {
    ((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).range.IMP_forEach__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36_returns_void(hpx::util::get<1 >(var_0));
    return (void)0;
}
/* ------- Function Definitions --------- */
void allscale_fun_1150(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36_const_space_amdados_colon__colon_Configuration_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36 > const& var_0) {
    if (allscale_fun_1152(var_0)) {
        return allscale_fun_1154(var_0);
    } else {
        return allscale_fun_1164(var_0);
    };
}
/* ------- Function Definitions --------- */
allscale::runtime::unused_type allscale_fun_1148(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36_const_space_amdados_colon__colon_Configuration_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36 > const& var_0) {
    allscale_fun_1150(var_0);
    return {};
}
/* ------- Function Definitions --------- */
hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > >, allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1, 2u > >, allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > > allscale_fun_1165(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36_const_space_amdados_colon__colon_Configuration_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36 > const& var_0) {
    return INS_INIT(hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > >, allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1, 2u > >, allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > >){allscale::runtime::createDataItemRequirement(hpx::util::get<1 >(*(const hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36_const_space_amdados_colon__colon_Configuration_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36 >*)(&var_0)).capture_sensors, allscale::api::core::span(allscale::api::user::data::GridRegion<2>::single((allscale::utils::Vector<long, 2 > const&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._begin.x, hpx::util::get<0 >(var_0).range._begin.y)), allscale::api::user::data::GridRegion<2>::single((allscale::utils::Vector<long, 2 > const&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._end.x - (uint8_t)1, hpx::util::get<0 >(var_0).range._end.y - (uint8_t)1))), allscale::runtime::AccessMode::ReadOnly), allscale::runtime::createDataItemRequirement((allscale::runtime::DataItemReference<allscale::api::user::data::Grid<IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1, 2u > >&)hpx::util::get<1 >(*(const hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36_const_space_amdados_colon__colon_Configuration_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36 >*)(&var_0)).capture_contexts, allscale::api::core::span(allscale::api::user::data::GridRegion<2>::single((allscale::utils::Vector<long, 2 > const&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._begin.x, hpx::util::get<0 >(var_0).range._begin.y)), allscale::api::user::data::GridRegion<2>::single((allscale::utils::Vector<long, 2 > const&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._end.x - (uint8_t)1, hpx::util::get<0 >(var_0).range._end.y - (uint8_t)1))), allscale::runtime::AccessMode::ReadWrite), allscale::runtime::createDataItemRequirement((allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >&)hpx::util::get<1 >(*(const hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36_const_space_amdados_colon__colon_Configuration_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36 >*)(&var_0)).capture_state_field, allscale::api::core::span(allscale::api::user::data::GridRegion<2>::single((allscale::utils::Vector<long, 2 > const&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._begin.x, hpx::util::get<0 >(var_0).range._begin.y)), allscale::api::user::data::GridRegion<2>::single((allscale::utils::Vector<long, 2 > const&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._end.x - (uint8_t)1, hpx::util::get<0 >(var_0).range._end.y - (uint8_t)1))), allscale::runtime::AccessMode::ReadWrite)};
}
struct __wi_allscale_wi_2_variant_1 {
    static allscale::runtime::unused_type execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36_const_space_amdados_colon__colon_Configuration_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36 > const& var_0);
    static hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > >, allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1, 2u > >, allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > > get_requirements(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36_const_space_amdados_colon__colon_Configuration_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36 > const& var_0);
    static constexpr bool valid = true;
};

hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<std::vector<allscale::utils::Vector<long, 2 >, std::allocator<allscale::utils::Vector<long, 2 > > >, 2u > >, allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1, 2u > >, allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > > __wi_allscale_wi_2_variant_1::get_requirements(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36_const_space_amdados_colon__colon_Configuration_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36 > const& var_0) {
    return allscale_fun_1165(var_0);
}
allscale::runtime::unused_type __wi_allscale_wi_2_variant_1::execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36_const_space_amdados_colon__colon_Configuration_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36 > const& var_0) {
    return allscale_fun_1148(var_0);
}
/* ------- Function Definitions --------- */
hpx::util::tuple< > allscale_fun_1146(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36_const_space_amdados_colon__colon_Configuration_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36 > const& var_0) {
    return INS_INIT(hpx::util::tuple< >){};
}
/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_1145(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36_const_space_amdados_colon__colon_Configuration_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36 > const& var_0) {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ var_1 = (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_&&)((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).range.split_returns_fragmentsallscaleutilsVectorlong2(((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).depth);
    return allscale::runtime::treeture_parallel(allscale::runtime::after(), std::move(allscale::spawn_with_dependencies<__wi_allscale_wi_2_work >(allscale::runtime::after(), (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)INS_INIT(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_){((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).depth + (uint64_t)1, (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)var_1.left}, (IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36_const_space_amdados_colon__colon_Configuration_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36 const&)hpx::util::get<1 >(var_0))), std::move(allscale::spawn_with_dependencies<__wi_allscale_wi_2_work >(allscale::runtime::after(), (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)INS_INIT(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_){((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).depth + (uint64_t)1, (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)var_1.right}, (IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36_const_space_amdados_colon__colon_Configuration_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36 const&)hpx::util::get<1 >(var_0))));
}
/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_1143(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36_const_space_amdados_colon__colon_Configuration_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36 > const& var_0) {
    return allscale_fun_1145(var_0);
}
struct __wi_allscale_wi_2_variant_0 {
    static allscale::treeture<void > execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36_const_space_amdados_colon__colon_Configuration_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36 > const& var_0);
    static hpx::util::tuple< > get_requirements(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36_const_space_amdados_colon__colon_Configuration_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36 > const& var_0);
    static constexpr bool valid = true;
};

allscale::treeture<void > __wi_allscale_wi_2_variant_0::execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36_const_space_amdados_colon__colon_Configuration_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36 > const& var_0) {
    return allscale_fun_1143(var_0);
}
hpx::util::tuple< > __wi_allscale_wi_2_variant_0::get_requirements(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36_const_space_amdados_colon__colon_Configuration_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_699_36 > const& var_0) {
    return allscale_fun_1146(var_0);
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference::load(allscale::utils::ArchiveReader& var_0) {
    allscale::treeture<void > var_1 = var_0.read<allscale::treeture<void > >();
    DummyCtorParamType var_2;
    return {std::move(var_1), var_2};
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference::IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference() : handle(((void)0, allscale::make_ready_treeture())) { }
/* ------- Function Definitions --------- */
bool IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference::isValid() const {
    return (*this).handle.valid();
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference::~IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference() {
    if ((*this).handle.valid()) {
        (*this).handle.wait();
    };
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference::IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference(allscale::treeture<void >&& var_1) : handle(std::move(var_1)) { }
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference::IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference(allscale::treeture<void >&& var_1, DummyCtorParamType var_2) : handle(var_1) { }
/* ------- Function Definitions --------- */
allscale::treeture<void > IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference::detach() {
    return std::move((*this).handle);
}
/* ------- Function Definitions --------- */
bool IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference::isDone() const {
    return (*this).handle.isDone();
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference::store(allscale::utils::ArchiveWriter& var_1) const {
    var_1.write<allscale::treeture<void > >((*this).handle);
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference::wait() {
    (*this).handle.wait();
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_stencil_reference_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative::IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_stencil_reference_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative(allscale::treeture<void >&& var_1) : IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference(std::move(var_1)) { }
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_stencil_reference_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative::IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_stencil_reference_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference&& var_1, DummyCtorParamType var_2) : IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference(std::move(var_1)) { }
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_stencil_reference_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative::store(allscale::utils::ArchiveWriter& var_1) const {
    var_1.write<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference >(*(const IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference*)this);
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_stencil_reference_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_stencil_reference_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative::load(allscale::utils::ArchiveReader& var_0) {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference var_1 = var_0.read<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference >();
    DummyCtorParamType var_2;
    return {std::move(var_1), var_2};
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_stencil_reference_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative::IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_stencil_reference_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative() : IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_internal_colon__colon_operation_reference() { }
struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__void_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18;
typedef struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__void_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18 IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__void_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18;

struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__void_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18 {
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > capture_a;
    uint64_t capture_steps;
    IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_749_9_const_space_amdados_colon__colon_Configuration_const_space_unsigned_space_long_const_space_unsigned_space_long_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_749_9 capture_update;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2 capture_observers;;
    void operator()() const;
    void store(allscale::utils::ArchiveWriter& p2) const;
    ;
    ;
    static IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__void_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18 load(allscale::utils::ArchiveReader& var_0);
};

struct IMP_empty_instance1_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3;
typedef struct IMP_empty_instance1_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3 IMP_empty_instance1_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3;

struct IMP_empty_instance1_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3 {
    ;
    ;
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP_empty_instance1_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3 load(allscale::utils::ArchiveReader& var_0);
};

struct __wi_allscale_wi_6_variant_1;
typedef struct __wi_allscale_wi_6_variant_1 __wi_allscale_wi_6_variant_1;

struct __wi_allscale_wi_6_can_split;
typedef struct __wi_allscale_wi_6_can_split __wi_allscale_wi_6_can_split;

struct __wi_allscale_wi_6_name {
    static const char* name() { return "__wi_allscale_wi_6"; }
};

struct __wi_allscale_wi_6_variant_0;
typedef struct __wi_allscale_wi_6_variant_0 __wi_allscale_wi_6_variant_0;

using __wi_allscale_wi_6_work = allscale::work_item_description<void, __wi_allscale_wi_6_name, allscale::do_serialization, __wi_allscale_wi_6_variant_0, __wi_allscale_wi_6_variant_1, __wi_allscale_wi_6_can_split >;

/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_1715(allscale::runtime::dependencies const& var_0, hpx::util::tuple<IMP_empty_instance1_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__void_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18 > const& var_1) {
    return allscale::spawn_first_with_dependencies<__wi_allscale_wi_6_work >(var_0, hpx::util::get<0 >(var_1), hpx::util::get<1 >(var_1));
}
/* ------- Function Definitions --------- */
allscale::treeture<void > IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_async_allscale_colon__colon_api_colon__colon_core_colon__colon_no_dependencies__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_returns_core_colon__colon_treeture_lt_std_colon__colon_result_of_t_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_code_slash__dot__dot__slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_colon_351_colon_18_rparen__space__lparen_void_rparen__gt__space__gt_(allscale::runtime::dependencies&& var_0, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__void_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18 const& var_1) {
    return allscale::runtime::make_prec_operation<IMP_empty_instance1_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, void >((hpx::util::tuple<IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__void_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18 > const&)INS_INIT(hpx::util::tuple<IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__void_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18 >){var_1}, &allscale_fun_1715)(std::move(var_0), (IMP_empty_instance1_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3 const&)IMP_empty_instance1_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3{});
}
/* ------- Function Definitions --------- */
allscale::treeture<void > IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_async__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_returns_core_colon__colon_treeture_lt_std_colon__colon_result_of_t_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_code_slash__dot__dot__slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_colon_351_colon_18_rparen__space__lparen_void_rparen__gt__space__gt_(IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__void_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18 const& var_0) {
    return IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_async_allscale_colon__colon_api_colon__colon_core_colon__colon_no_dependencies__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_returns_core_colon__colon_treeture_lt_std_colon__colon_result_of_t_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_code_slash__dot__dot__slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_colon_351_colon_18_rparen__space__lparen_void_rparen__gt__space__gt_(allscale::runtime::after(), var_0);
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_stencil_reference_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative::process_allscaleapiuserdataGridstructallscaleapiuserdataAdaptiveGridCelldoublestructallscaleapiuserdataCellConfig2structallscaleapiuserdatalayersstructallscaleapiuserdatalayer11structallscaleapiuserdatalayer88structallscaleapiuserdatalayer222__Insieme__lambda_homeherbertcodingcallscale_amdadoscodeappsrcscenario_simulationcpp_749_9_pack_begin_allscaleapiuseralgorithmObserverlambdaathomeherbertcodingcallscale_amdadoscodeappsrcscenario_simulationcpp76613lambdaathomeherbertcodingcallscale_amdadoscodeappsrcscenario_simulationcpp77413lambdaathomeherbertcodingcallscale_amdadoscodeappsrcscenario_simulationcpp77613_pack_end_returns_stencil_referencestructallscaleapiuseralgorithmimplementationcoarse_grained_iterative(allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >& var_1, uint64_t pos, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_749_9_const_space_amdados_colon__colon_Configuration_const_space_unsigned_space_long_const_space_unsigned_space_long_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_749_9 const& var_3, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2 const& var_4) {
    return (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_stencil_reference_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative&&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_stencil_reference_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative{IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_async__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_returns_core_colon__colon_treeture_lt_std_colon__colon_result_of_t_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_code_slash__dot__dot__slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_colon_351_colon_18_rparen__space__lparen_void_rparen__gt__space__gt_(INS_INIT(IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__void_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18){(allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > const&)var_1, pos, var_3, var_4})};
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__void_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18 IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__void_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18::load(allscale::utils::ArchiveReader& var_0) {
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > var_1 = var_0.read<allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > >();
    uint64_t pos = var_0.read<uint64_t >();
    IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_749_9_const_space_amdados_colon__colon_Configuration_const_space_unsigned_space_long_const_space_unsigned_space_long_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_749_9 var_3 = var_0.read<IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_749_9_const_space_amdados_colon__colon_Configuration_const_space_unsigned_space_long_const_space_unsigned_space_long_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_749_9 >();
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2 var_4 = var_0.read<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2 >();
    return {std::move(var_1), std::move(pos), std::move(var_3), std::move(var_4)};
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__void_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18::store(allscale::utils::ArchiveWriter& var_1) const {
    var_1.write<allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > >((*this).capture_a);
    var_1.write<uint64_t >((*this).capture_steps);
    var_1.write<IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_749_9_const_space_amdados_colon__colon_Configuration_const_space_unsigned_space_long_const_space_unsigned_space_long_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_749_9 >((*this).capture_update);
    var_1.write<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2 >((*this).capture_observers);
}
struct __wi_allscale_wi_4_name {
    static const char* name() { return "__wi_allscale_wi_4"; }
};

struct __wi_allscale_wi_4_variant_1;
typedef struct __wi_allscale_wi_4_variant_1 __wi_allscale_wi_4_variant_1;

struct __wi_allscale_wi_4_can_split;
typedef struct __wi_allscale_wi_4_can_split __wi_allscale_wi_4_can_split;

struct __wi_allscale_wi_4_variant_0;
typedef struct __wi_allscale_wi_4_variant_0 __wi_allscale_wi_4_variant_0;

using __wi_allscale_wi_4_work = allscale::work_item_description<void, __wi_allscale_wi_4_name, allscale::do_serialization, __wi_allscale_wi_4_variant_0, __wi_allscale_wi_4_variant_1, __wi_allscale_wi_4_can_split >;

/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_1602(allscale::runtime::dependencies const& var_0, hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 > const& var_1) {
    return allscale::spawn_first_with_dependencies<__wi_allscale_wi_4_work >(var_0, hpx::util::get<0 >(var_1), hpx::util::get<1 >(var_1));
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_pfor_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt___Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_returns_detail_colon__colon_loop_reference_lt_Vector_lt_long_comma__space_2_gt__space__gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const& var_0, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 const& var_1, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies const& var_2) {
    return {var_0, allscale::runtime::make_prec_operation<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, void >((hpx::util::tuple<IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 > const&)INS_INIT(hpx::util::tuple<IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 >){var_1}, &allscale_fun_1602)((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)INS_INIT(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_){(uint64_t)0, var_0})};
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_pfor_long_2__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_returns_detail_colon__colon_loop_reference_lt_utils_colon__colon_Vector_lt_long_comma__space_2UL_gt__space__gt_(allscale::utils::Vector<long, 2 > const& var_0, allscale::utils::Vector<long, 2 > const& index, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 const& var_2) {
    return (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_&&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_pfor_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt___Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_returns_detail_colon__colon_loop_reference_lt_Vector_lt_long_comma__space_2_gt__space__gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{var_0, index}, var_2, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies{});
}
struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_388_8_unsigned_space_long_space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_388_8;
typedef struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_388_8_unsigned_space_long_space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_388_8 IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_388_8_unsigned_space_long_space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_388_8;

/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_detail_colon__colon_staticForEach__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_388_8_returns_void(IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_388_8_unsigned_space_long_space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_388_8 const& var_0) { }
struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_388_8_unsigned_space_long_space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_388_8 {
    uint64_t& capture_t;
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > capture_b;
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > capture_a;;
    void operator()(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2 const& p2) const;
};

/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_detail_colon__colon_staticForEach__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_388_8_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__pack_begin_pack_end_returns_void(IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_388_8_unsigned_space_long_space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_388_8 const& var_0, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2 const& var_1) {
    var_0.operator()(var_1);
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_detail_colon__colon_staticForEach__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_388_8_returns_void(var_0);
}
struct __wi_allscale_wi_3_can_split;
typedef struct __wi_allscale_wi_3_can_split __wi_allscale_wi_3_can_split;

struct __wi_allscale_wi_3_variant_0;
typedef struct __wi_allscale_wi_3_variant_0 __wi_allscale_wi_3_variant_0;

struct __wi_allscale_wi_3_variant_1;
typedef struct __wi_allscale_wi_3_variant_1 __wi_allscale_wi_3_variant_1;

struct __wi_allscale_wi_3_name {
    static const char* name() { return "__wi_allscale_wi_3"; }
};

using __wi_allscale_wi_3_work = allscale::work_item_description<void, __wi_allscale_wi_3_name, allscale::do_serialization, __wi_allscale_wi_3_variant_0, __wi_allscale_wi_3_variant_1, __wi_allscale_wi_3_can_split >;

/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_1553(allscale::runtime::dependencies const& var_0, hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 > const& var_1) {
    return allscale::spawn_first_with_dependencies<__wi_allscale_wi_3_work >(var_0, hpx::util::get<0 >(var_1), hpx::util::get<1 >(var_1));
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_pfor_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt___Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_returns_detail_colon__colon_loop_reference_lt_Vector_lt_long_comma__space_2_gt__space__gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const& var_0, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 const& var_1, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies const& var_2) {
    return {var_0, allscale::runtime::make_prec_operation<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, void >((hpx::util::tuple<IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 > const&)INS_INIT(hpx::util::tuple<IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 >){var_1}, &allscale_fun_1553)((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)INS_INIT(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_){(uint64_t)0, var_0})};
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_pfor_long_2__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_returns_detail_colon__colon_loop_reference_lt_utils_colon__colon_Vector_lt_long_comma__space_2UL_gt__space__gt_(allscale::utils::Vector<long, 2 > const& var_0, allscale::utils::Vector<long, 2 > const& index, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 const& var_2) {
    return (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_&&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_pfor_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt___Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_returns_detail_colon__colon_loop_reference_lt_Vector_lt_long_comma__space_2_gt__space__gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{var_0, index}, var_2, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies{});
}
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__void_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18::operator()() const {
    allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u >&& var_1 = allscale::runtime::DataItemManager::get((allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >&)(*this).capture_a);
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > var_2 = allscale::runtime::DataItemManager::create<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >(var_1.size());
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >* var_3 = (allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >*)(&(allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >&)(*this).capture_a);
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >* var_4 = &var_2;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_pfor_long_2__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_returns_detail_colon__colon_loop_reference_lt_utils_colon__colon_Vector_lt_long_comma__space_2UL_gt__space__gt_(allscale::utils::Vector<long, 2 >{(int64_t)0}, var_1.size(), INS_INIT(IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7){(allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > const&)(*this).capture_a, (allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > const&)var_2});
    {
        uint64_t var_5 = (uint64_t)0;
        while (var_5 < (*this).capture_steps) {
            {
                allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >& var_6 = *var_3;
                allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >& var_7 = *var_4;
                IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_pfor_long_2__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_returns_detail_colon__colon_loop_reference_lt_utils_colon__colon_Vector_lt_long_comma__space_2UL_gt__space__gt_(allscale::utils::Vector<long, 2 >{(int64_t)0}, allscale::runtime::DataItemManager::get(var_6).size(), INS_INIT(IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8){var_5, (IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_749_9_const_space_amdados_colon__colon_Configuration_const_space_unsigned_space_long_const_space_unsigned_space_long_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_std_colon__colon_vector_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__comma__space_std_colon__colon_allocator_lt_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_amdados_colon__colon_Matrix_comma__space_2_gt__space__ampersand__const_space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__long_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_749_9 const&)(*this).capture_update, (allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > const&)var_7, (allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > const&)var_6});
                IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_detail_colon__colon_staticForEach__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_388_8_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__pack_begin_pack_end_returns_void(INS_INIT(IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_388_8_unsigned_space_long_space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_388_8){var_5, (allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > const&)var_7, (allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > const&)var_6}, (*this).capture_observers);
                std::swap(var_3, var_4);
            };
            var_5++;
        };
    };
    if (var_3 != (allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >*)(&(allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >&)(*this).capture_a)) {
        std::swap((allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >&)(*this).capture_a, var_2);
    };
}
/* ------- Function Definitions --------- */
bool allscale_fun_1613(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 > const& var_0) {
    return ((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).range.IMP_size_returns_size_t() <= (uint64_t)1;
}
/* ------- Function Definitions --------- */
void allscale_fun_1621(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 > const& var_0) {
    ((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).range.IMP_forEach__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_returns_void(hpx::util::get<1 >(var_0));
    return (void)0;
}
/* ------- Function Definitions --------- */
void allscale_fun_1615(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 > const& var_0) {
    ((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).range.IMP_forEach__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_returns_void(hpx::util::get<1 >(var_0));
}
/* ------- Function Definitions --------- */
void allscale_fun_1611(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 > const& var_0) {
    if (allscale_fun_1613(var_0)) {
        return allscale_fun_1615(var_0);
    } else {
        return allscale_fun_1621(var_0);
    };
}
/* ------- Function Definitions --------- */
allscale::runtime::unused_type allscale_fun_1609(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 > const& var_0) {
    allscale_fun_1611(var_0);
    return {};
}
/* ------- Function Definitions --------- */
hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >, allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<IMP_amdados_colon__colon_Matrix, 2u > >, allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >, allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1, 2u > > > allscale_fun_1622(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 > const& var_0) {
    return INS_INIT(hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >, allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<IMP_amdados_colon__colon_Matrix, 2u > >, allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >, allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1, 2u > > >){allscale::runtime::createDataItemRequirement(hpx::util::get<1 >(*(const hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 >*)(&var_0)).capture_a, allscale::api::core::merge(allscale::api::core::span(allscale::api::user::data::GridRegion<2>::single((allscale::utils::Vector<long, 2 > const&)allscale::utils::Vector<long, 2 >{IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._begin.x, hpx::util::get<0 >(var_0).range._begin.y).x - (int64_t)1, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._begin.x, hpx::util::get<0 >(var_0).range._begin.y).y}), allscale::api::user::data::GridRegion<2>::single((allscale::utils::Vector<long, 2 > const&)allscale::utils::Vector<long, 2 >{IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._end.x - (uint8_t)1, hpx::util::get<0 >(var_0).range._end.y - (uint8_t)1).x - (int64_t)1, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._end.x - (uint8_t)1, hpx::util::get<0 >(var_0).range._end.y - (uint8_t)1).y})), allscale::api::core::span(allscale::api::user::data::GridRegion<2>::single((allscale::utils::Vector<long, 2 > const&)allscale::utils::Vector<long, 2 >{IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._begin.x, hpx::util::get<0 >(var_0).range._begin.y).x + (int64_t)1, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._begin.x, hpx::util::get<0 >(var_0).range._begin.y).y}), allscale::api::user::data::GridRegion<2>::single((allscale::utils::Vector<long, 2 > const&)allscale::utils::Vector<long, 2 >{IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._end.x - (uint8_t)1, hpx::util::get<0 >(var_0).range._end.y - (uint8_t)1).x + (int64_t)1, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._end.x - (uint8_t)1, hpx::util::get<0 >(var_0).range._end.y - (uint8_t)1).y})), allscale::api::core::span(allscale::api::user::data::GridRegion<2>::single((allscale::utils::Vector<long, 2 > const&)allscale::utils::Vector<long, 2 >{IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._begin.x, hpx::util::get<0 >(var_0).range._begin.y).x, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._begin.x, hpx::util::get<0 >(var_0).range._begin.y).y + (int64_t)1}), allscale::api::user::data::GridRegion<2>::single((allscale::utils::Vector<long, 2 > const&)allscale::utils::Vector<long, 2 >{IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._end.x - (uint8_t)1, hpx::util::get<0 >(var_0).range._end.y - (uint8_t)1).x, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._end.x - (uint8_t)1, hpx::util::get<0 >(var_0).range._end.y - (uint8_t)1).y + (int64_t)1})), allscale::api::core::span(allscale::api::user::data::GridRegion<2>::single((allscale::utils::Vector<long, 2 > const&)allscale::utils::Vector<long, 2 >{IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._begin.x, hpx::util::get<0 >(var_0).range._begin.y).x, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._begin.x, hpx::util::get<0 >(var_0).range._begin.y).y - (int64_t)1}), allscale::api::user::data::GridRegion<2>::single((allscale::utils::Vector<long, 2 > const&)allscale::utils::Vector<long, 2 >{IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._end.x - (uint8_t)1, hpx::util::get<0 >(var_0).range._end.y - (uint8_t)1).x, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._end.x - (uint8_t)1, hpx::util::get<0 >(var_0).range._end.y - (uint8_t)1).y - (int64_t)1})), allscale::api::core::span(allscale::api::user::data::GridRegion<2>::single((allscale::utils::Vector<long, 2 > const&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._begin.x, hpx::util::get<0 >(var_0).range._begin.y)), allscale::api::user::data::GridRegion<2>::single((allscale::utils::Vector<long, 2 > const&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._end.x - (uint8_t)1, hpx::util::get<0 >(var_0).range._end.y - (uint8_t)1)))), allscale::runtime::AccessMode::ReadOnly), allscale::runtime::createDataItemRequirement(hpx::util::get<1 >(*(const hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 >*)(&var_0)).capture_update.capture_observations, allscale::api::core::span(allscale::api::user::data::GridRegion<2>::single((allscale::utils::Vector<long, 2 > const&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._begin.x, hpx::util::get<0 >(var_0).range._begin.y)), allscale::api::user::data::GridRegion<2>::single((allscale::utils::Vector<long, 2 > const&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._end.x - (uint8_t)1, hpx::util::get<0 >(var_0).range._end.y - (uint8_t)1))), allscale::runtime::AccessMode::ReadOnly), allscale::runtime::createDataItemRequirement((allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >&)hpx::util::get<1 >(*(const hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 >*)(&var_0)).capture_b, allscale::api::core::span(allscale::api::user::data::GridRegion<2>::single((allscale::utils::Vector<long, 2 > const&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._begin.x, hpx::util::get<0 >(var_0).range._begin.y)), allscale::api::user::data::GridRegion<2>::single((allscale::utils::Vector<long, 2 > const&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._end.x - (uint8_t)1, hpx::util::get<0 >(var_0).range._end.y - (uint8_t)1))), allscale::runtime::AccessMode::ReadWrite), allscale::runtime::createDataItemRequirement((allscale::runtime::DataItemReference<allscale::api::user::data::Grid<IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1, 2u > >&)hpx::util::get<1 >(*(const hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 >*)(&var_0)).capture_update.capture_contexts, allscale::api::core::span(allscale::api::user::data::GridRegion<2>::single((allscale::utils::Vector<long, 2 > const&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._begin.x, hpx::util::get<0 >(var_0).range._begin.y)), allscale::api::user::data::GridRegion<2>::single((allscale::utils::Vector<long, 2 > const&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._end.x - (uint8_t)1, hpx::util::get<0 >(var_0).range._end.y - (uint8_t)1))), allscale::runtime::AccessMode::ReadWrite)};
}
struct __wi_allscale_wi_4_variant_1 {
    static allscale::runtime::unused_type execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 > const& var_0);
    static hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >, allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<IMP_amdados_colon__colon_Matrix, 2u > >, allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >, allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1, 2u > > > get_requirements(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 > const& var_0);
    static constexpr bool valid = true;
};

hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >, allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<IMP_amdados_colon__colon_Matrix, 2u > >, allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >, allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<IMP_amdados_colon__colon__lparen_anonymous_space_namespace_rparen__colon__colon_SubdomainContext_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_86_1, 2u > > > __wi_allscale_wi_4_variant_1::get_requirements(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 > const& var_0) {
    return allscale_fun_1622(var_0);
}
allscale::runtime::unused_type __wi_allscale_wi_4_variant_1::execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 > const& var_0) {
    return allscale_fun_1609(var_0);
}
/* ------- Function Definitions --------- */
bool allscale_fun_1625(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 > const& var_0) {
    return !allscale_fun_1613(var_0);
}
struct __wi_allscale_wi_4_can_split {
    static bool call(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 > const& var_0);
};

bool __wi_allscale_wi_4_can_split::call(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 > const& var_0) {
    return allscale_fun_1625(var_0);
}
/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_1606(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 > const& var_0) {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ var_1 = (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_&&)((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).range.split_returns_fragmentsallscaleutilsVectorlong2(((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).depth);
    return allscale::runtime::treeture_parallel(allscale::runtime::after(), std::move(allscale::spawn_with_dependencies<__wi_allscale_wi_4_work >(allscale::runtime::after(), (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)INS_INIT(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_){((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).depth + (uint64_t)1, (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)var_1.left}, (IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 const&)hpx::util::get<1 >(var_0))), std::move(allscale::spawn_with_dependencies<__wi_allscale_wi_4_work >(allscale::runtime::after(), (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)INS_INIT(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_){((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).depth + (uint64_t)1, (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)var_1.right}, (IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 const&)hpx::util::get<1 >(var_0))));
}
/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_1604(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 > const& var_0) {
    return allscale_fun_1606(var_0);
}
/* ------- Function Definitions --------- */
hpx::util::tuple< > allscale_fun_1607(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 > const& var_0) {
    return INS_INIT(hpx::util::tuple< >){};
}
struct __wi_allscale_wi_4_variant_0 {
    static allscale::treeture<void > execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 > const& var_0);
    static hpx::util::tuple< > get_requirements(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 > const& var_0);
    static constexpr bool valid = true;
};

hpx::util::tuple< > __wi_allscale_wi_4_variant_0::get_requirements(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 > const& var_0) {
    return allscale_fun_1607(var_0);
}
allscale::treeture<void > __wi_allscale_wi_4_variant_0::execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8_unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_381_8 > const& var_0) {
    return allscale_fun_1604(var_0);
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
struct __wi_allscale_wi_5_can_split;
typedef struct __wi_allscale_wi_5_can_split __wi_allscale_wi_5_can_split;

struct __wi_allscale_wi_5_name {
    static const char* name() { return "__wi_allscale_wi_5"; }
};

struct __wi_allscale_wi_5_variant_0;
typedef struct __wi_allscale_wi_5_variant_0 __wi_allscale_wi_5_variant_0;

struct __wi_allscale_wi_5_variant_1;
typedef struct __wi_allscale_wi_5_variant_1 __wi_allscale_wi_5_variant_1;

using __wi_allscale_wi_5_work = allscale::work_item_description<void, __wi_allscale_wi_5_name, allscale::do_serialization, __wi_allscale_wi_5_variant_0, __wi_allscale_wi_5_variant_1, __wi_allscale_wi_5_can_split >;

/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_1660(allscale::runtime::dependencies const& var_0, hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 > const& var_1) {
    return allscale::spawn_first_with_dependencies<__wi_allscale_wi_5_work >(var_0, hpx::util::get<0 >(var_1), hpx::util::get<1 >(var_1));
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_pfor_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt___Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_returns_detail_colon__colon_loop_reference_lt_Vector_lt_long_comma__space_2_gt__space__gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const& var_0, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 const& var_1, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies const& var_2) {
    return {var_0, allscale::runtime::make_prec_operation<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, void >((hpx::util::tuple<IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 > const&)INS_INIT(hpx::util::tuple<IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 >){var_1}, &allscale_fun_1660)((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)INS_INIT(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_){(uint64_t)0, var_0})};
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_pfor_long_2__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_returns_detail_colon__colon_loop_reference_lt_utils_colon__colon_Vector_lt_long_comma__space_2UL_gt__space__gt_(allscale::utils::Vector<long, 2 > const& var_0, allscale::utils::Vector<long, 2 > const& index, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 const& var_2) {
    return (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_loop_reference_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_&&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_pfor_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt___Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_returns_detail_colon__colon_loop_reference_lt_Vector_lt_long_comma__space_2_gt__space__gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{var_0, index}, var_2, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_no_dependencies{});
}
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_388_8_unsigned_space_long_space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__auto_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_388_8::operator()(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_766_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_774_13__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_776_13_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_123_2 const& var_1) const {
    allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u >&& var_2 = allscale::runtime::DataItemManager::get((allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >&)(*this).capture_a);
    if (!var_1.isInterestedInTime.operator()((int64_t)(*this).capture_t)) {
        return;
    };
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_pfor_long_2__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_returns_detail_colon__colon_loop_reference_lt_utils_colon__colon_Vector_lt_long_comma__space_2UL_gt__space__gt_(allscale::utils::Vector<long, 2 >{(int64_t)0}, var_2.size(), INS_INIT(IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10){(*this).capture_t, var_1, (allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > const&)(*this).capture_b});
}
/* ------- Function Definitions --------- */
bool allscale_fun_1671(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 > const& var_0) {
    return ((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).range.IMP_size_returns_size_t() <= (uint64_t)1;
}
/* ------- Function Definitions --------- */
bool allscale_fun_1680(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 > const& var_0) {
    return !allscale_fun_1671(var_0);
}
struct __wi_allscale_wi_5_can_split {
    static bool call(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 > const& var_0);
};

bool __wi_allscale_wi_5_can_split::call(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 > const& var_0) {
    return allscale_fun_1680(var_0);
}
/* ------- Function Definitions --------- */
hpx::util::tuple< > allscale_fun_1665(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 > const& var_0) {
    return INS_INIT(hpx::util::tuple< >){};
}
/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_1664(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 > const& var_0) {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ var_1 = (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_&&)((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).range.split_returns_fragmentsallscaleutilsVectorlong2(((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).depth);
    return allscale::runtime::treeture_parallel(allscale::runtime::after(), std::move(allscale::spawn_with_dependencies<__wi_allscale_wi_5_work >(allscale::runtime::after(), (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)INS_INIT(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_){((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).depth + (uint64_t)1, (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)var_1.left}, (IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 const&)hpx::util::get<1 >(var_0))), std::move(allscale::spawn_with_dependencies<__wi_allscale_wi_5_work >(allscale::runtime::after(), (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)INS_INIT(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_){((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).depth + (uint64_t)1, (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)var_1.right}, (IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 const&)hpx::util::get<1 >(var_0))));
}
/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_1662(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 > const& var_0) {
    return allscale_fun_1664(var_0);
}
struct __wi_allscale_wi_5_variant_0 {
    static allscale::treeture<void > execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 > const& var_0);
    static hpx::util::tuple< > get_requirements(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 > const& var_0);
    static constexpr bool valid = true;
};

allscale::treeture<void > __wi_allscale_wi_5_variant_0::execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 > const& var_0) {
    return allscale_fun_1662(var_0);
}
hpx::util::tuple< > __wi_allscale_wi_5_variant_0::get_requirements(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 > const& var_0) {
    return allscale_fun_1665(var_0);
}
/* ------- Function Definitions --------- */
void allscale_fun_1679(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 > const& var_0) {
    ((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).range.IMP_forEach__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_returns_void(hpx::util::get<1 >(var_0));
    return (void)0;
}
/* ------- Function Definitions --------- */
void allscale_fun_1673(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 > const& var_0) {
    ((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).range.IMP_forEach__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_returns_void(hpx::util::get<1 >(var_0));
}
/* ------- Function Definitions --------- */
void allscale_fun_1669(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 > const& var_0) {
    if (allscale_fun_1671(var_0)) {
        return allscale_fun_1673(var_0);
    } else {
        return allscale_fun_1679(var_0);
    };
}
/* ------- Function Definitions --------- */
allscale::runtime::unused_type allscale_fun_1667(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 > const& var_0) {
    allscale_fun_1669(var_0);
    return {};
}
struct __wi_allscale_wi_5_variant_1 {
    static allscale::runtime::unused_type execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 > const& var_0);
    static hpx::util::tuple< > get_requirements(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 > const& var_0);
    static constexpr bool valid = true;
};

allscale::runtime::unused_type __wi_allscale_wi_5_variant_1::execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 > const& var_0) {
    return allscale_fun_1667(var_0);
}
hpx::util::tuple< > __wi_allscale_wi_5_variant_1::get_requirements(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10_unsigned_space_long_const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_393_10 > const& var_0) {
    return allscale_fun_1665(var_0);
}
/* ------- Function Definitions --------- */
bool allscale_fun_1564(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 > const& var_0) {
    return ((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).range.IMP_size_returns_size_t() <= (uint64_t)1;
}
/* ------- Function Definitions --------- */
bool allscale_fun_1576(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 > const& var_0) {
    return !allscale_fun_1564(var_0);
}
struct __wi_allscale_wi_3_can_split {
    static bool call(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 > const& var_0);
};

bool __wi_allscale_wi_3_can_split::call(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 > const& var_0) {
    return allscale_fun_1576(var_0);
}
/* ------- Function Definitions --------- */
hpx::util::tuple< > allscale_fun_1558(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 > const& var_0) {
    return INS_INIT(hpx::util::tuple< >){};
}
/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_1557(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 > const& var_0) {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ var_1 = (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_fragments_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_&&)((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).range.split_returns_fragmentsallscaleutilsVectorlong2(((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).depth);
    return allscale::runtime::treeture_parallel(allscale::runtime::after(), std::move(allscale::spawn_with_dependencies<__wi_allscale_wi_3_work >(allscale::runtime::after(), (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)INS_INIT(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_){((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).depth + (uint64_t)1, (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)var_1.left}, (IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 const&)hpx::util::get<1 >(var_0))), std::move(allscale::spawn_with_dependencies<__wi_allscale_wi_3_work >(allscale::runtime::after(), (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)INS_INIT(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_){((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).depth + (uint64_t)1, (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_range_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)var_1.right}, (IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 const&)hpx::util::get<1 >(var_0))));
}
/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_1555(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 > const& var_0) {
    return allscale_fun_1557(var_0);
}
struct __wi_allscale_wi_3_variant_0 {
    static allscale::treeture<void > execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 > const& var_0);
    static hpx::util::tuple< > get_requirements(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 > const& var_0);
    static constexpr bool valid = true;
};

allscale::treeture<void > __wi_allscale_wi_3_variant_0::execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 > const& var_0) {
    return allscale_fun_1555(var_0);
}
hpx::util::tuple< > __wi_allscale_wi_3_variant_0::get_requirements(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 > const& var_0) {
    return allscale_fun_1558(var_0);
}
/* ------- Function Definitions --------- */
hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >, allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > > allscale_fun_1573(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 > const& var_0) {
    return INS_INIT(hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >, allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > >){allscale::runtime::createDataItemRequirement((allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >&)hpx::util::get<1 >(*(const hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 >*)(&var_0)).capture_b, allscale::api::core::span(allscale::api::user::data::GridRegion<2>::single((allscale::utils::Vector<long, 2 > const&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._begin.x, hpx::util::get<0 >(var_0).range._begin.y)), allscale::api::user::data::GridRegion<2>::single((allscale::utils::Vector<long, 2 > const&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._end.x - (uint8_t)1, hpx::util::get<0 >(var_0).range._end.y - (uint8_t)1))), allscale::runtime::AccessMode::ReadWrite), allscale::runtime::createDataItemRequirement((allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >&)hpx::util::get<1 >(*(const hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 >*)(&var_0)).capture_a, allscale::api::core::span(allscale::api::user::data::GridRegion<2>::single((allscale::utils::Vector<long, 2 > const&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._begin.x, hpx::util::get<0 >(var_0).range._begin.y)), allscale::api::user::data::GridRegion<2>::single((allscale::utils::Vector<long, 2 > const&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_point_factory_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_{}.operator()(hpx::util::get<0 >(var_0).range._end.x - (uint8_t)1, hpx::util::get<0 >(var_0).range._end.y - (uint8_t)1))), allscale::runtime::AccessMode::ReadWrite)};
}
/* ------- Function Definitions --------- */
void allscale_fun_1572(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 > const& var_0) {
    ((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).range.IMP_forEach__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_returns_void(hpx::util::get<1 >(var_0));
    return (void)0;
}
/* ------- Function Definitions --------- */
void allscale_fun_1566(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 > const& var_0) {
    ((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_ const&)hpx::util::get<0 >(var_0)).range.IMP_forEach__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_returns_void(hpx::util::get<1 >(var_0));
}
/* ------- Function Definitions --------- */
void allscale_fun_1562(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 > const& var_0) {
    if (allscale_fun_1564(var_0)) {
        return allscale_fun_1566(var_0);
    } else {
        return allscale_fun_1572(var_0);
    };
}
/* ------- Function Definitions --------- */
allscale::runtime::unused_type allscale_fun_1560(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 > const& var_0) {
    allscale_fun_1562(var_0);
    return {};
}
struct __wi_allscale_wi_3_variant_1 {
    static allscale::runtime::unused_type execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 > const& var_0);
    static hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >, allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > > get_requirements(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 > const& var_0);
    static constexpr bool valid = true;
};

hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >, allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > > __wi_allscale_wi_3_variant_1::get_requirements(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 > const& var_0) {
    return allscale_fun_1573(var_0);
}
allscale::runtime::unused_type __wi_allscale_wi_3_variant_1::execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_detail_colon__colon_RecArgsNoDependencies_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt_, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_366_7 > const& var_0) {
    return allscale_fun_1560(var_0);
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP_empty_instance1_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3::store(allscale::utils::ArchiveWriter& var_1) const { }
/* ------- Function Definitions --------- */
IMP_empty_instance1_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3 IMP_empty_instance1_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3::load(allscale::utils::ArchiveReader& var_0) {
    return {};
}
/* ------- Function Definitions --------- */
void allscale_fun_1728(hpx::util::tuple<IMP_empty_instance1_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__void_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18 > const& var_0) {
    hpx::util::get<1 >(var_0).operator()();
    return;
}
/* ------- Function Definitions --------- */
void allscale_fun_1729(hpx::util::tuple<IMP_empty_instance1_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__void_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18 > const& var_0) {
    if ((bool)false) {
        std::cerr << "" << "Should not be reached!";
    };
    hpx::util::get<1 >(var_0).operator()();
    return (void)0;
}
/* ------- Function Definitions --------- */
bool allscale_fun_1726(hpx::util::tuple<IMP_empty_instance1_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__void_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18 > const& var_0) {
    return (bool)true;
}
/* ------- Function Definitions --------- */
void allscale_fun_1724(hpx::util::tuple<IMP_empty_instance1_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__void_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18 > const& var_0) {
    if (allscale_fun_1726(var_0)) {
        return allscale_fun_1728(var_0);
    } else {
        return allscale_fun_1729(var_0);
    };
}
/* ------- Function Definitions --------- */
allscale::runtime::unused_type allscale_fun_1722(hpx::util::tuple<IMP_empty_instance1_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__void_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18 > const& var_0) {
    allscale_fun_1724(var_0);
    return {};
}
/* ------- Function Definitions --------- */
hpx::util::tuple< > allscale_fun_1720(hpx::util::tuple<IMP_empty_instance1_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__void_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18 > const& var_0) {
    return INS_INIT(hpx::util::tuple< >){};
}
struct __wi_allscale_wi_6_variant_1 {
    static allscale::runtime::unused_type execute(hpx::util::tuple<IMP_empty_instance1_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__void_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18 > const& var_0);
    static hpx::util::tuple< > get_requirements(hpx::util::tuple<IMP_empty_instance1_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__void_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18 > const& var_0);
    static constexpr bool valid = true;
};

hpx::util::tuple< > __wi_allscale_wi_6_variant_1::get_requirements(hpx::util::tuple<IMP_empty_instance1_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__void_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18 > const& var_0) {
    return allscale_fun_1720(var_0);
}
allscale::runtime::unused_type __wi_allscale_wi_6_variant_1::execute(hpx::util::tuple<IMP_empty_instance1_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__void_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18 > const& var_0) {
    return allscale_fun_1722(var_0);
}
/* ------- Function Definitions --------- */
bool allscale_fun_1730(hpx::util::tuple<IMP_empty_instance1_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__void_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18 > const& var_0) {
    return !allscale_fun_1726(var_0);
}
struct __wi_allscale_wi_6_can_split {
    static bool call(hpx::util::tuple<IMP_empty_instance1_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__void_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18 > const& var_0);
};

bool __wi_allscale_wi_6_can_split::call(hpx::util::tuple<IMP_empty_instance1_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__void_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18 > const& var_0) {
    return allscale_fun_1730(var_0);
}
/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_1719(hpx::util::tuple<IMP_empty_instance1_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__void_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18 > const& var_0) {
    if ((bool)false) {
        std::cerr << "" << "Should not be reached!";
    };
    hpx::util::get<1 >(var_0).operator()();
    return ((void)0, allscale::make_ready_treeture());
}
/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_1717(hpx::util::tuple<IMP_empty_instance1_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__void_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18 > const& var_0) {
    return allscale_fun_1719(var_0);
}
struct __wi_allscale_wi_6_variant_0 {
    static allscale::treeture<void > execute(hpx::util::tuple<IMP_empty_instance1_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__void_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18 > const& var_0);
    static hpx::util::tuple< > get_requirements(hpx::util::tuple<IMP_empty_instance1_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__void_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18 > const& var_0);
    static constexpr bool valid = true;
};

allscale::treeture<void > __wi_allscale_wi_6_variant_0::execute(hpx::util::tuple<IMP_empty_instance1_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__void_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18 > const& var_0) {
    return allscale_fun_1717(var_0);
}
hpx::util::tuple< > __wi_allscale_wi_6_variant_0::get_requirements(hpx::util::tuple<IMP_empty_instance1_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__unsigned_space_long_const_space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_749_colon_9_rparen__const_space_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_Observer_lt__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_766_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_774_colon_13_rparen__comma__space__lparen_lambda_space_at_space__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_colon_776_colon_13_rparen__gt__void_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_stencil_dot_h_351_18 > const& var_0) {
    return allscale_fun_1720(var_0);
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative::load(allscale::utils::ArchiveReader& var_0) {
    return {};
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_implementation_colon__colon_coarse_grained_iterative::store(allscale::utils::ArchiveWriter& var_1) const { }
/* ------- Function Definitions --------- */
struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_810_18_double_const_space_double_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_810_18;
typedef struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_810_18_double_const_space_double_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_810_18 IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_810_18_double_const_space_double_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_810_18;

struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_810_18_double_const_space_double_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_810_18 {
    operator allscale_type_1282() const;
    ;
    ;
    double operator()(double const& p2) const;
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_810_18_double_const_space_double_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_810_18 load(allscale::utils::ArchiveReader& var_0);
};

struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_814_28_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_core_colon__colon_OutputStream_space__ampersand__const_space_unsigned_space_long_space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__double_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_814_28;
typedef struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_814_28_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_core_colon__colon_OutputStream_space__ampersand__const_space_unsigned_space_long_space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__double_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_814_28 IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_814_28_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_core_colon__colon_OutputStream_space__ampersand__const_space_unsigned_space_long_space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__double_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_814_28;

struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_814_28_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_core_colon__colon_OutputStream_space__ampersand__const_space_unsigned_space_long_space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__double_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_814_28 {
    allscale::utils::Vector<long, 2 > const& capture_idx;
    allscale::utils::Vector<long, 2 > const& capture_finest_layer_size;
    allscale::api::core::OutputStream& capture_out_stream;
    uint64_t const& capture_t;;
    void operator()(allscale::utils::Vector<long, 2 > const& p2, double p3) const;
};

/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_unsigned_space_long_void_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42::operator()() const {
    allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u >&& var_1 = allscale::runtime::DataItemManager::get((allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >&)(*this).capture_state_field);
    allscale::api::core::FileIOManager& var_2 = allscale::api::core::FileIOManager::getInstance();
    allscale::api::core::Entry var_3 = (allscale::api::core::Entry&&)((allscale::api::core::IOManager<allscale::api::core::impl::reference::FileStorageFactory >&)var_2).createEntry((*this).capture_filename, allscale::api::core::Mode::Text);
    allscale::api::core::OutputStream var_4 = (allscale::api::core::OutputStream&&)((allscale::api::core::IOManager<allscale::api::core::impl::reference::FileStorageFactory >&)var_2).openOutputStream((allscale::api::core::Entry const&)var_3);
    {
        for (int64_t var_5 = (int64_t)0; var_5 < (*this).capture_GridSize.x; ++var_5) {
            {
                for (int64_t var_6 = (int64_t)0; var_6 < (*this).capture_GridSize.y; ++var_6) {
                    {
                        const allscale::utils::Vector<long, 2 > var_7{(var_5), (var_6)};
                        const uint64_t var_8 = (*this).capture_Nt - (uint64_t)1;
                        allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > > var_9;
                        var_9 = var_1.operator[](var_7);
                        while (var_9.getActiveLayer() != (uint32_t)amdadosLayerFine) {
                            var_9.refine(INS_INIT(IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_810_18_double_const_space_double_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_810_18){});
                        };
                        const allscale::utils::Vector<long, 2 > var_10 = (allscale::utils::Vector<long, 2 >&&)allscale::utils::Vector<long, 2 >{var_9.getActiveLayerSize()};
                        var_9.forAllActiveNodes(INS_INIT(IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_814_28_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_core_colon__colon_OutputStream_space__ampersand__const_space_unsigned_space_long_space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__double_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_814_28){var_7, var_10, var_4, var_8});
                    };
                };
            };
        };
    };
    ((allscale::api::core::IOManager<allscale::api::core::impl::reference::FileStorageFactory >&)var_2).close(var_4);
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_810_18_double_const_space_double_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_810_18::operator allscale_type_1282() const {
    assert((bool)false && (bool)"This is an Insieme generated dummy function which should never be called");
}
/* ------- Function Definitions --------- */
double IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_810_18_double_const_space_double_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_810_18::operator()(double const& var_1) const {
    return var_1;
}
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_810_18_double_const_space_double_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_810_18::store(allscale::utils::ArchiveWriter& var_1) const { }
/* ------- Function Definitions --------- */
IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_810_18_double_const_space_double_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_810_18 IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_810_18_double_const_space_double_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_810_18::load(allscale::utils::ArchiveReader& var_0) {
    return {};
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
allscale::utils::Vector<long, 2 > IMP_amdados_colon__colon_Sub2Glo(allscale::utils::Vector<long, 2 > const& var_0, allscale::utils::Vector<long, 2 > const& index, allscale::utils::Vector<long, 2 > const& var_2) {
    const int64_t var_3 = var_0.x;
    const int64_t var_4 = var_0.y;
    return (allscale::utils::Vector<long, 2 >&&)allscale::utils::Vector<long, 2 >{var_3 + index.x * var_2.x, var_4 + index.y * var_2.y};
}
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_814_28_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__allscale_colon__colon_api_colon__colon_core_colon__colon_OutputStream_space__ampersand__const_space_unsigned_space_long_space__ampersand__void_const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__space__ampersand__double_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_814_28::operator()(allscale::utils::Vector<long, 2 > const& index, double var_2) const {
    allscale::utils::Vector<long, 2 > var_3 = (allscale::utils::Vector<long, 2 >&&)IMP_amdados_colon__colon_Sub2Glo(index, (*this).capture_idx, (*this).capture_finest_layer_size);
    (*this).capture_out_stream << (*this).capture_t << " " << var_3.x << " " << var_3.y << " " << var_2 << "\n";
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_unsigned_space_long_void_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42::store(allscale::utils::ArchiveWriter& var_1) const {
    var_1.write<allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > >((*this).capture_state_field);
    var_1.write<std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > >((*this).capture_filename);
    var_1.write<allscale::utils::Vector<long, 2 > >((*this).capture_GridSize);
    var_1.write<uint64_t >((*this).capture_Nt);
}
/* ------- Function Definitions --------- */
IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_unsigned_space_long_void_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42 IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_unsigned_space_long_void_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42::load(allscale::utils::ArchiveReader& var_0) {
    allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > var_1 = var_0.read<allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > >();
    std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > var_2 = var_0.read<std::__cxx11::basic_string<char, std::char_traits<char >, std::allocator<char > > >();
    allscale::utils::Vector<long, 2 > var_3 = var_0.read<allscale::utils::Vector<long, 2 > >();
    uint64_t pos = var_0.read<uint64_t >();
    return {std::move(var_1), std::move(var_2), std::move(var_3), std::move(pos)};
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_empty_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3 IMP_empty_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3::load(allscale::utils::ArchiveReader& var_0) {
    return {};
}
/* ------- Function Definitions --------- */
void IMP_empty_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3::store(allscale::utils::ArchiveWriter& var_1) const { }
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void allscale_fun_1859(hpx::util::tuple<IMP_empty_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_unsigned_space_long_void_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42 > const& var_0) {
    hpx::util::get<1 >(var_0).operator()();
    return;
}
/* ------- Function Definitions --------- */
void allscale_fun_1860(hpx::util::tuple<IMP_empty_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_unsigned_space_long_void_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42 > const& var_0) {
    if ((bool)false) {
        std::cerr << "" << "Should not be reached!";
    };
    hpx::util::get<1 >(var_0).operator()();
    return (void)0;
}
/* ------- Function Definitions --------- */
bool allscale_fun_1857(hpx::util::tuple<IMP_empty_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_unsigned_space_long_void_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42 > const& var_0) {
    return (bool)true;
}
/* ------- Function Definitions --------- */
void allscale_fun_1855(hpx::util::tuple<IMP_empty_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_unsigned_space_long_void_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42 > const& var_0) {
    if (allscale_fun_1857(var_0)) {
        return allscale_fun_1859(var_0);
    } else {
        return allscale_fun_1860(var_0);
    };
}
/* ------- Function Definitions --------- */
allscale::runtime::unused_type allscale_fun_1853(hpx::util::tuple<IMP_empty_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_unsigned_space_long_void_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42 > const& var_0) {
    allscale_fun_1855(var_0);
    return {};
}
/* ------- Function Definitions --------- */
hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > > allscale_fun_1850(hpx::util::tuple<IMP_empty_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_unsigned_space_long_void_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42 > const& var_0) {
    return INS_INIT(hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > >){allscale::runtime::createDataItemRequirement((allscale::runtime::DataItemReference<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > >&)hpx::util::get<1 >(*(const hpx::util::tuple<IMP_empty_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_unsigned_space_long_void_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42 >*)(&var_0)).capture_state_field, allscale::api::core::span(allscale::api::user::data::GridRegion<2>::single((allscale::utils::Vector<long, 2 > const&)allscale::utils::Vector<long, 2 >{(int64_t)0, (int64_t)0}), allscale::api::user::data::GridRegion<2>::single((allscale::utils::Vector<long, 2 > const&)allscale::utils::Vector<long, 2 >{hpx::util::get<1 >(var_0).capture_GridSize.x - (uint8_t)1, hpx::util::get<1 >(var_0).capture_GridSize.y - (uint8_t)1})), allscale::runtime::AccessMode::ReadOnly)};
}
struct __wi_allscale_wi_7_variant_1 {
    static allscale::runtime::unused_type execute(hpx::util::tuple<IMP_empty_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_unsigned_space_long_void_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42 > const& var_0);
    static hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > > get_requirements(hpx::util::tuple<IMP_empty_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_unsigned_space_long_void_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42 > const& var_0);
    static constexpr bool valid = true;
};

allscale::runtime::unused_type __wi_allscale_wi_7_variant_1::execute(hpx::util::tuple<IMP_empty_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_unsigned_space_long_void_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42 > const& var_0) {
    return allscale_fun_1853(var_0);
}
hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > > __wi_allscale_wi_7_variant_1::get_requirements(hpx::util::tuple<IMP_empty_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_unsigned_space_long_void_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42 > const& var_0) {
    return allscale_fun_1850(var_0);
}
/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_1849(hpx::util::tuple<IMP_empty_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_unsigned_space_long_void_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42 > const& var_0) {
    if ((bool)false) {
        std::cerr << "" << "Should not be reached!";
    };
    hpx::util::get<1 >(var_0).operator()();
    return ((void)0, allscale::make_ready_treeture());
}
/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_1847(hpx::util::tuple<IMP_empty_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_unsigned_space_long_void_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42 > const& var_0) {
    return allscale_fun_1849(var_0);
}
struct __wi_allscale_wi_7_variant_0 {
    static allscale::treeture<void > execute(hpx::util::tuple<IMP_empty_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_unsigned_space_long_void_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42 > const& var_0);
    static hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > > get_requirements(hpx::util::tuple<IMP_empty_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_unsigned_space_long_void_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42 > const& var_0);
    static constexpr bool valid = true;
};

hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::Grid<allscale::api::user::data::AdaptiveGridCell<double, allscale::api::user::data::CellConfig<2u, allscale::api::user::data::layers<allscale::api::user::data::layer<1u, 1u >, allscale::api::user::data::layer<8u, 8u >, allscale::api::user::data::layer<2u, 2u > > > >, 2u > > > __wi_allscale_wi_7_variant_0::get_requirements(hpx::util::tuple<IMP_empty_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_unsigned_space_long_void_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42 > const& var_0) {
    return allscale_fun_1850(var_0);
}
allscale::treeture<void > __wi_allscale_wi_7_variant_0::execute(hpx::util::tuple<IMP_empty_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_unsigned_space_long_void_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42 > const& var_0) {
    return allscale_fun_1847(var_0);
}
/* ------- Function Definitions --------- */
bool allscale_fun_1861(hpx::util::tuple<IMP_empty_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_unsigned_space_long_void_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42 > const& var_0) {
    return !allscale_fun_1857(var_0);
}
struct __wi_allscale_wi_7_can_split {
    static bool call(hpx::util::tuple<IMP_empty_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_unsigned_space_long_void_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42 > const& var_0);
};

bool __wi_allscale_wi_7_can_split::call(hpx::util::tuple<IMP_empty_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Grid_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_AdaptiveGridCell_lt_double_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_CellConfig_lt_2_comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layers_lt_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_1_comma__space_1_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_8_comma__space_8_gt__comma__space_struct_space_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_layer_lt_2_comma__space_2_gt__space__gt__space__gt__space__gt__comma__space_2_gt__space__ampersand__std_colon__colon___cxx11_colon__colon_basic_string_lt_char_gt__const_space_allscale_colon__colon_utils_colon__colon_Vector_lt_long_comma__space_2_gt__const_space_unsigned_space_long_void_IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_amdados_slash_code_slash_app_slash_src_slash_scenario_simulation_dot_cpp_797_42 > const& var_0) {
    return allscale_fun_1861(var_0);
}
allscale::treeture<int32_t > __wi_main_variant_0::execute(hpx::util::tuple<int32_t, char** > const& var_0) {
    return allscale_fun_3(var_0);
}
struct __wi_main_variant_1 {
    static allscale::treeture<int32_t > execute(hpx::util::tuple<int32_t, char** > const& var_0);
    static constexpr bool valid = true;
};

allscale::treeture<int32_t > __wi_main_variant_1::execute(hpx::util::tuple<int32_t, char** > const& var_0) {
    return allscale_fun_3(var_0);
}
/* ------- Function Definitions --------- */
bool allscale_fun_1869(hpx::util::tuple<int32_t, char** > const& var_0) {
    return (bool)false;
}
struct __wi_main_can_split {
    static bool call(hpx::util::tuple<int32_t, char** > const& var_0);
};

bool __wi_main_can_split::call(hpx::util::tuple<int32_t, char** > const& var_0) {
    return allscale_fun_1869(var_0);
}

#pragma GCC diagnostic pop

